(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    330239,       7537]
NotebookOptionsPosition[    285957,       6576]
NotebookOutlinePosition[    287406,       6619]
CellTagsIndexPosition[    287363,       6616]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 "New in: ",
 Cell["1.0", "HistoryData",
  CellTags->"New",ExpressionUUID->"a26439bf-37ab-4f14-b449-090ecb541f03"],
 " | Modified in: ",
 Cell[" ", "HistoryData",
  CellTags->"Modified",ExpressionUUID->"4fec6ea4-f555-4cdf-9806-620d6a075e9c"],
 " | Obsolete in: ",
 Cell[" ", "HistoryData",
  CellTags->"Obsolete",ExpressionUUID->"43df266a-394b-4de3-a222-29295befa32f"],
 " | Excised in: ",
 Cell[" ", "HistoryData",
  CellTags->"Excised",ExpressionUUID->"71f39ddd-1a84-47d5-92cb-6c3d9957f6d4"]
}], "History",
 CellID->1247902091,ExpressionUUID->"7cf2bb9b-4e7a-4a34-b449-4ca7fdae92be"],

Cell[CellGroupData[{

Cell["Categorization", "CategorizationSection",
 CellID->1122911449,ExpressionUUID->"65bd0344-1041-43b8-8773-45a00718766e"],

Cell["Tutorial", "Categorization",
 CellLabel->"Entity Type",
 CellID->686433507,ExpressionUUID->"e610afc9-8aad-4bae-9bd2-89bf68c3066c"],

Cell["RefpropLink", "Categorization",
 CellLabel->"Paclet Name",
 CellID->605800465,ExpressionUUID->"143bed86-e5f5-492b-a50c-3a08d82fab1d"],

Cell["RefpropLink`", "Categorization",
 CellLabel->"Context",
 CellID->468444828,ExpressionUUID->"6f43ff07-fe18-42c6-acdf-a214d9a7ff36"],

Cell["RefpropLink/tutorial/Mixtures", "Categorization",
 CellLabel->"URI",ExpressionUUID->"8e388ad3-f37b-4a41-9d81-38fa4775dc20"]
}, Closed]],

Cell[CellGroupData[{

Cell["Keywords", "KeywordsSection",
 CellID->1427428552,ExpressionUUID->"13f11d75-8490-4f67-a1f5-c1d105813c64"],

Cell["REFPROP", "Keywords",
 CellChangeTimes->{{3.8305835204460983`*^9, 3.8305835228187494`*^9}},
 CellID->1251852827,ExpressionUUID->"c92da338-5989-4ec9-b76f-057cb5f917ef"],

Cell["RefpropLink", "Keywords",
 CellChangeTimes->{{3.8305835204460983`*^9, 3.830583527449333*^9}},
 CellID->699981508,ExpressionUUID->"1040a194-e829-4c0a-a1fe-425790cc0647"],

Cell["API", "Keywords",
 CellChangeTimes->{{3.8305835204460983`*^9, 3.830583542457183*^9}},
 CellID->123893237,ExpressionUUID->"a64e6899-9764-4b3f-9dad-76038832866d"],

Cell["Mixtures", "Keywords",
 CellChangeTimes->{{3.8305835204460983`*^9, 3.8305835469422126`*^9}},
 CellID->3979281,ExpressionUUID->"47ea26ea-cbda-4d15-802b-58cc6d61812c"]
}, Closed]],

Cell[CellGroupData[{

Cell["Details", "DetailsSection",
 CellID->307771771,ExpressionUUID->"a835a6a7-5184-4d8f-9d0c-71560e6e9408"],

Cell["Patrick Fourspring", "Details",
 CellChangeTimes->{{3.8305835709021144`*^9, 3.8305835743428793`*^9}},
 CellLabel->"Lead",
 CellID->218895918,ExpressionUUID->"7273cd97-219c-4dc4-93fd-2445790c0377"],

Cell["Jeff Henning", "Details",
 CellChangeTimes->{{3.8305835782693744`*^9, 3.8305835806939125`*^9}},
 CellLabel->"Developers",
 CellID->350963985,ExpressionUUID->"b1b72751-fe64-473d-8d39-3e89068f7030"],

Cell["Jeff Henning", "Details",
 CellChangeTimes->{{3.8305835851420164`*^9, 3.8305835889188843`*^9}},
 CellLabel->"Authors",
 CellID->795871300,ExpressionUUID->"7dc84399-c3d4-4136-ba80-9eef18d8c82c"],

Cell["XXXX", "Details",
 CellLabel->"Feature Name",
 CellID->199739161,ExpressionUUID->"97be3b5f-9830-4227-a6a5-f17f53d87c0d"],

Cell["XXXX", "Details",
 CellLabel->"QA",
 CellID->40625308,ExpressionUUID->"682f54cc-be79-45cd-90ba-5a4ecdc92bcc"],

Cell["XXXX", "Details",
 CellLabel->"DA",
 CellID->357121918,ExpressionUUID->"c67a0823-667e-4fff-b4ab-c4d81662ef36"],

Cell["XXXX", "Details",
 CellLabel->"Docs",
 CellID->35949532,ExpressionUUID->"223123cf-14d8-4e7d-896b-a620922da660"],

Cell["XXXX", "Details",
 CellLabel->"Features Page Notes",
 CellID->929432370,ExpressionUUID->"6804efe2-c832-4526-a80b-5408f1bff1c4"],

Cell["XXXX", "Details",
 CellLabel->"Comments",
 CellID->240026365,ExpressionUUID->"a8363493-987b-4a6b-82d1-ad18540b38b1"]
}, Closed]],

Cell[CellGroupData[{

Cell["Mixtures", "Title",
 CellID->509267359,ExpressionUUID->"4bdcf8cf-f179-4f78-ba0c-dbcec5b4945e"],

Cell[TextData[{
 "This tutorial demonstrates how use ",
 StyleBox[ButtonBox["RefpropLink",
  BaseStyle->"Link",
  ButtonData->"paclet:RefpropLink/guide/RefpropLink"],
  FontWeight->"Bold"],
 " to access ",
 StyleBox["Mixture",
  FontWeight->"Bold"],
 " fluid properties using the High-Level Application Program Interface (API) \
functions introduced NIST REFPROP 10.  These functions can be generally \
slower than the Legacy API functions because, while simpler and more \
convenient, they require a fair amount text string processing in the \
underlying, Fortran-based DLL, which is slow at handling string manipulations \
and comparisons.  Benchmarks of ",
 StyleBox["RefpropLink",
  FontWeight->"Bold"],
 " implementation show that the Legacy API functions can be up to 2X faster \
than performing the same calculations through the High-Level API."
}], "Text",
 CellChangeTimes->{
  3.825365185854108*^9, {3.8253652485963583`*^9, 3.8253652636361246`*^9}, {
   3.825365298034156*^9, 3.825365358377781*^9}, {3.8253653898266926`*^9, 
   3.825365425194127*^9}, {3.8253654712061014`*^9, 3.8253655282585864`*^9}, {
   3.8253655751701508`*^9, 3.825365629242543*^9}, {3.830592363841588*^9, 
   3.8305923653774505`*^9}, {3.830592415841444*^9, 3.8305924259543886`*^9}, {
   3.8305924702249794`*^9, 3.8305924712801294`*^9}, 3.8305925972192335`*^9, {
   3.830592659122594*^9, 3.830592659122594*^9}},
 CellID->1534169418,ExpressionUUID->"ecac9c2a-2303-4dd3-a70a-20ec71ddaf9b"],

Cell[TextData[{
 "That said, the High-Level API consists of basically one single function (",
 StyleBox[ButtonBox["RefProp",
  BaseStyle->"Link",
  ButtonData->"paclet:RefpropLink/ref/RefProp"],
  FontWeight->"Bold"],
 ") through which all of the NIST REFPROP features can be accessed.  This \
makes the High-Level API both simple and versatile, since there is really \
just one function, but it has many parameters and options that allow it to \
access most, if not all of the NIST REFPROP features."
}], "Text",
 CellChangeTimes->{
  3.825365185854108*^9, {3.8253652485963583`*^9, 3.8253652636361246`*^9}, {
   3.825365298034156*^9, 3.825365358377781*^9}, {3.8253653898266926`*^9, 
   3.825365425194127*^9}, {3.8253654712061014`*^9, 3.8253655282585864`*^9}, {
   3.8253655751701508`*^9, 3.825365629242543*^9}, {3.830592363841588*^9, 
   3.8305923653774505`*^9}, {3.830592415841444*^9, 3.8305924259543886`*^9}, {
   3.8305924702249794`*^9, 3.8305924712801294`*^9}, 3.8305925972192335`*^9, {
   3.830592660451041*^9, 3.830592665458644*^9}},
 CellID->573206524,ExpressionUUID->"e5c10053-aad3-4276-b0ac-56425154351b"],

Cell[TextData[{
 "An attempt is made to make this tutorial mirror the ",
 StyleBox[ButtonBox["Mixtures (Legacy API)",
  BaseStyle->"Link",
  ButtonData->"paclet:RefpropLink/tutorial/MixturesLegacyAPI"],
  FontWeight->"Bold"],
 " tutorial as closely as possible so that the difference between these APIs \
is clearly visible.\nBefore diving in, and along the way, one should be \
familiar with the ",
 StyleBox[ButtonBox["Pure Fluids (High-Level API)",
  BaseStyle->"Link",
  ButtonData->"paclet:RefpropLink/tutorial/PureFluids"],
  FontWeight->"Bold"],
 " tutorial and probably delve into the unique way that ",
 StyleBox[ButtonBox["RefpropLink",
  BaseStyle->"Link",
  ButtonData->"paclet:RefpropLink/guide/RefpropLink"],
  FontWeight->"Bold"],
 " facilitates units by reviewing the ",
 StyleBox[ButtonBox["RefpropLink Units",
  BaseStyle->"Link",
  ButtonData->"paclet:RefpropLink/tutorial/Units"],
  FontWeight->"Bold"],
 " tutorial."
}], "Text",
 CellChangeTimes->{
  3.825365185854108*^9, {3.8253652485963583`*^9, 3.8253652636361246`*^9}, {
   3.825365298034156*^9, 3.825365358377781*^9}, {3.8253653898266926`*^9, 
   3.825365425194127*^9}, {3.8253654712061014`*^9, 3.8253655282585864`*^9}, {
   3.8253655751701508`*^9, 3.825365629242543*^9}, {3.830592363841588*^9, 
   3.8305923653774505`*^9}, {3.830592415841444*^9, 3.8305924259543886`*^9}, {
   3.8305924702249794`*^9, 3.8305924712801294`*^9}, 3.8305925972192335`*^9, {
   3.830592660451041*^9, 3.830592664448346*^9}, {3.830592720165287*^9, 
   3.830592756900011*^9}, {3.8311875832244053`*^9, 3.83118758631913*^9}},
 CellID->22039004,ExpressionUUID->"41b8ac7d-2391-4fa9-8e6e-faf3729d9b2d"],

Cell[TextData[{
 "Not all functionalities are demonstrated here and for more complex usage, \
the ",
 StyleBox[ButtonBox["NIST REFPROP Online DLL Documentation",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://refprop-docs.readthedocs.io/en/latest/DLL/index.html"], 
    None}],
  FontWeight->"Bold"],
 " [1] should be consulted as well."
}], "Text",
 CellChangeTimes->{
  3.825365185854108*^9, {3.8253652485963583`*^9, 3.8253652636361246`*^9}, {
   3.825365298034156*^9, 3.825365358377781*^9}, {3.8253653898266926`*^9, 
   3.825365425194127*^9}, {3.8253654712061014`*^9, 3.8253655282585864`*^9}, {
   3.8253655751701508`*^9, 3.825365629242543*^9}, {3.830592363841588*^9, 
   3.8305923653774505`*^9}, {3.830592415841444*^9, 3.8305924259543886`*^9}, {
   3.8305924702249794`*^9, 3.8305924712801294`*^9}, 3.8305925972192335`*^9, {
   3.830592660451041*^9, 3.830592664448346*^9}, {3.830592720165287*^9, 
   3.8305927820966024`*^9}, {3.8306001804374695`*^9, 3.830600181508604*^9}},
 CellID->304173396,ExpressionUUID->"c617ee11-e94c-4df9-a117-e989ebe84ad9"],

Cell[CellGroupData[{

Cell["Initializing RefpropLink", "Section",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.82257418252599*^9, 3.8225741905185843`*^9}, {
  3.8225742225409875`*^9, 3.822574224990436*^9}},
 CellID->43322749,ExpressionUUID->"c6d86421-fe50-45ed-aba3-6f4b58759fcb"],

Cell[TextData[{
 "Before initializing the ",
 StyleBox[ButtonBox["RefpropLink",
  BaseStyle->"Link",
  ButtonData->"paclet:RefpropLink/guide/RefpropLink"],
  FontWeight->"Bold"],
 " package, it is a good idea to clear out any variables and previously \
loaded packages using the ",
 Cell[BoxData[
  ButtonBox["Quit",
   BaseStyle->"Link"]], "InlineFormula",ExpressionUUID->
  "51c43188-95f0-46ab-b9b9-4ae1d0235a87"],
 " command.  This restarts the Mathematica kernel and clears out any previous \
definitions that have been loaded.  This is especially true if you are \
reloading ",
 StyleBox["RefpropLink",
  FontWeight->"Bold"],
 " without shutting down Mathematica."
}], "Text",
 CellChangeTimes->{{3.8225767649737487`*^9, 3.822577004106141*^9}},
 CellID->573431709,ExpressionUUID->"04c63ed5-c074-431a-83be-92b3c7abea20"],

Cell[CellGroupData[{

Cell["Restart the kernel", "MathCaption",
 CellChangeTimes->{{3.822577021923484*^9, 3.822577028146839*^9}},
 CellID->279625114,ExpressionUUID->"d4512b50-8c09-416c-842c-04c05f7632f6"],

Cell[BoxData["Quit"], "Input",
 CellChangeTimes->{{3.8225770347022777`*^9, 3.822577035388455*^9}},
 CellLabel->"In[51]:=",
 CellID->713385182,ExpressionUUID->"a43c531c-a210-44b7-8145-fdc514c04683"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Use the ",
 StyleBox["Needs",
  FontWeight->"Bold"],
 " function to load the RefpropLink package (Note the \"back apostrophe\")"
}], "MathCaption",
 CellChangeTimes->{{3.822577113443695*^9, 3.8225771226909647`*^9}, {
   3.8225775112915707`*^9, 3.822577549578165*^9}, 3.8305928125461693`*^9},
 CellID->872464924,ExpressionUUID->"fc251668-1e8a-43cf-98a8-a8f4ca91312f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<RefpropLink`\>\"", "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->68619680,ExpressionUUID->"0c6d5abb-127f-4898-af6b-6d7fea7b2606"],

Cell[BoxData[
 FrameBox["\<\"Found NIST REFPROP Version: 10.0.0.2\"\>",
  Background->RGBColor[0.88, 1, 0.88],
  FrameStyle->None,
  StripOnInput->False]], "Print",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQA2IW66L/f6reOHIZmevlVr9xvCfCGQGi7Qwnnc8D0mvq
3ulWAOkyDVvtViA9M0vnTjeQ/rKSna0HSOe9zRYD0Rrz/+mB6BOKh1y2NADF
b1rPOgCkp72UKUtuBNJvbl8B0dGOLq/mtL9xfGG6XnQukH7yyswTRF/5oO0H
or9Y1kd9AdIOe5n2MHW8cbylEXsaRN8om/waRFeltv0E0VckNYqYgfSFU/sq
QLTf2o9ZrED6xwHLRhD9SJpjOoiuf/p3K4iWOWlwBERrFHJdAtHfQrSPywHp
KK3td0H0vFObXoHoQ3mzvoLoQuazFt5AWuX9ZEcQvfCZZjGI/hZXXg6id32p
nRsHpD8dE7/h1vXGcVFyOk8qkG7in9e9AEiH28dOB9E3ataGLwPSyyZeXgii
AUlJvz4=
  "],
 CellLabel->"During evaluation of In[1]:=",
 CellID->16353655,ExpressionUUID->"e29079e0-54de-4488-b3d1-e28ba8d56fdc"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "That's it!  ",
 StyleBox["RefpropLink",
  FontWeight->"Bold"],
 " is now loaded and all of it's public functions and variables are available \
for use.  The initialization will print out the version of NIST REFPROP that \
is installed and being used by RefpropLink.  If a REFPROP installation is not \
found, an error message will display.  "
}], "Text",
 CellChangeTimes->{{3.8225776805236907`*^9, 3.822577724863063*^9}, {
   3.8225986919584985`*^9, 3.822598753630573*^9}, {3.822766216495821*^9, 
   3.822766322911174*^9}, 3.8305928533440237`*^9},
 CellID->86903750,ExpressionUUID->"72577682-58d7-4abd-b71c-a7eec2379e8f"],

Cell[TextData[{
 "This initialization step only needs to be performed once at the beginning \
of a Mathematica session and it's a good idea to put these commands at the \
top of any notebook file.  However, this step doesn't have to be executed in \
the current notebook.  It can be executed in a completely separate notebook, \
but should be executed ",
 StyleBox["before",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " any commands in the current notebook in the current Mathematica session."
}], "Text",
 CellChangeTimes->{
  3.8227662541361265`*^9, {3.825365687193623*^9, 3.825365689234166*^9}, 
   3.830592870568941*^9},
 CellID->159972398,ExpressionUUID->"41b1b0bb-9a79-422e-9c58-f3c859fa1d8d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Load a Mixture", "Section",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.822917910705035*^9, 3.8229179146704288`*^9}},
 CellID->471261456,ExpressionUUID->"248c0337-16e2-49b5-9cc9-36570fcd22db"],

Cell[BoxData[GridBox[{
   {
    RowBox[{"RefProp", "[", 
     RowBox[{
      StyleBox["hfld", "TI"], ",", 
      StyleBox["hIn", "TI"], ",", 
      StyleBox["hOut", "TI"], ",", 
      StyleBox["a", "TI"], ",", 
      StyleBox["b", "TI"], ",", " ", 
      StyleBox["z", "TI"]}], "]"}], Cell["\<\
Calculate the properties specified in the hOut string for the inputs \
specified in the hIn string for the fluid or mixture given in the hFld string \
and composition z.\
\>", "TableText",ExpressionUUID->"f49b2823-9791-4b22-90c6-85ea4885b065"]},
   {
    RowBox[{"SetFluids", "[", 
     StyleBox["hFld", "TI"], "]"}], Cell["\<\
Load pure-fluid files specified in the fluid mixture string; no properties \
calculated.\
\>", "TableText",ExpressionUUID->"65fcbe84-c267-42ca-af4f-8dd35ab3e6f0"]},
   {
    RowBox[{"SetMixture", "[", 
     StyleBox["hMix", "TI"], "]"}], Cell["\<\
Load a pre-defined mixture (*.mix) file and return its composition.\
\>", "TableText",ExpressionUUID->"eb029e08-12d7-42a4-95b5-1c37d1796e97"]}
  }]], "DefinitionBox",
 CellChangeTimes->{{3.8253657331377487`*^9, 3.8253657351543837`*^9}, {
  3.8253657889774733`*^9, 3.8253658467140675`*^9}, {3.8255734531131697`*^9, 
  3.8255734553701353`*^9}, {3.8255735051859274`*^9, 3.8255735872345467`*^9}, {
  3.8255736385613394`*^9, 3.825573674579091*^9}, {3.825573799896959*^9, 
  3.8255738325226955`*^9}, {3.825573879762413*^9, 3.8255739526734633`*^9}, {
  3.8305931671836233`*^9, 3.8305931687115355`*^9}, {3.830593352457985*^9, 
  3.8305933732673197`*^9}},
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.35], {
      Scaled[0.65]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->2096742444,ExpressionUUID->"d871f8ef-61ae-4307-a621-742e0d6188a4"],

Cell["High-Level API functions for loading mixtures.", "Caption",
 CellChangeTimes->{{3.825365870777727*^9, 3.825365887345457*^9}},
 CellID->1891092685,ExpressionUUID->"b713d90d-882f-47ee-af1e-b5996c7fe26b"],

Cell[TextData[{
 "There are basically three ways to load a mixture of fluids into REFPROP.  \
The first is the same as for loading pure fluids - using ",
 Cell[BoxData[
  ButtonBox["RefProp",
   BaseStyle->"Link",
   ButtonData->"paclet:RefpropLink/ref/RefProp"]], "InlineFormula",
  ExpressionUUID->"9c8c22a7-0148-48d6-aaa1-96aca607419a"],
 " or ",
 Cell[BoxData[
  ButtonBox["SetFluids",
   BaseStyle->"Link",
   ButtonData->"paclet:RefpropLink/ref/SetFluids"]], "InlineFormula",
  ExpressionUUID->"fc020874-24a0-4665-aad7-6f0fef3aed37"],
 "; but specifying more than one fluid in the fluid string separated by \
semi-colons or asterisks.  The second is to load a single pseudo-pure fluid \
file (*.ppf). The third is to load a pre-defined mixture file (*.mix).  All \
three options will be explored here.  Air is a mixture of gasses (pure \
fluids) that is available in all three formats, so this mixture will be used \
to demonstrate."
}], "Text",
 CellChangeTimes->{{3.8229785613603697`*^9, 3.8229788234084845`*^9}, {
  3.8229793354080253`*^9, 3.8229793986947813`*^9}, {3.825572505536702*^9, 
  3.8255725494971604`*^9}, {3.825572680385178*^9, 3.8255728335616283`*^9}},
 CellID->192609466,ExpressionUUID->"179dba0e-adb6-4c34-a568-12a6abcc6456"],

Cell[CellGroupData[{

Cell["Multiple Pure Fluids ", "Subsection",
 CellChangeTimes->{{3.822979151488965*^9, 3.8229791750788884`*^9}},
 CellID->133116597,ExpressionUUID->"ad59d7d9-4eb4-4833-be6f-2d784ae3b133"],

Cell[TextData[{
 "The RefProp function has the capability to open multiple fluid files at \
once; the input string parameter, ",
 Cell[BoxData[
  StyleBox["hFld", "TI"]], "InlineFormula",ExpressionUUID->
  "307b6580-7741-42a3-b808-a2defe16bf37"],
 ", can contain multiple fluid names separated by semi-colons or asterisks.  \
For example, a four-component representation for Air would be specified by \
setting ",
 Cell[BoxData[
  StyleBox["hFld", "TI"]], "InlineFormula",ExpressionUUID->
  "cde49206-a3c2-4bc7-841b-dd99612e7206"],
 " to the string, \"Nitrogen;Argon;Oxygen;CO2\".  Asterisks can be used as \
the separator as well, but the two should not be mixed.  Up to a maximum of \
20 fluids can be combined in the ",
 Cell[BoxData[
  StyleBox["hFld", "TI"]], "InlineFormula",ExpressionUUID->
  "d1d0912a-7f00-46d1-bc77-632132136be0"],
 " string. The actual REFPROP fluid files have the extension \".FLD\", but \
this extension is optional in the fluid name string."
}], "Text",
 CellChangeTimes->{{3.8225897170159855`*^9, 3.8225898883018484`*^9}, {
   3.822590061174466*^9, 3.8225901116225367`*^9}, {3.8225902464708996`*^9, 
   3.822590432536229*^9}, {3.8225906287025433`*^9, 3.8225907795420933`*^9}, {
   3.822944890958398*^9, 3.8229449236120915`*^9}, {3.822978851267954*^9, 
   3.8229790607705965`*^9}, 3.8229813483963327`*^9, {3.8255728441363554`*^9, 
   3.825572930457549*^9}, {3.825573096136528*^9, 3.8255733642646446`*^9}, {
   3.8305928972565155`*^9, 3.83059289751283*^9}, 3.8305930583917036`*^9},
 CellID->18384341,ExpressionUUID->"818a0c47-5dc1-49a8-a085-d442b7e654be"],

Cell[TextData[{
 "Performing a mixture property calculation with ",
 Cell[BoxData[
  ButtonBox["RefProp",
   BaseStyle->"Link",
   ButtonData->"paclet:RefpropLink/ref/RefProp"]], "InlineFormula",
  ExpressionUUID->"d5bf2db5-decf-44ea-8722-a5117beb088c"],
 " requires a final, additional parameter, ",
 Cell[BoxData[
  StyleBox["z", "TI"]], "InlineFormula",ExpressionUUID->
  "bff4abf4-8bce-4d9b-a521-bfdf448e7775"],
 ", which contains the mixture composition (mole fractions) of the \
4-component mixture.  When setting a mixture, this composition array will \
also be passed back in the output List."
}], "Text",
 CellChangeTimes->{{3.822979836688284*^9, 3.8229799254887743`*^9}, {
  3.8255734333848233`*^9, 3.825573438073285*^9}, {3.8255740802413673`*^9, 
  3.825574195040428*^9}, {3.830593075736302*^9, 3.830593093336219*^9}, {
  3.830593143142967*^9, 3.830593149024235*^9}, {3.830593277382807*^9, 
  3.830593312375193*^9}},
 CellID->840914914,ExpressionUUID->"c2a48b0d-81ff-49fa-8629-c3a7332c9556"],

Cell[CellGroupData[{

Cell["\<\
Use setup to load multiple pure fluids for a 4-component Air mixture\
\>", "MathCaption",
 CellChangeTimes->{{3.822979433530615*^9, 3.8229794859105043`*^9}},
 CellID->94686831,ExpressionUUID->"c1f577a4-5958-43d2-879d-ce734334ad58"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hAIR4", "=", "\"\<Nitrogen;Argon;Oxygen;CO2\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["z", "AIR4"], "=", 
   RowBox[{"{", 
    RowBox[{"0.78084", ",", "0.00934", ",", "0.20948", ",", "0.00034"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"RefProp", "[", 
  RowBox[{"hAIR4", ",", "\"\<TP\>\"", ",", "\"\<D\>\"", ",", 
   RowBox[{"72", "\[Degree]F"}], ",", 
   RowBox[{"1", "atm"}], ",", 
   SubscriptBox["z", "AIR4"]}], "]"}]}], "Input",
 CellChangeTimes->{{3.822979499699622*^9, 3.822979529136885*^9}, {
  3.8229797124335938`*^9, 3.8229797448868194`*^9}, {3.8229797751518726`*^9, 
  3.8229798130066195`*^9}, {3.822979980998293*^9, 3.8229800092177844`*^9}, {
  3.825574257482438*^9, 3.8255743985692*^9}, {3.825581549547346*^9, 
  3.8255815667134485`*^9}, {3.8255861794424887`*^9, 3.8255861833530245`*^9}},
 CellLabel->"In[1]:=",
 CellID->560684107,ExpressionUUID->"19882ad1-a39d-4737-a153-a4b07372978b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"D\"\>", "\[Rule]", 
    TemplateBox[{"0.04127195740783054`", 
      RowBox[{
       "\"mol\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
        "\"L\""}], "moles per liter", 
      FractionBox["\"Moles\"", "\"Liters\""]},
     "Quantity"]}], ",", 
   RowBox[{"\<\"z\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.78084`", ",", "0.00934`", ",", "0.20948`", ",", "0.00034`"}], 
     "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8229800135302925`*^9, 3.8230561487826743`*^9, {3.8255744161980934`*^9, 
   3.825574445286316*^9}, 3.82557469606376*^9, {3.825581556821869*^9, 
   3.825581568151608*^9}, {3.8255861666616488`*^9, 3.8255861851252575`*^9}, 
   3.825599715209961*^9, 3.8295536127228107`*^9, 3.830593228924474*^9, 
   3.830776932460271*^9, 3.8307770239585238`*^9, 3.830788805715322*^9},
 CellLabel->"Out[3]=",
 CellID->336681022,ExpressionUUID->"bdc72533-39e6-413f-838e-7c51cd445017"]
}, Open  ]]
}, Open  ]],

Cell["\<\
In this case, the composition array is used to provide the mole fractions of \
each of the components.  Alternatively, the mole fractions can be embedded in \
the fluid mixture string; intermittently, separated by semicolons or \
asterisks, following each pure fluid name, or all at the end, separated from \
the fluid strings by a pipe (vertical bar) or tilde (~) character. \
\>", "Text",
 CellChangeTimes->{{3.8255997575148134`*^9, 3.8255998738826685`*^9}, {
  3.82559993087232*^9, 3.8255999311126766`*^9}, {3.825617731153414*^9, 
  3.8256178960724525`*^9}, {3.830593023319503*^9, 3.830593042367572*^9}},
 CellID->90476344,ExpressionUUID->"c87e86a1-7c49-4f66-b95f-6ee8e67ad458"],

Cell[CellGroupData[{

Cell["Valid mixture strings containing molar composition values.", \
"MathCaption",
 CellChangeTimes->{{3.8256179060098524`*^9, 3.8256179213458786`*^9}},
 CellID->1041970,ExpressionUUID->"e3a9f5a9-bffb-4a94-85f1-12f1558f6b8b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hFldMix1", "=", "\"\<R134a;0.3; R1234yf;0.3; R1234ze(Z);0.4\>\""}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "hFldMix2", " ", "=", " ", 
   "\"\<CO2;0.2 * isobutane;0.3 * propadiene;0.5\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "hFldMix3", " ", "=", " ", "\"\<Nitrogen;Oxygen;Argon|0.4;0.3;0.3\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "hFldMix4", " ", "=", " ", 
   "\"\<Nitrogen; Oxygen; Argon ~ 0.4; 0.3; 0.3\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["D", "mix"], ",", 
    SubscriptBox["z", "mix"]}], "}"}], "=", 
  RowBox[{
   RowBox[{"RefProp", "[", 
    RowBox[{"hFldMix4", ",", "\"\<TP\>\"", ",", "\"\<D\>\"", ",", 
     RowBox[{"72", "\[Degree]F"}], ",", 
     RowBox[{"1", "atm"}]}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.822377782843674*^9, 3.822377920041193*^9}, {
   3.8223781540213957`*^9, 3.822378210453458*^9}, {3.822378246189872*^9, 
   3.8223782489175777`*^9}, {3.822378347733246*^9, 3.8223783977973986`*^9}, {
   3.8223784285840473`*^9, 3.8223784869818554`*^9}, 3.8256179788590918`*^9},
 CellLabel->"In[4]:=",
 CellID->257830515,ExpressionUUID->"84722ac9-b88e-43df-9008-71b6fd0d51ef"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"0.04127873676206025`", 
     RowBox[{
      "\"mol\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"L\""}],
      "moles per liter", 
     FractionBox["\"Moles\"", "\"Liters\""]},
    "Quantity"], ",", 
   RowBox[{"{", 
    RowBox[{"0.4`", ",", "0.3`", ",", "0.3`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8256179852190914`*^9, 3.829553616982394*^9, 
  3.8307770374454355`*^9, 3.830788811490882*^9},
 CellLabel->"Out[8]=",
 CellID->575262355,ExpressionUUID->"068b6ae5-9bd0-4c7f-a856-fef61fae24b5"]
}, Open  ]]
}, Open  ]],

Cell["\<\
In these cases, the component mole fractions are not passed in the z array, \
but are instead returned and captured in a z array as the last element in the \
return list.\
\>", "Text",
 CellChangeTimes->{{3.82561799893043*^9, 3.825618061058329*^9}},
 CellID->56564293,ExpressionUUID->"81e35d55-d301-4d33-b4e8-1613b36d6ed9"],

Cell["\<\
Finally, to set the fluid mixture components without calculating any mixture \
properties, the fluid name string can be passed instead to SetFluids, without \
providing the mixture composition array.  This function calls the Legacy API \
function Setup and returns the error code, which is zero (0) if the fluids \
are properly loaded.\
\>", "Text",
 CellChangeTimes->{{3.8256181120818863`*^9, 3.825618299659344*^9}},
 CellID->1014628631,ExpressionUUID->"d05e45af-7e59-4dd9-b4a3-5109499170d6"],

Cell[CellGroupData[{

Cell["Set Mixture Components using SetFluids", "MathCaption",
 CellChangeTimes->{{3.825618309378355*^9, 3.8256183199460983`*^9}},
 CellID->130874322,ExpressionUUID->"95eb878c-87e6-4c2e-839b-34bcf672b8ba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetFluids", "[", "\"\<Nitrogen;Argon;Oxygen;CO2\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8256183255990005`*^9, 3.8256183509771004`*^9}},
 CellLabel->"In[9]:=",
 CellID->40545384,ExpressionUUID->"5dc07631-3e2e-425e-9a49-095483c7c6b5"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.8256183559079432`*^9, 3.829553621865367*^9, 
  3.830777043317724*^9, 3.830788823032001*^9},
 CellLabel->"Out[9]=",
 CellID->654334733,ExpressionUUID->"9030f158-88ca-4244-88d0-27317ac70238"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Once the fluid is loaded, all subsequent ",
 StyleBox["RefProp",
  FontWeight->"Bold"],
 " calls for the same mixture can be made without a fluid name string, but ",
 StyleBox["must",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " pass a molar composition array."
}], "MathCaption",
 CellChangeTimes->{{3.8256183684743166`*^9, 3.8256184141452017`*^9}, {
  3.830593487934545*^9, 3.8305935499027357`*^9}, {3.8305935858864665`*^9, 
  3.830593586198633*^9}},
 CellID->158736981,ExpressionUUID->"d65e462b-bb14-436c-918a-e839edf0834d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RefProp", "[", 
  RowBox[{"\"\<TP\>\"", ",", "\"\<D\>\"", ",", 
   RowBox[{"72", "\[Degree]F"}], ",", 
   RowBox[{"1", "atm"}], ",", 
   SubscriptBox["z", "AIR4"]}], "]"}]], "Input",
 CellChangeTimes->{3.8256184716085787`*^9},
 CellLabel->"In[10]:=",
 CellID->6273109,ExpressionUUID->"d6836775-0a03-4268-9e26-7cf1868bbe42"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"D\"\>", "\[Rule]", 
   TemplateBox[{"0.04127195740783054`", 
     RowBox[{
      "\"mol\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"L\""}],
      "moles per liter", 
     FractionBox["\"Moles\"", "\"Liters\""]},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{3.825618478287698*^9, 3.829553625282234*^9, 
  3.830777049550048*^9, 3.830788826545574*^9},
 CellLabel->"Out[10]=",
 CellID->6511671,ExpressionUUID->"dd103271-b403-400d-a4ca-c59b62f0133f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pseudo-Pure Fluids (.PPF)", "Subsection",
 CellChangeTimes->{{3.8229791862160673`*^9, 3.822979190882613*^9}, {
  3.822979226022629*^9, 3.8229792288580136`*^9}},
 CellID->44886640,ExpressionUUID->"691e100a-299c-4252-9d31-627554170099"],

Cell[TextData[{
 "NIST REFPROP includes a number of ",
 StyleBox["pseudo-pure",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " fluids in the ",
 StyleBox["FLUIDS\\",
  FontFamily->"Courier New",
  FontWeight->"Normal"],
 " directory.  Pseudo-pure fluids are mixtures, but their properties have \
been curve fit to a single equation set so that its properties are calculated \
as though it is a pure fluid.  If loading a pseudo-pure fluid, a single fluid \
file is provided and the file name ",
 StyleBox["must",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " include the extension \".PPF\".  "
}], "Text",
 CellChangeTimes->{{3.822979071135902*^9, 3.822979134879406*^9}, {
  3.8256185090165677`*^9, 3.825618534273033*^9}, {3.830593667902701*^9, 
  3.8305936750874796`*^9}},
 CellID->678210058,ExpressionUUID->"d1c425dd-4dfd-453d-a402-50ef5ff20220"],

Cell[CellGroupData[{

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  ButtonBox["RefProp",
   BaseStyle->"Link",
   ButtonData->"paclet:RefpropLink/ref/RefProp"]], "InlineFormula",
  FontWeight->"Bold",ExpressionUUID->"a757dd0c-6c3f-43b2-bf53-da74d019b9db"],
 " to load the pseudo-pure fluid for Air"
}], "MathCaption",
 CellChangeTimes->{{3.8229800261863985`*^9, 3.822980043639744*^9}, {
  3.8256185539214687`*^9, 3.8256185549696655`*^9}, {3.8290213772909636`*^9, 
  3.829021388361393*^9}},
 CellID->230227444,ExpressionUUID->"558c7bd2-54f0-4781-b5ab-f737d010baaa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RefProp", "[", 
  RowBox[{"\"\<AIR.PPF\>\"", ",", "\"\<TP\>\"", ",", "\"\<D\>\"", ",", 
   RowBox[{"72", "\[Degree]F"}], ",", 
   RowBox[{"1", "atm"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.822980078571312*^9, 3.82298010552123*^9}, {
   3.825618563465972*^9, 3.8256185820662394`*^9}, 3.82561865417843*^9},
 CellLabel->"In[47]:=",
 CellID->16465047,ExpressionUUID->"e07b9f19-ed46-4a75-945f-a4b3be0a6513"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"D\"\>", "\[Rule]", 
   TemplateBox[{"0.04127309831874532`", 
     RowBox[{
      "\"mol\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"L\""}],
      "moles per liter", 
     FractionBox["\"Moles\"", "\"Liters\""]},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.822980108404521*^9, 3.8229824735883207`*^9, 3.8256186608396187`*^9, 
   3.825759354492749*^9, 3.8257593880968995`*^9, 3.8295536321937256`*^9, 
   3.8307770537607555`*^9, 3.8307771157977886`*^9, {3.830788830745372*^9, 
   3.830788857642413*^9}, 3.8307889919700136`*^9},
 CellLabel->"Out[47]=",
 CellID->30610459,ExpressionUUID->"af1c55d2-46b1-4c85-aacd-1282021c1e22"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Note that when using pseudo-pure fluids, there is only one component \
loaded, Air in this case, which is treated for all function calls as a pure \
fluid.  The molar composition array, ",
 Cell[BoxData[
  StyleBox["z", "TI"]], "InlineFormula",ExpressionUUID->
  "756ec5ad-1fd4-44ed-92b5-0910654f148f"],
 ", is {1.0} and can be omitted from any property functions; just as for a \
pure fluid.  This greatly simplifies property calls and avoids having to use \
REFPROP's mixing rules, since all the work is done up front to create the \
pseudo-pure fluid."
}], "Text",
 CellChangeTimes->{{3.822980114537118*^9, 3.822980320758537*^9}, {
  3.8305937289663696`*^9, 3.8305937508069077`*^9}},
 CellID->747896140,ExpressionUUID->"96d20369-94f6-44c4-83e8-b250bc1ecefc"],

Cell["\<\
Note also that the returned density is slightly different than the value \
returned by the four component mixture previously evaluated above, which uses \
REFPROPs mixing rules.\
\>", "Text",
 CellChangeTimes->{{3.8256186808989563`*^9, 3.8256187384181604`*^9}, {
  3.829021428601782*^9, 3.8290214292271075`*^9}, {3.830593782941938*^9, 
  3.8305937954464827`*^9}},
 CellID->89322858,ExpressionUUID->"8666704d-00fc-487e-af5e-328c3ec8218d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pre-defined Mixture Files (.MIX) ", "Subsection",
 CellChangeTimes->{{3.822979202048749*^9, 3.822979221954479*^9}},
 CellID->3660113,ExpressionUUID->"dd163f83-6349-4fc6-9178-e3d67ca44ad1"],

Cell["\<\
Pre-defined mixtures are found in the MIXTURE\\ directory of the NIST REFPROP \
installation and end with the file extension \".MIX\".  They contain \
specifically formatted text that identifies the mixture fluids, its bulk, \
single-phase composition, and other fluid constants and parameters.  Here is \
the tertiary mixture definition for Air in the AIR.MIX file.\
\>", "Text",
 CellChangeTimes->{{3.8229803408318167`*^9, 3.8229805506216908`*^9}},
 CellID->219397012,ExpressionUUID->"14c4cde5-c772-436e-b5b9-1751e827d891"],

Cell["\<\
Air (dry)
 28.958600656 132.83069752889762 3852.042257237323 11.900166877898968
 3
NITROGEN.FLD
ARGON.FLD
OXYGEN.FLD
 .7812
 .0092
 .2096
 0\
\>", "Text",
 PageWidth:>WindowWidth,
 CellFrame->True,
 CellChangeTimes->{{3.822980661372466*^9, 3.822980689972968*^9}, {
   3.8306593222478857`*^9, 3.8306593222478857`*^9}, {3.842702667119215*^9, 
   3.842702673311677*^9}, {3.8427030862304373`*^9, 3.8427031267919703`*^9}, 
   3.8427031736526575`*^9},
 ParagraphSpacing->{0, 2},
 CellID->231902546,ExpressionUUID->"5fb59430-59f3-4d21-bf90-6aaf62c0bd5a"],

Cell["Pre-defined mixture definition in AIR.MIX", "Caption",
 CellChangeTimes->{{3.822944946750199*^9, 3.822944957773711*^9}, {
  3.8229810547009077`*^9, 3.822981098301292*^9}},
 CellID->200475462,ExpressionUUID->"d880c8cd-24dc-48ef-9ee7-a60476ff73ba"],

Cell["\<\
This file contains the mixture name, the mixture molecular weight and \
critical properties, followed by the number of components, each component \
fluid name, and the mole fraction of each component.  User \".MIX\" files can \
be created easily in any plain-text editor, or using the NIST REFPROP GUI to \
build a mixture and save a custom \".MIX\" file. \
\>", "Text",
 CellChangeTimes->{{3.822981104198517*^9, 3.822981278406536*^9}, {
  3.8305951207667837`*^9, 3.830595189628565*^9}},
 CellID->66519272,ExpressionUUID->"9c99eda1-7b31-41ff-a8aa-17be42c6b6f8"],

Cell[TextData[{
 StyleBox["NOTE: ",
  FontWeight->"Normal"],
 StyleBox["On Windows, when creating a custom \".MIX\" file through the NIST \
REFPROP GUI, the user must have write access to the ",
  FontWeight->"Normal",
  FontSlant->"Italic"],
 StyleBox["REFPROP\\MIXTURES\\",
  FontFamily->"Courier New",
  FontWeight->"Normal"],
 StyleBox[" directory.  If the user does not have access to this directory, \
the mixture file will be written to the user's virtual store directory, \
typically at:",
  FontWeight->"Normal",
  FontSlant->"Italic"],
 StyleBox[" \"",
  FontWeight->"Normal"],
 StyleBox["C:\\Users\\%username%\\AppData\\Local\\VirtualStore\\Program Files \
(x86)\\REFPROP\\MIXTURES\"",
  FontFamily->"Courier New",
  FontWeight->"Normal"]
}], "Text",
 CellChangeTimes->{{3.830595200982159*^9, 3.830595317108487*^9}, {
  3.830595459908455*^9, 3.8305955149272623`*^9}, {3.8305955539827847`*^9, 
  3.8305955650910597`*^9}, {3.830595610712037*^9, 3.830595610712037*^9}, {
  3.830595770005391*^9, 3.830595775836766*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellID->195748038,ExpressionUUID->"9bcc1985-6bfa-40f6-92b5-79eb34a23922"],

Cell[TextData[{
 "To load a pre-defined mixture file, use the ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["SetMixture",
    FontWeight->"Bold"],
   BaseStyle->"Link",
   ButtonData->"paclet:RefpropLink/ref/SetMixture"]], "InlineFormula",
  ExpressionUUID->"57d82e91-8da4-4936-8c23-2946abb821c8"],
 " function, or use ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["RefProp",
    FontWeight->"Bold"],
   BaseStyle->"Link",
   ButtonData->"paclet:RefpropLink/ref/RefProp"]], "InlineFormula",
  ExpressionUUID->"a963ba2a-4e11-43c5-bf45-0dfd60bd4199"],
 " directly, passing a fluid string with the \".MIX\" extension.  When using \
the ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["SetMixture",
    FontWeight->"Bold"],
   BaseStyle->"Link",
   ButtonData->"paclet:RefpropLink/ref/SetMixture"]], "InlineFormula",
  ExpressionUUID->"3ec8a5b7-38d8-4eb7-993a-15b1a15f84f6"],
 " function, the \".MIX\" extension is optional (since ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["SetMixture",
    FontWeight->"Bold"],
   BaseStyle->"Link",
   ButtonData->"paclet:RefpropLink/ref/SetMixture"]], "InlineFormula",
  ExpressionUUID->"3a0adeac-bd84-4f91-bb0f-dc1d0bdb076b"],
 " expects a mixture file) and the full path can be specified if the mixture \
file is located somewhere other than the default MIXTURES\\ folder.  If using \
the ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["RefProp",
    FontWeight->"Bold"],
   BaseStyle->"Link",
   ButtonData->"paclet:RefpropLink/ref/RefProp"]], "InlineFormula",
  ExpressionUUID->"e73d5f30-b99b-4ee1-b972-b6e393e895c7"],
 " function directly, the \".MIX extension is required."
}], "Text",
 CellChangeTimes->{{3.822981290527116*^9, 3.8229814609812293`*^9}, {
  3.8256506998176823`*^9, 3.825650705505453*^9}, {3.825650750393426*^9, 
  3.8256507543618155`*^9}, {3.8256508797774787`*^9, 3.8256510844093623`*^9}, {
  3.8256512258012805`*^9, 3.8256512260256805`*^9}, {3.8305958284520044`*^9, 
  3.8305958345726514`*^9}, {3.830595911275427*^9, 3.8305959205476494`*^9}},
 CellID->261721614,ExpressionUUID->"4aaa3a10-7644-4115-9739-34702e77c72d"],

Cell["\<\
In both cases, the list of fluid mole fractions that was read from the \
\"*.MIX\" file will be returned.  It is important to capture this bulk molar \
composition so that it can be used in subsequent property function \
calculations.\
\>", "Text",
 CellChangeTimes->{{3.8229814736064606`*^9, 3.8229815704065228`*^9}, {
  3.8256511057692213`*^9, 3.82565121640942*^9}},
 CellID->305891491,ExpressionUUID->"db97e5a5-0e10-4658-840b-cdc2e2b3e436"],

Cell[TextData[{
 "NOTE: ",
 StyleBox["When setting the mixture using either of the methods below, the \
molar composition is not supplied as the last input parameter, but is always ",
  FontSlant->"Italic"],
 StyleBox["returned",
  FontSlant->"Italic",
  FontVariations->{"Underline"->True}],
 StyleBox[" as the last output result.",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.822804252686304*^9, 3.8228042810234814`*^9}, {
  3.8293759367188425`*^9, 3.8293759502307186`*^9}, {3.8293998274854794`*^9, 
  3.829399953028859*^9}},
 Background->RGBColor[0.9, 1, 1],
 CellID->187701476,ExpressionUUID->"26eb9a3b-940b-43eb-825e-89674b314021"],

Cell[CellGroupData[{

Cell["\<\
Open the Pre-defined Air mixture file (.MIX extension optional)\
\>", "MathCaption",
 CellChangeTimes->{{3.8229816117724247`*^9, 3.8229816389477177`*^9}, {
  3.825651284504322*^9, 3.825651297912506*^9}},
 CellID->65014393,ExpressionUUID->"ef8085ce-f808-4eee-8aad-7d4fb5ac5495"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetMixture", "[", "\"\<AIR\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.822981662218465*^9, 3.822981694469232*^9}, {
   3.825618785217058*^9, 3.825618788431464*^9}, 3.825650818058503*^9},
 CellLabel->"In[12]:=",
 CellID->462380331,ExpressionUUID->"8da684f5-d7d4-4b68-accf-951b1dff3465"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.7812`", ",", "0.0092`", ",", "0.2096`"}], "}"}]], "Output",
 CellChangeTimes->{3.822981696322248*^9, 3.8256187995696535`*^9, 
  3.8256508206515684`*^9, 3.829553638439028*^9, 3.8307770624315586`*^9, 
  3.8307888366505556`*^9},
 CellLabel->"Out[12]=",
 CellID->12672560,ExpressionUUID->"74296312-83eb-4574-8a9d-67489579bd76"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Note that this is a three component definition for the Air mixture.  The \
molar composition should be captured, as demonstrated in the next example, \
and used in subsequent property calls.\
\>", "Text",
 CellChangeTimes->{{3.8256189939060373`*^9, 3.8256190510422945`*^9}, {
  3.8305959747147365`*^9, 3.8305959793154*^9}},
 CellID->108771273,ExpressionUUID->"1b9d172e-712b-4297-86f0-1e24393b1c4a"],

Cell[CellGroupData[{

Cell["\<\
Open the Pre-defined Air mixture file again, capturing the molar composition \
in a variable\
\>", "MathCaption",
 CellChangeTimes->{{3.8229816117724247`*^9, 3.8229816389477177`*^9}, {
  3.822981716804491*^9, 3.8229817255730386`*^9}, {3.830595988683361*^9, 
  3.830595990659053*^9}},
 CellID->201793012,ExpressionUUID->"1a1ddc06-2296-44f4-92b0-8301709af352"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["z", "Air3"], "=", 
  RowBox[{"SetMixture", "[", "\"\<AIR\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.822981662218465*^9, 3.822981694469232*^9}, {
   3.8229817361557355`*^9, 3.822981771719598*^9}, {3.822981999172242*^9, 
   3.822982002093401*^9}, {3.8256190612410254`*^9, 3.8256191003005686`*^9}, 
   3.8256512782580214`*^9},
 CellLabel->"In[13]:=",
 CellID->286397801,ExpressionUUID->"0ffab274-9d5b-425c-8809-cd519a973095"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.7812`", ",", "0.0092`", ",", "0.2096`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.822981696322248*^9, 3.8229817803884187`*^9, 3.822982004799164*^9, 
   3.8230562718904276`*^9, {3.825619087715211*^9, 3.8256191011203966`*^9}, 
   3.8257593722373033`*^9, 3.8290215399530725`*^9, 3.829553642510172*^9, 
   3.830777067166892*^9, 3.830788842618602*^9},
 CellLabel->"Out[13]=",
 CellID->119693245,ExpressionUUID->"c7422a0c-4dc1-4e41-97f2-67004341d561"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Alternatively, open the mixture file in the first call to RefProp.\
\>", "MathCaption",
 CellChangeTimes->{{3.8256512582096553`*^9, 3.8256512669941397`*^9}, {
  3.8256513052558355`*^9, 3.8256513227849965`*^9}},
 CellID->27511504,ExpressionUUID->"f9c57f01-f808-47e1-b241-33e5e7799608"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"mWt", ",", 
    SubscriptBox["z", "Air3"]}], "}"}], "=", 
  RowBox[{
   RowBox[{"RefProp", "[", 
    RowBox[{
    "\"\<AIR.MIX\>\"", ",", "\"\<\>\"", ",", "\"\<M\>\"", ",", "0", ",", 
     "0"}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8256513283361588`*^9, 3.825651403296694*^9}, {
  3.8256519710983596`*^9, 3.8256520106895103`*^9}, {3.8256520758901553`*^9, 
  3.825652076481601*^9}},
 CellLabel->"In[1]:=",
 CellID->155050774,ExpressionUUID->"58c2b6b6-1fac-4b09-8b70-86a1acaf7539"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"28.958600656`", 
     RowBox[{
      "\"kg\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       "\"kmol\""}], "kilograms per kilomole", 
     FractionBox["\"Kilograms\"", "\"Kilomoles\""]},
    "Quantity"], ",", 
   RowBox[{"{", 
    RowBox[{"0.7812`", ",", "0.0092`", ",", "0.2096`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8256514060852375`*^9, 3.8256520497131414`*^9, 3.8256520899266186`*^9, 
   3.825759395291661*^9, 3.825922800073698*^9, {3.825932997919486*^9, 
   3.8259330077292356`*^9}, 3.8259335246165605`*^9, 3.825934004518148*^9, 
   3.82938359318829*^9, 3.829553648956935*^9, 3.8295536989552636`*^9, 
   3.8305960715756073`*^9, 3.8307770913033457`*^9, 3.8307771222944374`*^9, 
   3.830788864707514*^9, 3.830789435168354*^9},
 CellLabel->"Out[1]=",
 CellID->476605891,ExpressionUUID->"54c87781-2184-4453-bc62-5d24e4b40ff5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
However, loading the same mixture again with RefProp will result in an error, \
because the mixture is already loaded and a molar composition was not passed.\
\>", "MathCaption",
 CellChangeTimes->{{3.8256521573862734`*^9, 3.8256522081056304`*^9}, {
  3.8307888712290316`*^9, 3.8307888743786073`*^9}},
 CellID->65873702,ExpressionUUID->"ace368ad-6fd3-4b62-9878-6244d34bd6bd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RefProp", "[", 
  RowBox[{
  "\"\<AIR.MIX\>\"", ",", "\"\<\>\"", ",", "\"\<M\>\"", ",", "0", ",", "0"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8256513283361588`*^9, 3.825651403296694*^9}, {
  3.825651929369926*^9, 3.825651934802389*^9}, {3.825652105217763*^9, 
  3.825652105850071*^9}},
 CellLabel->"In[16]:=",
 CellID->404018090,ExpressionUUID->"acbd43b9-1be3-414d-9071-9fa3809b5f7a"],

Cell[BoxData[
 TemplateBox[{
  "RefProp", "refprop", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"[REFPROP error 813] The input composition \
must match that of the predefined mixture when the mixture name is included \
in the call to REFPROP.  To use a different composition, leave the fluid name \
blank.\\\\\\\"\\\"}]\\)\"", 2, 16, 1, 33619127058096045204, "Local", 
   "RefpropLink`RefProp"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.8256522172671585`*^9, 3.8307771264712334`*^9, 
  3.8307888875473757`*^9},
 CellLabel->"During evaluation of In[16]:=",
 CellID->483347385,ExpressionUUID->"68548c9e-3fdd-40e6-8636-2f6cf21116cc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"ierr\"\>", "\[Rule]", "813"}], "}"}]], "Output",
 CellChangeTimes->{3.8256519421647043`*^9, 3.825652082071621*^9, 
  3.8256522172861085`*^9, 3.830777126485196*^9, 3.8307888875613375`*^9},
 CellLabel->"Out[16]=",
 CellID->247399968,ExpressionUUID->"09829306-d5ed-4123-804f-5d35768e4ae3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Determine the number of components (specified in the mixture file) from the \
composition array length.\
\>", "MathCaption",
 CellChangeTimes->{{3.822981918661589*^9, 3.822981942972559*^9}, {
  3.8257591179771814`*^9, 3.8257591299461412`*^9}, {3.8305960202748213`*^9, 
  3.8305960261231766`*^9}},
 CellID->11719281,ExpressionUUID->"c1ad95bc-ca22-4dda-8761-8ca493d25a6f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ncomp", "=", 
  RowBox[{"Length", "[", 
   SubscriptBox["z", "Air3"], "]"}]}]], "Input",
 CellChangeTimes->{{3.8229819497464123`*^9, 3.822982015653133*^9}, 
   3.825631685906049*^9},
 CellLabel->"In[2]:=",
 CellID->21137868,ExpressionUUID->"05cb2c54-0dd7-4d5c-b0c8-30cd8b03a9a0"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{{3.822981973746249*^9, 3.8229820166834*^9}, 
   3.8230562803188553`*^9, {3.8256316591096973`*^9, 3.8256316867777185`*^9}, 
   3.8256523335282764`*^9, 3.8257594068467646`*^9, 3.8259335309316473`*^9, 
   3.829021573240078*^9, 3.8293836012477493`*^9, 3.829553708978464*^9, 
   3.830596075789331*^9, 3.8307771297814054`*^9, 3.8307888918279524`*^9, 
   3.830789445547587*^9},
 CellLabel->"Out[2]=",
 CellID->570722040,ExpressionUUID->"d0c4a071-86e0-426f-9c8b-29c4ae0f8853"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Unlike the Legacy API function, ",
 Cell[BoxData[
  ButtonBox["setmix",
   BaseStyle->"Link",
   ButtonData->"paclet:RefpropLink/ref/Setmix"]], "InlineFormula",
  ExpressionUUID->"29bb8046-8f1e-4916-b714-7a54f36a161e"],
 ", only the composition array is returned.  We'll see how to extract the \
loaded fluid names in the section below.  "
}], "Text",
 CellChangeTimes->{{3.825759219940544*^9, 3.825759250488844*^9}},
 CellID->23718428,ExpressionUUID->"f72e9704-e2c2-435a-bccc-3bce77a84cb8"],

Cell[TextData[{
 "The mass-based composition can always be retrieved with a ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["Refprop",
    FontWeight->"Bold"],
   BaseStyle->"Link",
   ButtonData->"paclet:RefpropLink/ref/Refprop"]], "InlineFormula",
  ExpressionUUID->"41179e94-b872-4dd4-bd7f-4c87dc03e4b5"],
 " call using XMASS as the requested output variable, providing the \
molar-based composition as the last input parameter."
}], "Text",
 CellChangeTimes->{{3.8307873308618946`*^9, 3.830787431190508*^9}, {
  3.8307875978207283`*^9, 3.830787598156802*^9}, {3.8307876288637295`*^9, 
  3.8307876680778475`*^9}},
 CellID->221458984,ExpressionUUID->"203caa10-c79e-4999-a9bc-343093fdd393"],

Cell[CellGroupData[{

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["Refprop",
    FontWeight->"Bold"],
   BaseStyle->"Link",
   ButtonData->"paclet:RefpropLink/ref/Refprop"]], "InlineFormula",
  ExpressionUUID->"a2a77a44-5fc7-4108-861b-9ac114bfd368"],
 " to retrieve the mass-based, bulk composition for the loaded fluid"
}], "MathCaption",
 CellChangeTimes->{{3.8307874406621475`*^9, 3.8307874851262207`*^9}, {
  3.8307876895643377`*^9, 3.8307877078294735`*^9}},
 CellID->263392303,ExpressionUUID->"bfe8aab7-66ea-414d-82c4-8a3ae0a71f67"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RefProp", "[", 
  RowBox[{"\"\<\>\"", ",", "\"\<XMASS\>\"", ",", "0", ",", "0", ",", 
   SubscriptBox["z", "Air3"]}], "]"}]], "Input",
 CellChangeTimes->{{3.8307874914991703`*^9, 3.830787567725215*^9}},
 CellLabel->"In[3]:=",
 CellID->253299226,ExpressionUUID->"ff717fb3-a2fe-40c0-898e-1c26b4e0e29a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"XMASS\"\>", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{
    "0.755704007799347`", ",", "0.01269127622449023`", ",", 
     "0.23160471597616275`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.830787517180437*^9, 3.8307875707202024`*^9}, 
   3.8307888982417936`*^9, 3.8307894503227825`*^9},
 CellLabel->"Out[3]=",
 CellID->268443948,ExpressionUUID->"72437a20-4cec-4981-95e1-f66774667b05"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "NOTE: The remainder of this tutorial will use just the ",
 StyleBox["RefProp",
  FontWeight->"Bold"],
 " function and will, for the most part, omit the first ",
 Cell[BoxData[
  StyleBox["hFld", "TI"]], "InlineFormula",ExpressionUUID->
  "32e6e146-fd16-48f2-84e6-e1f6f67e40f3"],
 " parameter, thereby using the mixture previously loaded, unless a different \
mixture is needed for demonstration purposes."
}], "Text",
 CellChangeTimes->{{3.822801897904948*^9, 3.8228019232321777`*^9}, {
  3.8228026511927843`*^9, 3.8228026843341446`*^9}, {3.822803128365527*^9, 
  3.8228031325183897`*^9}, {3.8257578596646185`*^9, 3.8257578601363573`*^9}, {
  3.8257579109175777`*^9, 3.8257579332898016`*^9}, {3.8257583366582623`*^9, 
  3.8257583494729977`*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellID->207435388,ExpressionUUID->"b42b98cc-df51-4e76-b661-10a1d31c7678"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get Fluid Name Information", "Section",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.822982119480454*^9, 3.822982128461405*^9}},
 CellID->347120648,ExpressionUUID->"c7a5b72d-a5ab-4860-a0c3-1e99eda847cd"],

Cell[TextData[{
 "A number of fluid information strings (Name, Long Name, CASN, and many \
others) can be extracted for each individual component in the mixture using ",
 Cell[BoxData[
  ButtonBox["RefProp",
   BaseStyle->"Link",
   ButtonData->"paclet:RefpropLink/ref/RefProp"]], "InlineFormula",
  ExpressionUUID->"4af23fcb-bdf7-4803-97bd-fe61b8c35900"],
 ".  Since this information is non-state dependent, the ",
 Cell[BoxData[
  StyleBox["hIn", "TI"]], "InlineFormula",ExpressionUUID->
  "5741faac-5c95-4d70-a8fe-a32fd198520b"],
 " string can be blank, numeric inputs ",
 Cell[BoxData[
  StyleBox["a", "TI"]], "InlineFormula",ExpressionUUID->
  "d3d33b1b-d2e8-4197-91ca-c2dd3be1b6f0"],
 " and ",
 Cell[BoxData[
  StyleBox["b", "TI"]], "InlineFormula",ExpressionUUID->
  "61596ff9-7afa-4e0a-9b91-13a2ccc27bac"],
 " can be passed as 0, and the composition array, ",
 Cell[BoxData[
  StyleBox["z", "TI"]], "InlineFormula",ExpressionUUID->
  "3643460e-6f8c-4f9d-a92a-72ed9b8df5b3"],
 ", is not needed as the last parameter."
}], "Text",
 CellChangeTimes->{{3.8168492667978787`*^9, 3.816849386013626*^9}, 
   3.8179997867066865`*^9, {3.822593460690585*^9, 3.822593472259637*^9}, 
   3.822593629534955*^9, {3.8256202837452946`*^9, 3.8256203644973526`*^9}, {
   3.8257559565860963`*^9, 3.825755972281131*^9}, {3.8257560346164455`*^9, 
   3.8257561649718857`*^9}},
 CellID->22646652,ExpressionUUID->"cd454ffc-46db-478a-b58b-e93bb342c1c4"],

Cell[BoxData[GridBox[{
   {
    RowBox[{"RefProp", "[", 
     RowBox[{"hfld", ",", "\"\<\>\"", ",", "hOut", ",", "0", ",", "0"}], 
     "]"}], Cell[
    "Fluid information specified in the hOut string. ", "TableText",
     ExpressionUUID->"48628a6b-1ad6-4486-a9cb-2d48b46efd95"]}
  }]], "DefinitionBox",
 CellChangeTimes->{{3.8253657331377487`*^9, 3.8253657351543837`*^9}, {
  3.8253657889774733`*^9, 3.8253658467140675`*^9}, {3.8255734531131697`*^9, 
  3.8255734553701353`*^9}, {3.8255735051859274`*^9, 3.8255735872345467`*^9}, {
  3.8255736385613394`*^9, 3.825573674579091*^9}, {3.825573799896959*^9, 
  3.8255738325226955`*^9}, {3.825573879762413*^9, 3.8255739526734633`*^9}, {
  3.825620405994397*^9, 3.825620710465331*^9}, {3.825630677257697*^9, 
  3.825630677257697*^9}},
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.35], {
      Scaled[0.65]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->502623787,ExpressionUUID->"ddd86d21-2f1c-4d6c-846c-cf1abaa40ebc"],

Cell["Fluid ID information.", "Caption",
 CellChangeTimes->{{3.822593572812685*^9, 3.8225935774353223`*^9}},
 CellID->197256598,ExpressionUUID->"1c2c61fb-2029-4bda-b062-e4555ff2dc89"],

Cell[TextData[{
 "If a fluid mixture is already loaded, the ",
 Cell[BoxData[
  StyleBox["hFld", "TI"]], "InlineFormula",ExpressionUUID->
  "79faa4ef-78ef-4a22-8b69-4fc54257b4a0"],
 " string parameter is not needed and can be omitted from the beginning of \
the parameter list.  All of the remaining parameters in the template above, \
beyond ",
 Cell[BoxData[
  StyleBox["hFld", "TI"]], "InlineFormula",ExpressionUUID->
  "260918b6-b0bd-4942-91ef-248779b3bb10"],
 ", ",
 StyleBox["must",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " be specified, however, with a minimum of four parameters being passed."
}], "Text",
 CellChangeTimes->{
  3.8225936434148417`*^9, {3.822593759986809*^9, 3.822593794418743*^9}, 
   3.822801164011756*^9, {3.825620731575857*^9, 3.8256207905800924`*^9}, {
   3.8257561795030613`*^9, 3.8257562042408895`*^9}, 3.8257586298842382`*^9},
 CellID->149164589,ExpressionUUID->"102493ac-fb68-4fb6-8c31-08ddcadd69a8"],

Cell[TextData[{
 "NOTE: ",
 StyleBox["Only one string value can be returned at a time.",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.822804252686304*^9, 3.8228042810234814`*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellID->329574969,ExpressionUUID->"f4f33785-890b-4a27-900b-44f324f55f15"],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  StyleBox["hOut", "TI"]], "InlineFormula",ExpressionUUID->
  "b734a833-2524-491f-8334-323f1c39d73c"],
 " string parameter, is set to one of the information strings in the partial \
list below.  For the full list of ",
 Cell[BoxData[
  StyleBox["hOut", "TI"]], "InlineFormula",ExpressionUUID->
  "24506a6e-1dd5-4951-8360-67b5728d4d85"],
 " strings, see the REFPROP DLL Documentation on the REFPROP function."
}], "Text",
 CellChangeTimes->{{3.8256306230825677`*^9, 3.825630644177144*^9}, {
  3.825630787113184*^9, 3.825630841545664*^9}, {3.8257562225439506`*^9, 
  3.8257562514785843`*^9}},
 CellID->134133454,ExpressionUUID->"b1f4674a-f715-4287-8805-8ad584583d34"],

Cell[BoxData[GridBox[{
   {
    RowBox[{"CAS", "#"}], Cell[
    "Return the Chemical Abstracts Service (CAS) number.", "TableText",
     ExpressionUUID->"e62c5390-56d2-4b63-b7ba-d9ea8b01dbed"]},
   {"CMEMFORM", Cell[
    "Rethurn the short Chemical Formula.", "TableText",ExpressionUUID->
     "5736cb1b-cebd-46a1-9132-e686b92525c3"]},
   {"NAME", Cell[
    "Return the Short Fluid Name.", "TableText",ExpressionUUID->
     "d47083d2-0220-49ad-b209-f84b7e083036"]},
   {"LONGNAME", Cell["\<\
Return the Long fluid name given in the 3rd line fo the fluids files.\
\>", "TableText",ExpressionUUID->"83a51055-375b-4b94-98f9-d796df122144"]},
   {"HASH", Cell[
    "Return the hash number.", "TableText",ExpressionUUID->
     "bbc51881-8237-49bc-ad7a-c3d4a5dae280"]},
   {"INCHI", Cell[
    "Return the INCHI string.", "TableText",ExpressionUUID->
     "f08fa90c-7ef2-4dbd-ad81-8730f7c4e0e0"]},
   {"SAFETY", Cell[
    "Return the ASHRAE-34 classification", "TableText",ExpressionUUID->
     "02084b6d-7159-4ff3-8721-337a0cdad1c3"]}
  }]], "DefinitionBox",
 CellChangeTimes->{{3.8256307769144464`*^9, 3.825630779737926*^9}, {
  3.8256308499701223`*^9, 3.825631044985714*^9}},
 Background->GrayLevel[0.85],
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.2], {
      Scaled[0.8]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->248133496,ExpressionUUID->"bbcd63f2-88e6-4382-b5d3-eddf6e0e1e2b"],

Cell["\<\
hOut strings for fluid component identification information (see NIST REFPROP \
Manual for full list).\
\>", "Caption",
 CellChangeTimes->{{3.8256310525135503`*^9, 3.8256310787534213`*^9}, {
  3.8257562644559083`*^9, 3.8257562826732054`*^9}},
 CellID->475182523,ExpressionUUID->"e5bcee65-96e8-404a-a336-c95d6564b2f3"],

Cell[TextData[{
 "For pure fluids, the ",
 Cell[BoxData[
  StyleBox["hOut", "TI"]], "InlineFormula",ExpressionUUID->
  "687150ba-b64c-42e7-88c7-689a0d9082f8"],
 " strings are all that is required.  For mixtures, the string must be \
presented as \"NAME(",
 StyleBox["n",
  FontSlant->"Italic"],
 ")\", where NAME is an ",
 Cell[BoxData[
  StyleBox["hOut", "TI"]], "InlineFormula",ExpressionUUID->
  "348220b6-5400-424f-8f20-33744ddb85f8"],
 " string from the table above and ",
 StyleBox["n",
  FontSlant->"Italic"],
 " is the component number."
}], "Text",
 CellChangeTimes->{{3.825631085524315*^9, 3.8256312327935815`*^9}, {
   3.825756306088595*^9, 3.8257563902994065`*^9}, 3.825756437865226*^9},
 CellID->172860845,ExpressionUUID->"e9de9f23-2928-4847-868c-f1d440c3d977"],

Cell[TextData[{
 "Unlike the Legacy API function, ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["setmix",
    FontWeight->"Bold"],
   BaseStyle->"Link",
   ButtonData->"paclet:RefpropLink/ref/Setmix"]], "InlineFormula",
  ExpressionUUID->"4e5129d8-c477-40a8-b56d-63436ac6945b"],
 ", only the composition array is returned. The fluid names, however can be \
extracted using ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["RefProp",
    FontWeight->"Bold"],
   BaseStyle->"Link",
   ButtonData->"paclet:RefpropLink/ref/RefProp"]], "InlineFormula",
  ExpressionUUID->"8c0d6e12-ddf2-4078-96c1-46a1d754d76a"],
 ".  We'll set the ",
 StyleBox["Listable",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " attribute on the ",
 StyleBox["RefProp",
  FontWeight->"Bold"],
 " function (and then remove it after) so that all three component names can \
be returned in a List."
}], "Text",
 CellChangeTimes->{
  3.8259336136704206`*^9, {3.830596094038481*^9, 3.830596107018756*^9}, {
   3.8305961878994102`*^9, 3.830596194979433*^9}},
 CellID->207010670,ExpressionUUID->"d3a0ded0-7baa-4313-abb9-98fb6174a2b1"],

Cell[CellGroupData[{

Cell["Get the name information for the loaded fluids individually.", \
"MathCaption",
 CellChangeTimes->{{3.822593815796566*^9, 3.822593823916814*^9}, 
   3.8229821600359817`*^9, {3.825933628512763*^9, 3.8259336315765705`*^9}},
 CellID->34664985,ExpressionUUID->"f5c31eab-1a8c-406b-87af-f420f325b984"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RefProp", "[", 
  RowBox[{"\"\<\>\"", ",", "\"\<Name(1)\>\"", ",", "0", ",", "0"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.822593828111594*^9, 3.822593829390175*^9}, 
   3.822982167045203*^9, {3.822982202349803*^9, 3.8229822176768074`*^9}, {
   3.8256312664336295`*^9, 3.8256312902100606`*^9}},
 CellLabel->"In[4]:=",
 CellID->201708715,ExpressionUUID->"a933817c-2e4b-416b-964f-61647288fcf0"],

Cell[BoxData["\<\"Nitrogen\"\>"], "Output",
 CellChangeTimes->{3.822593834962299*^9, 3.8226041044859962`*^9, 
  3.8229821747147217`*^9, 3.8229822189813185`*^9, 3.825631293754555*^9, 
  3.82575941691285*^9, 3.8295537150093403`*^9, 3.8307877461748877`*^9, 
  3.8307889191428485`*^9, 3.8307894584690266`*^9},
 CellLabel->"Out[4]=",
 CellID->415580201,ExpressionUUID->"c846476c-a337-4094-8b8c-cee1f6883a8e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RefProp", "[", 
  RowBox[{"\"\<\>\"", ",", "\"\<Name(2)\>\"", ",", "0", ",", "0"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.822593828111594*^9, 3.822593829390175*^9}, 
   3.822982167045203*^9, {3.822982202349803*^9, 3.8229822176768074`*^9}, {
   3.8256312664336295`*^9, 3.825631313961527*^9}},
 CellLabel->"In[5]:=",
 CellID->272365515,ExpressionUUID->"0c4d2f96-bde2-4459-86ab-49d3c415a590"],

Cell[BoxData["\<\"Argon\"\>"], "Output",
 CellChangeTimes->{3.825631316470816*^9, 3.825759419902855*^9, 
  3.8295537184930267`*^9, 3.830787749578781*^9, 3.8307889194221015`*^9, 
  3.8307894587522674`*^9},
 CellLabel->"Out[5]=",
 CellID->66260187,ExpressionUUID->"0f7ee0ce-7390-41fb-98d0-e1768b8bf464"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RefProp", "[", 
  RowBox[{"\"\<\>\"", ",", "\"\<Name(3)\>\"", ",", "0", ",", "0"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.822593828111594*^9, 3.822593829390175*^9}, 
   3.822982167045203*^9, {3.822982202349803*^9, 3.8229822176768074`*^9}, {
   3.8256312664336295`*^9, 3.8256312902100606`*^9}, 3.8256313268810043`*^9},
 CellLabel->"In[6]:=",
 CellID->640961820,ExpressionUUID->"526ed296-0459-41e3-99d6-fb523b46bec0"],

Cell[BoxData["\<\"Oxygen\"\>"], "Output",
 CellChangeTimes->{3.8256313297652693`*^9, 3.8257594224370794`*^9, 
  3.829553721853043*^9, 3.830787752528889*^9, 3.8307889196605*^9, 
  3.830789458984645*^9},
 CellLabel->"Out[6]=",
 CellID->497508151,ExpressionUUID->"44ffc4f0-b2d2-4075-89a9-0e160ce27b56"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["RefProp",
    FontWeight->"Bold"],
   BaseStyle->"Link",
   ButtonData->"paclet:RefpropLink/ref/RefProp"]], "InlineFormula",
  ExpressionUUID->"2aab23b8-afd7-4417-88f2-20fdc191a01a"],
 " function can only return one string result per call.  However, by \
temporarily making RefProp Listable, Mathematica has the ability to apply the \
function to a list of input values, returning the output in a list of \
strings. "
}], "Text",
 CellChangeTimes->{{3.825756495866169*^9, 3.825756578592947*^9}, {
  3.825758812498932*^9, 3.8257588150171986`*^9}, {3.825758951426467*^9, 
  3.82575897881723*^9}},
 CellID->105446541,ExpressionUUID->"029bce5b-1316-4f9b-8ef1-166d1a96621a"],

Cell[CellGroupData[{

Cell[TextData[{
 "Temporarily set the ",
 StyleBox["Listable",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " Attribute"
}], "MathCaption",
 CellChangeTimes->{{3.8257590471704683`*^9, 3.825759066760088*^9}},
 CellID->25430490,ExpressionUUID->"e0f004e7-150a-4a0f-bb3e-0abe654b188d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"RefProp", ",", 
    RowBox[{"{", "Listable", "}"}]}], "]"}], ";"}]], "Input",
 CellLabel->"In[7]:=",
 CellID->140966850,ExpressionUUID->"c1021f6c-4bf9-4b13-b7c9-29c99e46cbfb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get all three component names at once", "MathCaption",
 CellChangeTimes->{{3.8257594507144704`*^9, 3.8257594628819675`*^9}},
 CellID->81177682,ExpressionUUID->"1f3644c4-79cd-4747-9c36-edfac8fd7bd4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"RefProp", "[", 
   RowBox[{"\"\<\>\"", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Name(1)\>\"", ",", "\"\<Name(2)\>\"", ",", "\"\<Name(3)\>\""}], 
     "}"}], ",", "0", ",", "0"}], "]"}], "//", "ToUpperCase"}]], "Input",
 CellChangeTimes->{{3.8257594963614197`*^9, 3.8257595381616564`*^9}},
 CellLabel->"In[8]:=",
 CellID->50269942,ExpressionUUID->"7e0d07eb-33fe-482b-8f25-a9c927eeb8ee"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"NITROGEN\"\>", ",", "\<\"ARGON\"\>", ",", "\<\"OXYGEN\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8257595396397057`*^9, 3.8257595560967193`*^9}, 
   3.8295537305597696`*^9, 3.8307877620534363`*^9, 3.830788920237921*^9, 
   3.8307894595680494`*^9},
 CellLabel->"Out[8]=",
 CellID->373193810,ExpressionUUID->"a248cfd3-2218-4fed-a9a4-1a435aa3f8cb"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Make this easier and more flexible by creating a function that builds an ",
 StyleBox["n",
  FontSlant->"Italic"],
 "-length list, based on the requested ",
 Cell[BoxData[
  StyleBox["hIn", "TI"]], "InlineFormula",ExpressionUUID->
  "22ba6fb9-96e9-435c-ac30-cfdb0b9985e5"],
 " string."
}], "Text",
 CellChangeTimes->{{3.8257596153702426`*^9, 3.825759686432209*^9}},
 CellID->453156352,ExpressionUUID->"ed5ed630-5bc8-435f-a11a-3908c37c272f"],

Cell[CellGroupData[{

Cell["Create hInList utility function", "MathCaption",
 CellChangeTimes->{{3.8257597054653463`*^9, 3.825759717914036*^9}, {
  3.8257601203370347`*^9, 3.825760126521511*^9}},
 CellID->494606105,ExpressionUUID->"06ba60bf-4ba0-4099-8ba8-d1c1559c32a2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"hInList", "[", 
   RowBox[{"str_String", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"str", "<>", "\"\<(\>\"", " ", "<>", " ", 
     RowBox[{"ToString", "[", "#", "]"}], " ", "<>", " ", "\"\<)\>\""}], 
    "&"}], "/@", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{"#", "&"}], ",", "n"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8257597313361464`*^9, 3.8257597617009797`*^9}, {
  3.825759977522895*^9, 3.825760014745366*^9}},
 CellLabel->"In[9]:=",
 CellID->292353154,ExpressionUUID->"c01dfd9f-edbb-48ff-840a-057249d9f94c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hInList", "[", 
  RowBox[{"\"\<Name\>\"", ",", "ncomp"}], "]"}]], "Input",
 CellChangeTimes->{{3.8257598125201035`*^9, 3.825759817480812*^9}, {
  3.825759926434491*^9, 3.825759936346019*^9}, {3.825760065153617*^9, 
  3.8257601085136786`*^9}},
 CellLabel->"In[10]:=",
 CellID->600137366,ExpressionUUID->"d2e32d02-adfe-4d45-b0c5-ac0d83086d53"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Name(1)\"\>", ",", "\<\"Name(2)\"\>", ",", "\<\"Name(3)\"\>"}],
   "}"}]], "Output",
 CellChangeTimes->{{3.8257599315069284`*^9, 3.8257599380195293`*^9}, 
   3.825760080351947*^9, 3.8257601116851735`*^9, 3.829553766814833*^9, 
   3.8305967083490195`*^9, 3.8307877710892363`*^9, 3.830788920619898*^9, 
   3.8307894599400883`*^9},
 CellLabel->"Out[10]=",
 CellID->122007839,ExpressionUUID->"b127c992-f0d2-420f-9f3f-1b75bd252330"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Use the hInList utility function in a RefProp call to get all component info\
\>", "MathCaption",
 CellChangeTimes->{{3.825631345337661*^9, 3.82563145049646*^9}, {
  3.8257602221927147`*^9, 3.8257602454415617`*^9}},
 CellID->23778057,ExpressionUUID->"d3289a92-b5d8-4a94-9db2-50219a4b1511"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["hFluids", "Air3"], "=", 
  RowBox[{
   RowBox[{"RefProp", "[", 
    RowBox[{"\"\< \>\"", ",", 
     RowBox[{"hInList", "[", 
      RowBox[{"\"\<Name\>\"", ",", "ncomp"}], "]"}], ",", "0", ",", "0"}], 
    "]"}], "//", "ToUpperCase"}]}]], "Input",
 CellChangeTimes->{{3.8256192532306676`*^9, 3.8256192704506435`*^9}, {
  3.825619940177927*^9, 3.8256199769944572`*^9}, {3.825620089722047*^9, 
  3.8256201162252097`*^9}, {3.8256314944030905`*^9, 3.825631497377139*^9}, {
  3.825759437440991*^9, 3.825759438289693*^9}, {3.8257601358575363`*^9, 
  3.82576017288256*^9}},
 CellLabel->"In[11]:=",
 CellID->107656848,ExpressionUUID->"6352cd72-6c83-4784-877b-f1ae21f54656"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"NITROGEN\"\>", ",", "\<\"ARGON\"\>", ",", "\<\"OXYGEN\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.825619955176793*^9, 3.8256199790938663`*^9}, {
   3.825620084944847*^9, 3.8256201180582795`*^9}, 3.825631475705085*^9, 
   3.8256315137443466`*^9, 3.8256318951465883`*^9, 3.8257601905463424`*^9, 
   3.8295537737732306`*^9, 3.8307877753448486`*^9, 3.8307889210657043`*^9, 
   3.8307894603908486`*^9},
 CellLabel->"Out[11]=",
 CellID->678437928,ExpressionUUID->"0ab8033a-cf91-4ee1-a8c3-1b585173f7fe"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Now, the fluid names and mole fractions can be displayed in a Table.\
\>", "MathCaption",
 CellChangeTimes->{{3.825631532922101*^9, 3.825631549409984*^9}, 
   3.830596229642729*^9},
 CellID->35285899,ExpressionUUID->"e1918e42-8d07-4b66-959d-a340608e596b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["hFluids", "Air3"], ",", 
     SubscriptBox["z", "Air3"]}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{
  3.8229818925493975`*^9, 3.8229820095494857`*^9, {3.825631576506562*^9, 
   3.825631580945692*^9}},
 CellLabel->"In[12]:=",
 CellID->88607472,ExpressionUUID->"812d6d50-f87a-465b-81f4-4eb9b270de77"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"NITROGEN\"\>", "0.7812`"},
    {"\<\"ARGON\"\>", "0.0092`"},
    {"\<\"OXYGEN\"\>", "0.2096`"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.8229818976986265`*^9, 3.8229820103533316`*^9, 3.823056276594827*^9, {
   3.825631567934476*^9, 3.8256315821215477`*^9}, 3.8256318984776745`*^9, 
   3.8257602589853177`*^9, 3.8295537779490676`*^9, 3.8307877791696167`*^9, 
   3.8307889212432566`*^9, 3.830789460573388*^9},
 CellLabel->"Out[12]//TableForm=",
 CellID->228041293,ExpressionUUID->"3a8e36c9-c445-446a-b4d1-86221f2f627c"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Other information strings can be retrieved using a different hOut string.\
\>", "Text",
 CellChangeTimes->{3.8259337270981655`*^9},
 CellID->255594995,ExpressionUUID->"0f41b2df-3730-42f1-a0e9-0ed1baacde0d"],

Cell[CellGroupData[{

Cell["\<\
Retrieve the Long Name, Chemical Abstracts Service number, and Chemical \
Formula for each component..\
\>", "MathCaption",
 CellChangeTimes->{{3.8256524008901644`*^9, 3.8256524317536697`*^9}, {
  3.8259337357290883`*^9, 3.8259337858331194`*^9}},
 CellID->641584905,ExpressionUUID->"c5e6f978-e418-4710-88ab-f373ffb36ace"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"RefProp", "[", 
   RowBox[{"\"\<\>\"", ",", 
    RowBox[{"hInList", "[", 
     RowBox[{"\"\<LONGNAME\>\"", ",", "ncomp"}], "]"}], ",", "0", ",", "0"}], 
   "]"}], "//", "ToUpperCase"}]], "Input",
 CellChangeTimes->{{3.8225938381926384`*^9, 3.82259384121258*^9}, 
   3.8229821821727705`*^9, {3.822982246454831*^9, 3.8229822758053026`*^9}, {
   3.8229823486135902`*^9, 3.8229823782443376`*^9}, {3.82563175794543*^9, 
   3.825631758458061*^9}, {3.8256317930605364`*^9, 3.8256318390336175`*^9}, {
   3.825631870347889*^9, 3.8256319195702524`*^9}, {3.825760316779787*^9, 
   3.825760337366741*^9}},
 CellLabel->"In[13]:=",
 CellID->412622337,ExpressionUUID->"04f9e88e-8ca3-40a4-8ee1-db6eb79bb63a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"NITROGEN\"\>", ",", "\<\"ARGON\"\>", ",", "\<\"OXYGEN\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8225938424073763`*^9, 3.8226041078440104`*^9, 3.8229821870876074`*^9, {
   3.8229822622914815`*^9, 3.822982279543335*^9}, {3.822982362219199*^9, 
   3.8229823803098187`*^9}, {3.825631787833495*^9, 3.825631805455369*^9}, 
   3.825631840013994*^9, {3.825631903169103*^9, 3.8256319212527504`*^9}, 
   3.825760340858429*^9, 3.8295537828529263`*^9, 3.830787791251294*^9, 
   3.8307889216950493`*^9, 3.830789461013214*^9},
 CellLabel->"Out[13]=",
 CellID->434940538,ExpressionUUID->"3e969029-5615-4da7-80e1-4f61674819f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RefProp", "[", 
  RowBox[{"\"\<\>\"", ",", 
   RowBox[{"hInList", "[", 
    RowBox[{"\"\<CAS#\>\"", ",", "ncomp"}], "]"}], ",", "0", ",", "0"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.822593845840176*^9, 3.8225938476194444`*^9}, {
  3.8229823922768087`*^9, 3.8229824023887577`*^9}, {3.8256319326602907`*^9, 
  3.825631941306161*^9}, {3.825760360001221*^9, 3.8257603702658043`*^9}},
 CellLabel->"In[14]:=",
 CellID->901849200,ExpressionUUID->"7c41abc6-9fa4-403d-9edd-3979266986ea"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"7727-37-9\"\>", ",", "\<\"7440-37-1\"\>", 
   ",", "\<\"7782-44-7\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.822593850171618*^9, 3.8226041113745675`*^9, 
  3.8229824035875235`*^9, 3.825631943546143*^9, 3.825760372649435*^9, 
  3.8295537864463196`*^9, 3.830787791755949*^9, 3.830788922237569*^9, 
  3.8307894615607185`*^9},
 CellLabel->"Out[14]=",
 CellID->374203444,ExpressionUUID->"d3529641-079f-4c18-8b83-c62a87859df2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RefProp", "[", 
  RowBox[{"\"\<\>\"", ",", 
   RowBox[{"hInList", "[", 
    RowBox[{"\"\<CHEMFORM\>\"", ",", "ncomp"}], "]"}], ",", "0", ",", "0"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.822593845840176*^9, 3.8225938476194444`*^9}, {
  3.8229823922768087`*^9, 3.8229824023887577`*^9}, {3.8256319326602907`*^9, 
  3.825631941306161*^9}, {3.8256319743298616`*^9, 3.8256319787220893`*^9}, {
  3.825760383673953*^9, 3.825760406993606*^9}},
 CellLabel->"In[15]:=",
 CellID->349308121,ExpressionUUID->"c79157f8-cef5-47bf-a07b-01aa2ebda25c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"N2\"\>", ",", "\<\"Ar\"\>", ",", "\<\"O2\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.822593850171618*^9, 3.8226041113745675`*^9, 
  3.8229824035875235`*^9, 3.825631943546143*^9, 3.8256319846273003`*^9, 
  3.8257604084806285`*^9, 3.8295537895988903`*^9, 3.8307877922157145`*^9, 
  3.8307889226834083`*^9, 3.8307894620155296`*^9},
 CellLabel->"Out[15]=",
 CellID->9835156,ExpressionUUID->"a317bdf4-fdff-4fd8-802b-3ca07e4ca169"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Remember to make RefProp ",
 StyleBox["non-Listable",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " again for subsequent property calculations that require the molar \
composition as a list."
}], "MathCaption",
 CellChangeTimes->{{3.8256320125297236`*^9, 3.825632030554528*^9}, {
  3.8270435394854617`*^9, 3.82704356261264*^9}},
 Background->RGBColor[1, 1, 0.85],
 CellID->92016512,ExpressionUUID->"b54bf6af-0915-41f3-9cc9-63631165323f"],

Cell[BoxData[
 RowBox[{"ClearAttributes", "[", 
  RowBox[{"RefProp", ",", 
   RowBox[{"{", "Listable", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8256201350707955`*^9, 3.8256201504576745`*^9}},
 CellLabel->"In[16]:=",
 CellID->125095657,ExpressionUUID->"a09f1ac0-a647-44ec-8744-c1a22bf12b84"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get Fluid Numeric Constants", "Section",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.8229825305090747`*^9, 3.8229825361968613`*^9}},
 CellID->419820630,ExpressionUUID->"b55694d4-8272-4dab-a433-ca33b8d5ff63"],

Cell[TextData[{
 "The numeric constants for the loaded mixture components can be returned, \
again using ",
 Cell[BoxData[
  ButtonBox["RefProp",
   BaseStyle->"Link",
   ButtonData->"paclet:RefpropLink/ref/RefProp"]], "InlineFormula",
  ExpressionUUID->"08c61759-3840-4fb9-812f-74e03dca08c4"],
 ". "
}], "Text",
 CellChangeTimes->{{3.8168492667978787`*^9, 3.816849386013626*^9}, 
   3.8179997867066865`*^9, {3.822593460690585*^9, 3.822593472259637*^9}, 
   3.822593629534955*^9, {3.822598982839508*^9, 3.8225990563618293`*^9}, {
   3.8225999774766903`*^9, 3.8226001513735666`*^9}, {3.822604779245184*^9, 
   3.822604817149832*^9}, {3.8230387157383947`*^9, 3.8230387188331165`*^9}, {
   3.829021815362773*^9, 3.829021834195393*^9}, {3.8290218681944957`*^9, 
   3.829021903122114*^9}, {3.830596241138944*^9, 3.8305962412835803`*^9}},
 CellID->779510363,ExpressionUUID->"4229da10-47ac-4b52-889a-e9666aae4ee5"],

Cell[BoxData[GridBox[{
   {
    RowBox[{"RefProp", "[", 
     RowBox[{
      StyleBox["hFld", "TI"], ",", "\"\<\>\"", ",", 
      StyleBox["hOut", "TI"], ",", "0", ",", "0"}], "]"}], Cell["\<\
Retrieve fluid numeric constants specified in the hOut string. \
\>", "TableText",ExpressionUUID->"878ad3ba-312d-4a27-ab4c-592affa19499"]}
  }]], "DefinitionBox",
 CellChangeTimes->{{3.8253657331377487`*^9, 3.8253657351543837`*^9}, {
  3.8253657889774733`*^9, 3.8253658467140675`*^9}, {3.8255734531131697`*^9, 
  3.8255734553701353`*^9}, {3.8255735051859274`*^9, 3.8255735872345467`*^9}, {
  3.8255736385613394`*^9, 3.825573674579091*^9}, {3.825573799896959*^9, 
  3.8255738325226955`*^9}, {3.825573879762413*^9, 3.8255739526734633`*^9}, {
  3.825620405994397*^9, 3.825620710465331*^9}, {3.825630677257697*^9, 
  3.825630677257697*^9}, {3.8257620347694206`*^9, 3.8257620397221794`*^9}, {
  3.8257658241949077`*^9, 3.825765828171276*^9}, {3.829023936043291*^9, 
  3.8290239361799555`*^9}, {3.8305975275723715`*^9, 3.830597540350194*^9}},
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.35], {
      Scaled[0.65]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->76010766,ExpressionUUID->"24d4e30d-eda6-4357-ab04-88bdbac16d5e"],

Cell["Fluid Numeric Constants.", "Caption",
 CellChangeTimes->{{3.822593572812685*^9, 3.8225935774353223`*^9}, {
  3.8256506326322947`*^9, 3.825650645160825*^9}},
 CellID->93358605,ExpressionUUID->"502fb2e7-1ef1-49fd-89b9-2976e0260dac"],

Cell[TextData[{
 "If a fluid has already been loaded (as in the examples here), then the \
fluid/mixture string, ",
 Cell[BoxData[
  StyleBox["hFld", "TI"]], "InlineFormula",ExpressionUUID->
  "d723c53a-70d7-459a-81cb-4dbeed3dbe93"],
 ", does not have to be specified.  It can be passed as a single space \
character (in quotes, \" \") or omitted altogether."
}], "Text",
 CellChangeTimes->{{3.8290238637984705`*^9, 3.829023954657524*^9}, {
  3.830596273298935*^9, 3.8305963053471675`*^9}},
 CellID->457163806,ExpressionUUID->"e21adb8f-4494-4706-975c-fba5959d8725"],

Cell[TextData[{
 Cell[BoxData[
  StyleBox["hOut", "TI"]], "InlineFormula",ExpressionUUID->
  "251e20d0-c6ed-46a1-9944-8da0796069da"],
 " is the numeric constant requested for the mixture or individual component \
of the mixture.  In addition to the examples shown below, a full list of ",
 Cell[BoxData[
  StyleBox["hOut", "TI"]], "InlineFormula",ExpressionUUID->
  "20bbda08-b90b-4cc2-97bc-28c0bb422ae6"],
 " values is listed in Table 1 of the ",
 StyleBox[ButtonBox["NIST REFPROP Online DLL Documentation",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://refprop-docs.readthedocs.io/en/latest/DLL/index.html"], 
    None}],
  FontWeight->"Bold"],
 ", under the description for ",
 StyleBox["ALLPROPSdll",
  FontWeight->"Bold"],
 " in the High-Level API section.  The ",
 Cell[BoxData[
  StyleBox["hOut", "TI"]], "InlineFormula",ExpressionUUID->
  "830c590d-567d-466f-b1a4-d44a3552f984"],
 " string can contain a single parameter string or multiple parameters \
separated by spaces, commas, semicolons, or pipes (|) in a single string, to \
retrieve multiple numeric constants at once.  However, different separators \
should not be mixed in the same string."
}], "Text",
 CellChangeTimes->{{3.8290235743084164`*^9, 3.82902374327567*^9}, {
  3.829023793547265*^9, 3.829023844571846*^9}, {3.8290239621465006`*^9, 
  3.8290239848448153`*^9}, {3.830596322411532*^9, 3.830596328258902*^9}, {
  3.830596383800282*^9, 3.830596391690175*^9}, {3.83059648149891*^9, 
  3.8305965204666595`*^9}, {3.830596552121972*^9, 3.830596620284616*^9}},
 CellID->511979775,ExpressionUUID->"c163511d-a216-478f-9859-942d48d51c02"],

Cell["\<\
For multi-component mixtures, the properties that return component can be \
specified with a parenthetical component number, \"X(n)\", to retrieve the \
value for that specific component.\
\>", "Text",
 CellChangeTimes->{
  3.8225936434148417`*^9, {3.822593759986809*^9, 3.822593794418743*^9}, {
   3.8225990675658903`*^9, 3.8225990924020305`*^9}, {3.823054829427456*^9, 
   3.823054864146596*^9}, {3.829022199187832*^9, 3.8290223234665356`*^9}, {
   3.8290233460985546`*^9, 3.829023360507036*^9}, {3.8290234582906003`*^9, 
   3.829023459498372*^9}, {3.8290237664517355`*^9, 3.8290237764430265`*^9}},
 CellID->166758029,ExpressionUUID->"3ce8a36f-c394-4f9f-9b91-a9c0f96cc3c6"],

Cell[CellGroupData[{

Cell["\<\
Get a numeric constant for the mixture (extracting row 1, col 2 from return \
list)\
\>", "MathCaption",
 CellChangeTimes->{{3.8230548917637525`*^9, 3.82305490694113*^9}, {
   3.823055504754258*^9, 3.8230555098426466`*^9}, {3.8259225288570876`*^9, 
   3.825922533200474*^9}, {3.829022148458433*^9, 3.8290221505309196`*^9}, {
   3.829022943498831*^9, 3.8290229440353947`*^9}, {3.829023063914917*^9, 
   3.8290230926680207`*^9}, 3.83059663804211*^9},
 CellID->65680357,ExpressionUUID->"37710af6-703e-4fea-a2a4-1f1a853ed2ab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["molWt", "Air3"], "=", 
  RowBox[{
   RowBox[{"RefProp", "[", 
    RowBox[{"\"\<\>\"", ",", "\"\<M\>\"", ",", "0", ",", "0", ",", 
     SubscriptBox["z", "Air3"]}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.823055517616854*^9, 3.823055523970858*^9}, {
  3.823055671738654*^9, 3.823055701034299*^9}, {3.825765880354748*^9, 
  3.825766003897453*^9}, {3.8259329415621543`*^9, 3.825932960841625*^9}, {
  3.829022982612257*^9, 3.829023032444028*^9}},
 CellLabel->"In[17]:=",
 CellID->226840327,ExpressionUUID->"2e789c73-fe94-4718-9970-9e941ce6dd26"],

Cell[BoxData[
 TemplateBox[{"28.958600656`", 
   RowBox[{
    "\"kg\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"kmol\""}],
    "kilograms per kilomole", 
   FractionBox["\"Kilograms\"", "\"Kilomoles\""]},
  "Quantity"]], "Output",
 CellChangeTimes->{
  3.8230555493948565`*^9, 3.823055702156267*^9, {3.8257659897731843`*^9, 
   3.8257660066809993`*^9}, 3.8259338885843554`*^9, 3.8290223347044888`*^9, 
   3.8290230425400352`*^9, 3.8295537984871545`*^9, {3.830788362362402*^9, 
   3.8307883772216496`*^9}, 3.8307889375176907`*^9, 3.830789470773102*^9},
 CellLabel->"Out[17]=",
 CellID->242503249,ExpressionUUID->"229f543b-6bbf-4a8f-9a03-a06b2ed27a80"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get multiple numeric constants for the mixture at once", "MathCaption",
 CellChangeTimes->{{3.8230548917637525`*^9, 3.82305490694113*^9}, {
  3.823055504754258*^9, 3.8230555098426466`*^9}, {3.8259225288570876`*^9, 
  3.825922533200474*^9}, {3.829022148458433*^9, 3.8290221505309196`*^9}, {
  3.829022943498831*^9, 3.829022975370619*^9}},
 CellID->345062545,ExpressionUUID->"39de99a4-7070-4a54-9be0-a15a1824701f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RefProp", "[", 
  RowBox[{
  "\"\<\>\"", ",", "\"\<M TTRP TNBP TC PC DC REOS\>\"", ",", "0", ",", "0", 
   ",", 
   SubscriptBox["z", "Air3"]}], "]"}]], "Input",
 CellChangeTimes->{{3.823055517616854*^9, 3.823055523970858*^9}, {
  3.823055671738654*^9, 3.823055701034299*^9}, {3.825765880354748*^9, 
  3.825766003897453*^9}, {3.8259329415621543`*^9, 3.825932960841625*^9}, {
  3.82902316649175*^9, 3.829023167340505*^9}},
 CellLabel->"In[18]:=",
 CellID->558206195,ExpressionUUID->"d4d98b24-5145-4fce-a06a-0bc04b542a53"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"M\"\>", "\[Rule]", 
    TemplateBox[{"28.958600656`", 
      RowBox[{
       "\"kg\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
        "\"kmol\""}], "kilograms per kilomole", 
      FractionBox["\"Kilograms\"", "\"Kilomoles\""]},
     "Quantity"]}], ",", 
   RowBox[{"\<\"TTRP\"\>", "\[Rule]", 
    TemplateBox[{"63.151`", "\"K\"", "kelvins", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"TNBP\"\>", "\[Rule]", 
    TemplateBox[{"83.8058`", "\"K\"", "kelvins", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"TC\"\>", "\[Rule]", 
    TemplateBox[{"54.361`", "\"K\"", "kelvins", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"PC\"\>", "\[Rule]", 
    TemplateBox[{"77.355`", "\"kPa\"", "kilopascals", "\"Kilopascals\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"DC\"\>", "\[Rule]", 
    TemplateBox[{"87.302`", 
      RowBox[{
       "\"mol\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
        "\"L\""}], "moles per liter", 
      FractionBox["\"Moles\"", "\"Liters\""]},
     "Quantity"]}], ",", 
   RowBox[{"\<\"REOS\"\>", "\[Rule]", 
    TemplateBox[{"90.1878`", 
      RowBox[{
       "\"J\"", "\[InvisibleSpace]", "\"/(\"", "\[InvisibleSpace]", "\"K\"", 
        "\[ThinSpace]", "\"mol\"", "\[InvisibleSpace]", "\")\""}], 
      "joules per kelvin mole", 
      FractionBox["\"Joules\"", 
       RowBox[{"\"Kelvins\"", " ", "\"Moles\""}]]},
     "Quantity"]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8230555493948565`*^9, 3.823055702156267*^9, {3.8257659897731843`*^9, 
   3.8257660066809993`*^9}, 3.8259338885843554`*^9, 3.8290223347044888`*^9, 
   3.8290231689292297`*^9, 3.8295538108420954`*^9, 3.830788377535836*^9, 
   3.83078893782191*^9, 3.830789471073304*^9},
 CellLabel->"Out[18]=",
 CellID->868972825,ExpressionUUID->"01ad6ae4-7929-4aa0-ad6f-fa0a4feda615"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get the numeric constants for the individual components", "MathCaption",
 CellChangeTimes->{{3.8230548917637525`*^9, 3.82305490694113*^9}, {
  3.823055504754258*^9, 3.8230555098426466`*^9}, {3.8259225288570876`*^9, 
  3.82592255866339*^9}},
 CellID->59263332,ExpressionUUID->"1d8c339e-ffe9-4a56-b69d-12026fb62f2e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RefProp", "[", 
  RowBox[{
  "\"\<\>\"", ",", "\"\<TCRIT(1) TCRIT(2) TCRIT(3)\>\"", ",", "0", ",", "0", 
   ",", 
   SubscriptBox["z", "Air3"]}], "]"}]], "Input",
 CellChangeTimes->{{3.823055554126233*^9, 3.823055556170767*^9}, {
   3.8230557093869257`*^9, 3.8230557105388756`*^9}, {3.8257663178427863`*^9, 
   3.825766361960821*^9}, {3.8259213065797787`*^9, 3.82592134617689*^9}, {
   3.8259214810588694`*^9, 3.825921481337095*^9}, {3.8259215126902323`*^9, 
   3.8259215290724297`*^9}, {3.825921569930231*^9, 3.8259215888256626`*^9}, 
   3.825922590637898*^9, {3.8290223964115105`*^9, 3.829022407724265*^9}, {
   3.829022462828941*^9, 3.8290225168355484`*^9}, {3.8290226647321568`*^9, 
   3.8290226724435205`*^9}},
 CellLabel->"In[19]:=",
 CellID->42575265,ExpressionUUID->"95f721cd-8189-417d-9f6a-726f8b52b61c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"TCRIT(1)\"\>", "\[Rule]", "126.192`"}], ",", 
   RowBox[{"\<\"TCRIT(2)\"\>", "\[Rule]", "150.687`"}], ",", 
   RowBox[{"\<\"TCRIT(3)\"\>", "\[Rule]", "154.581`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8259215739823503`*^9, 3.825921589794072*^9}, 
   3.829022413188655*^9, {3.829022476456504*^9, 3.8290224935099106`*^9}, 
   3.829022526341133*^9, 3.8290226753437634`*^9, 3.8295538260704093`*^9, 
   3.8307883777791576`*^9, 3.8307889380642614`*^9, 3.8307894713116665`*^9},
 CellLabel->"Out[19]=",
 CellID->204879607,ExpressionUUID->"a7ff612f-a6d9-423d-8a47-6bea5f498903"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RefProp", "[", 
  RowBox[{
  "\"\<\>\"", ",", "\"\<MM(1) MM(2) MM(3)\>\"", ",", "0", ",", "0", ",", 
   SubscriptBox["z", "Air3"]}], "]"}]], "Input",
 CellChangeTimes->{{3.829022780715044*^9, 3.829022791307724*^9}},
 CellLabel->"In[20]:=",
 CellID->388862441,ExpressionUUID->"173db767-54b3-4f9c-85ef-bb98b0ea04ba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"MM(1)\"\>", "\[Rule]", "28.01348`"}], ",", 
   RowBox[{"\<\"MM(2)\"\>", "\[Rule]", "39.948`"}], ",", 
   RowBox[{"\<\"MM(3)\"\>", "\[Rule]", "31.9988`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.829022797345581*^9, 3.8295538299270697`*^9, 
  3.830788378015526*^9, 3.8307889383016267`*^9, 3.8307894715470357`*^9},
 CellLabel->"Out[20]=",
 CellID->733635516,ExpressionUUID->"1836ee76-cdb0-49d5-9974-160b6c976ba2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Alternatively, use a utility function to simplify multiple inputs\
\>", "MathCaption",
 CellChangeTimes->{{3.8305967351951947`*^9, 3.8305967710114117`*^9}, {
  3.830596843258102*^9, 3.8305968604341793`*^9}},
 CellID->163614416,ExpressionUUID->"8a1b9629-24e0-4d18-bb09-2863b2a59f62"],

Cell[BoxData[
 RowBox[{
  RowBox[{"hOutString", "[", 
   RowBox[{"str_String", ",", "n_Integer"}], "]"}], ":=", 
  RowBox[{"StringRiffle", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"str", "<>", "\"\<(\>\"", " ", "<>", " ", 
      RowBox[{"ToString", "[", "#", "]"}], " ", "<>", " ", "\"\<)\>\""}], 
     "&"}], "/@", 
    RowBox[{"Array", "[", 
     RowBox[{
      RowBox[{"#", "&"}], ",", "n"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8257597313361464`*^9, 3.8257597617009797`*^9}, {
   3.825759977522895*^9, 3.825760014745366*^9}, 3.8305969108363276`*^9, {
   3.8305971359071712`*^9, 3.8305971425783253`*^9}},
 CellLabel->"In[21]:=",
 CellID->113516622,ExpressionUUID->"6df5f5ff-43f9-4033-8624-d83749311b6b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hOutString", "[", 
  RowBox[{"\"\<PCRIT\>\"", ",", "ncomp"}], "]"}]], "Input",
 CellChangeTimes->{{3.8305971114206796`*^9, 3.8305971247939034`*^9}},
 CellLabel->"In[22]:=",
 CellID->29763904,ExpressionUUID->"96e6bf96-cc4c-4d61-8626-5c9f3e402488"],

Cell[BoxData["\<\"PCRIT(1) PCRIT(2) PCRIT(3)\"\>"], "Output",
 CellChangeTimes->{3.830597125899971*^9, 3.8305971585805435`*^9, 
  3.8307883783416862`*^9, 3.830788938623764*^9, 3.83078947187316*^9},
 CellLabel->"Out[22]=",
 CellID->131952752,ExpressionUUID->"5700503a-0347-453b-a3cb-02d35d301c43"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RefProp", "[", 
  RowBox[{"\"\<\>\"", ",", 
   RowBox[{"hOutString", "[", 
    RowBox[{"\"\<PCRIT\>\"", ",", "ncomp"}], "]"}], ",", "0", ",", "0", ",", 
   SubscriptBox["z", "Air3"]}], "]"}]], "Input",
 CellChangeTimes->{{3.8305967753966446`*^9, 3.8305968201788673`*^9}, {
  3.8305971653703766`*^9, 3.8305971696599016`*^9}},
 CellLabel->"In[23]:=",
 CellID->43546959,ExpressionUUID->"f307c19a-6803-4ad4-bcdd-86ec38857b6f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"PCRIT(1)\"\>", "\[Rule]", "3395.8`"}], ",", 
   RowBox[{"\<\"PCRIT(2)\"\>", "\[Rule]", "4863.`"}], ",", 
   RowBox[{"\<\"PCRIT(3)\"\>", "\[Rule]", "5043.`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8305968255484743`*^9, 3.830597171786212*^9, 
  3.8307883786308794`*^9, 3.8307889389229307`*^9, 3.830789472164385*^9},
 CellLabel->"Out[23]=",
 CellID->211914470,ExpressionUUID->"4f24f63d-1b09-4e75-afe3-38762afba2cc"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Leaving off the component number for a pure-component property returns the \
value for the ",
 StyleBox["first",
  FontSlant->"Italic"],
 " component only.  Use the mixture property string (\"M\") instead to get \
the mixture value."
}], "MathCaption",
 CellChangeTimes->{{3.8290234899090977`*^9, 3.829023544140074*^9}, {
  3.829553856489086*^9, 3.829553870088702*^9}, {3.8305972022137814`*^9, 
  3.8305972258505735`*^9}},
 CellID->61613211,ExpressionUUID->"ad54a5a6-dd21-4069-9797-7967e3de797e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"RefProp", "[", 
   RowBox[{"\"\<\>\"", ",", "\"\<MM\>\"", ",", "0", ",", "0", ",", 
    SubscriptBox["z", "Air3"]}], "]"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"1", "st", " ", "component"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.8290234282828293`*^9, 3.8290234291874084`*^9}, {
  3.8305972601378174`*^9, 3.830597268681964*^9}},
 CellLabel->"In[24]:=",
 CellID->346084844,ExpressionUUID->"8df14391-94fb-4098-ab54-77e60b8f76dd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"MM\"\>", "\[Rule]", 
   TemplateBox[{"28.01348`", 
     RowBox[{
      "\"kg\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       "\"kmol\""}], "kilograms per kilomole", 
     FractionBox["\"Kilograms\"", "\"Kilomoles\""]},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{3.829023432645164*^9, 3.8295538334496794`*^9, 
  3.8305972930627437`*^9, 3.83078837886329*^9, 3.8307889391643133`*^9, 
  3.8307894724017153`*^9},
 CellLabel->"Out[24]=",
 CellID->57804541,ExpressionUUID->"81a96e5c-d389-40e2-ba19-3f9a33dd1202"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"RefProp", "[", 
   RowBox[{"\"\<\>\"", ",", "\"\<M\>\"", ",", "0", ",", "0", ",", 
    SubscriptBox["z", "Air3"]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"mixture", " ", "value"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.8305972718734207`*^9, 3.830597284202465*^9}},
 CellLabel->"In[25]:=",
 CellID->200453411,ExpressionUUID->"375c969b-2c79-43c5-bef3-898cb654e303"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"M\"\>", "\[Rule]", 
   TemplateBox[{"28.958600656`", 
     RowBox[{
      "\"kg\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       "\"kmol\""}], "kilograms per kilomole", 
     FractionBox["\"Kilograms\"", "\"Kilomoles\""]},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{3.829023558733058*^9, 3.82955383627413*^9, 
  3.8305972967189856`*^9, 3.830788379096633*^9, 3.8307889394086637`*^9, 
  3.8307894726779766`*^9},
 CellLabel->"Out[25]=",
 CellID->166025945,ExpressionUUID->"8deb3c66-99e6-41d7-8f05-2b699a5ca4d9"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mixture Equation Limits", "Section",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.82305710368225*^9, 3.8230571116738462`*^9}},
 CellID->7569461,ExpressionUUID->"cc698813-6a99-435f-b90f-87864dae7c78"],

Cell["\<\
Each set of fluid equations was generated within a specific range of validity \
for the independent variables of temperature, pressure, and density.  It is a \
best practice to restrict calculations between these limits.\
\>", "Text",
 CellChangeTimes->{{3.822811729255211*^9, 3.822811857285797*^9}, 
   3.8228119246061*^9},
 CellID->594464066,ExpressionUUID->"02467c62-f4f9-404b-a9c7-6dce239079eb"],

Cell["\<\
Attempting calculations below the minimum temperature and/or above the \
maximum density is not recommended. These will often correspond to a \
physically unreasonable state; also many equations of state do not \
extrapolate reliably to lower Temperatures and higher Densities.\
\>", "Text",
 CellChangeTimes->{{3.8228120482234383`*^9, 3.8228120737262278`*^9}, {
  3.830597313649657*^9, 3.830597322913873*^9}},
 CellID->92632341,ExpressionUUID->"70c2b6b8-1c85-46ae-b885-a837746a0e01"],

Cell[TextData[{
 "Most equations of state, however, may be extrapolated to higher \
Temperatures and Pressures.  Temperatures can usually safely be extrapolated \
to Temperatures up to 1.5 * ",
 Cell[BoxData[
  SubscriptBox[
   StyleBox["T", "TI"], 
   StyleBox["max", "TI"]]], "InlineFormula",ExpressionUUID->
  "b103a9c9-2447-498d-af73-0f3c7e94f5bb"],
 " and pressures up to 2 * ",
 Cell[BoxData[
  SubscriptBox[
   StyleBox["P", "TI"], 
   StyleBox["max", "TI"]]], "InlineFormula",ExpressionUUID->
  "5be436ba-4f9e-4aa0-b0ce-8f10ee1f0080"],
 ".  Extrapolation beyond these extended limits is not recommended."
}], "Text",
 CellChangeTimes->{{3.822812115333931*^9, 3.822812176133341*^9}, {
  3.822812213463463*^9, 3.822812246093223*^9}, {3.822812281589281*^9, 
  3.8228123111651697`*^9}, {3.830597333065713*^9, 3.830597418033431*^9}},
 CellID->395169496,ExpressionUUID->"1c7ceadb-12ac-4983-b5f4-6e31f405725e"],

Cell[BoxData[GridBox[{
   {
    RowBox[{"RefProp", "[", 
     RowBox[{
      StyleBox["hFld", "TI"], ",", "\"\<\>\"", ",", 
      StyleBox["hOut", "TI"], ",", "0", ",", "0"}], "]"}], Cell["\<\
Retrieve fluid numeric constants specified in the hOut string. \
\>", "TableText",ExpressionUUID->"c397f522-4bfa-4b9e-87c5-48e15251d2e5"]}
  }]], "DefinitionBox",
 CellChangeTimes->{{3.8253657331377487`*^9, 3.8253657351543837`*^9}, {
  3.8253657889774733`*^9, 3.8253658467140675`*^9}, {3.8255734531131697`*^9, 
  3.8255734553701353`*^9}, {3.8255735051859274`*^9, 3.8255735872345467`*^9}, {
  3.8255736385613394`*^9, 3.825573674579091*^9}, {3.825573799896959*^9, 
  3.8255738325226955`*^9}, {3.825573879762413*^9, 3.8255739526734633`*^9}, {
  3.825620405994397*^9, 3.825620710465331*^9}, {3.825630677257697*^9, 
  3.825630677257697*^9}, {3.8257620347694206`*^9, 3.8257620397221794`*^9}, {
  3.8257658241949077`*^9, 3.825765828171276*^9}, {3.829023936043291*^9, 
  3.8290239361799555`*^9}, {3.8305975090808544`*^9, 3.830597516496011*^9}},
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.35], {
      Scaled[0.65]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->348821922,ExpressionUUID->"63f00587-6744-4bd3-8bd2-81f086f9f97c"],

Cell["Fluid equation Limits.", "Caption",
 CellChangeTimes->{{3.822593572812685*^9, 3.8225935774353223`*^9}, {
  3.8226025046350183`*^9, 3.8226025164513807`*^9}, {3.829109221278238*^9, 
  3.829109223950095*^9}},
 CellID->191781415,ExpressionUUID->"81a0d873-4457-4e0f-b0b1-228cb98afe68"],

Cell["\<\
For the model limits of a mixture, request the numeric constants for TMIN, \
TMAX, PMAX, and DMAX.\
\>", "Text",
 CellChangeTimes->{{3.8230565304664326`*^9, 3.8230565690093393`*^9}, {
  3.829024216098542*^9, 3.8290242169941473`*^9}, {3.8290242715074005`*^9, 
  3.829024306579632*^9}},
 CellID->164317926,ExpressionUUID->"ca5a5cef-8195-46f9-bc8a-9e82208a3df3"],

Cell["\<\
For mixtures, a simple mole fraction weighting in reduced variables is used.\
\>", "Text",
 CellChangeTimes->{{3.8290242470358267`*^9, 3.8290242553157187`*^9}},
 CellID->5306619,ExpressionUUID->"132fdbdb-adee-4249-a294-7c3a29b0c063"],

Cell[CellGroupData[{

Cell["Get the EOS fluid equation validity limits for the mixture", \
"MathCaption",
 CellChangeTimes->{{3.823056451314517*^9, 3.8230564694819317`*^9}, {
  3.823056619384604*^9, 3.823056625272823*^9}},
 CellID->302727579,ExpressionUUID->"d0bebe89-586e-4743-ac31-4659193cbb5b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RefProp", "[", 
  RowBox[{
  "\"\<\>\"", ",", "\"\<TMIN TMAX PMAX DMAX\>\"", ",", "0", ",", "0", ",", 
   SubscriptBox["z", "Air3"]}], "]"}]], "Input",
 CellChangeTimes->{{3.823056636599556*^9, 3.823056658322426*^9}, 
   3.8230572672657175`*^9, 3.8262588098777876`*^9, {3.8290243307500105`*^9, 
   3.8290243456123033`*^9}},
 CellLabel->"In[26]:=",
 CellID->244604783,ExpressionUUID->"404a86a2-d314-4c37-b752-b65e45503b64"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"TMIN\"\>", "\[Rule]", 
    TemplateBox[{"55.70590289300708`", "\"K\"", "kelvins", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"TMAX\"\>", "\[Rule]", 
    TemplateBox[{"1993.6943666478212`", "\"K\"", "kelvins", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"PMAX\"\>", "\[Rule]", 
    TemplateBox[{"1.7450272`*^6", "\"kPa\"", "kilopascals", "\"Kilopascals\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"DMAX\"\>", "\[Rule]", 
    TemplateBox[{"51.47570452071228`", 
      RowBox[{
       "\"mol\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
        "\"L\""}], "moles per liter", 
      FractionBox["\"Moles\"", "\"Liters\""]},
     "Quantity"]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8230566701667447`*^9, 3.8230572689372125`*^9, {3.826258801719599*^9, 
   3.826258811833556*^9}, 3.826259153169074*^9, 3.8270431715143576`*^9, 
   3.828871261383912*^9, 3.8290243516720743`*^9, 3.8295538816188955`*^9, 
   3.8307883957191896`*^9, 3.8307889475259147`*^9, 3.830789479312228*^9},
 CellLabel->"Out[26]=",
 CellID->61758583,ExpressionUUID->"c2c557f9-80b2-47d4-99c3-57bbf7975c4c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["State-dependent Properties", "Section",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.82305710368225*^9, 3.8230571116738462`*^9}, {
  3.8290245846990585`*^9, 3.829024593195343*^9}},
 CellID->607614576,ExpressionUUID->"abe65af4-8946-4e5d-a503-0e589750b23b"],

Cell[TextData[{
 "When calculating state-dependent properties, RefProp must, generally, be \
called with an input pair string in the ",
 Cell[BoxData[
  StyleBox["hIn", "TI"]], "InlineFormula",ExpressionUUID->
  "04c7f544-2913-481f-b74a-a53d9f1b8d6e"],
 " parameter, as well as the actual values of that input pair in parameters, ",
 Cell[BoxData[
  StyleBox["a", "TI"]], "InlineFormula",ExpressionUUID->
  "f92a10f7-dae6-4bd4-a371-7ce7673b2781"],
 " and ",
 Cell[BoxData[
  StyleBox["b", "TI"]], "InlineFormula",ExpressionUUID->
  "a20f6e2c-0431-415b-8258-d77ac545a197"],
 ".  For mixtures, the final ",
 Cell[BoxData[
  StyleBox["z", "TI"]], "InlineFormula",ExpressionUUID->
  "4fccf229-7643-467b-a022-ff83605e4675"],
 " parameter must also contain the current mixture's bulk composition"
}], "Text",
 CellChangeTimes->{{3.8291089724714427`*^9, 3.8291090731672287`*^9}, {
  3.829109299062277*^9, 3.8291093473102818`*^9}, {3.8291094072290573`*^9, 
  3.8291094467005606`*^9}, {3.8305974621045213`*^9, 3.8305974683538103`*^9}},
 CellID->337228190,ExpressionUUID->"649beedc-8579-4e3e-80c7-a9547fa53380"],

Cell[BoxData[GridBox[{
   {
    RowBox[{"RefProp", "[", 
     RowBox[{
      StyleBox["hFld", "TI"], ",", 
      StyleBox["hIn", "TI"], ",", 
      StyleBox["hOut", "TI"], ",", 
      StyleBox["a", "TI"], ",", 
      StyleBox["b", "TI"], ",", 
      StyleBox["z", "TI"]}], "]"}], Cell[
    "Calculate state-dependent mixture properties. ", "TableText",
     ExpressionUUID->"9da049b4-9f94-4819-b9f2-cdef38a6dd86"]}
  }]], "DefinitionBox",
 CellChangeTimes->{{3.8253657331377487`*^9, 3.8253657351543837`*^9}, {
   3.8253657889774733`*^9, 3.8253658467140675`*^9}, {3.8255734531131697`*^9, 
   3.8255734553701353`*^9}, {3.8255735051859274`*^9, 
   3.8255735872345467`*^9}, {3.8255736385613394`*^9, 3.825573674579091*^9}, {
   3.825573799896959*^9, 3.8255738325226955`*^9}, {3.825573879762413*^9, 
   3.8255739526734633`*^9}, {3.825620405994397*^9, 3.825620710465331*^9}, {
   3.825630677257697*^9, 3.825630677257697*^9}, {3.8257620347694206`*^9, 
   3.8257620397221794`*^9}, {3.8257658241949077`*^9, 3.825765828171276*^9}, {
   3.829023936043291*^9, 3.8290239361799555`*^9}, {3.829109090277491*^9, 
   3.829109120599384*^9}, {3.8291093585821185`*^9, 3.82910936680616*^9}, {
   3.8291095673509583`*^9, 3.8291095686305647`*^9}, 3.83059749356835*^9},
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.35], {
      Scaled[0.65]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->77312680,ExpressionUUID->"52816851-22e6-48a3-9c8f-2b250843690c"],

Cell["Fluid state-dependent properties.", "Caption",
 CellChangeTimes->{{3.822593572812685*^9, 3.8225935774353223`*^9}, {
  3.8226025046350183`*^9, 3.8226025164513807`*^9}, {3.829109381269478*^9, 
  3.8291093951423984`*^9}},
 CellID->41284769,ExpressionUUID->"acd67345-13a9-40bd-9112-b66aa2a167da"],

Cell["\<\
As before, if the fluid mixture has already been loaded, the first parameter, \
hFld, can be omitted.  The mixture string should be supplied, however, when \
changing fluids (as explained above).  \
\>", "Text",
 CellChangeTimes->{{3.8291091590954933`*^9, 3.829109159350778*^9}, {
  3.8291095879488897`*^9, 3.829109690421919*^9}, {3.830599641213204*^9, 
  3.8305996595890064`*^9}},
 CellID->592238353,ExpressionUUID->"3cdc92e1-86d2-47b0-9331-2fbaf5cfb2cb"],

Cell[TextData[{
 Cell[BoxData[
  StyleBox["hIn", "TI"]], "InlineFormula",ExpressionUUID->
  "4cfd6c91-916c-4e2d-807b-38ecd4c6e27a"],
 " typically contains a character code that specifies the input value types \
that define the state point.  Valid codes are T, P, D, E, H, S, and Q \
(temperature, pressure, density, energy, enthalpy, entropy, and quality).  \
Two of these should be sent together to identify the contents of the ",
 Cell[BoxData[
  StyleBox["a", "TI"]], "InlineFormula",ExpressionUUID->
  "1bc47493-b606-4467-ab45-7183bb8e0c29"],
 " and ",
 Cell[BoxData[
  StyleBox["b", "TI"]], "InlineFormula",ExpressionUUID->
  "d9f5153d-ee3c-4da6-b0ad-ca0baaa0bb4b"],
 " variables."
}], "Text",
 CellChangeTimes->{3.829110354960251*^9},
 CellID->107426830,ExpressionUUID->"69263f9a-f4e3-4ba4-953b-da654e79d64c"],

Cell[TextData[{
 "IMPORTANT: The order of the properties being sent to the routine in the \
variables ",
 Cell[BoxData[
  StyleBox["a", "TI"]], "InlineFormula",ExpressionUUID->
  "0965ad33-e7d5-4e58-aaf2-5262a5293638"],
 " and ",
 Cell[BoxData[
  StyleBox["b", "TI"]], "InlineFormula",ExpressionUUID->
  "2416247a-85c6-4ce0-a4f0-9435c3e97235"],
 " has to be the same as the order of the letter pair sent to ",
 Cell[BoxData[
  StyleBox["hIn", "TI"]], "InlineFormula",ExpressionUUID->
  "77bf4183-5145-46b5-8e14-777c72b585d5"],
 "; for example, if ",
 Cell[BoxData[
  StyleBox["hIn", "TI"]], "InlineFormula",ExpressionUUID->
  "7736aaf0-1095-4a8d-a58b-f34ac7df5325"],
 " is \"QT\", then ",
 Cell[BoxData[
  StyleBox["a", "TI"]], "InlineFormula",ExpressionUUID->
  "3d3de97a-f1fc-42e3-ad36-6bcc7e31780d"],
 "=Q and ",
 Cell[BoxData[
  StyleBox["b", "TI"]], "InlineFormula",ExpressionUUID->
  "c1bc274d-a189-4524-962d-2df03bca24eb"],
 "=T."
}], "Text",
 CellChangeTimes->{
  3.822814347216343*^9, {3.8228144331335344`*^9, 3.8228145318974047`*^9}},
 Background->RGBColor[0.9, 1, 1],
 CellID->569057450,ExpressionUUID->"8086e6fa-4905-484b-8057-66bc0ede62a7"],

Cell[TextData[{
 Cell[BoxData[
  StyleBox["hOut", "TI"]], "InlineFormula",ExpressionUUID->
  "ad0859ac-df56-444b-b019-c7b97cdddb79"],
 " contain a string of one or more of valid state-dependent properties as \
identified in Table 1 of the ",
 StyleBox[ButtonBox["NIST REFPROP Online DLL Documentation",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://refprop-docs.readthedocs.io/en/latest/DLL/index.html"], 
    None}],
  FontWeight->"Bold"],
 ", under the description for ",
 StyleBox["ALLPROPSdll",
  FontWeight->"Bold"],
 " in the High-Level API section.  Multiple values should be separated by \
spaces, commas, semicolons, or pipes (|), but these separators should not be \
mixed."
}], "Text",
 CellChangeTimes->{{3.8291104077909946`*^9, 3.829110471751004*^9}, {
   3.829110518087119*^9, 3.8291105499897966`*^9}, {3.829327761676029*^9, 
   3.8293278055497293`*^9}, 3.830599718217186*^9},
 CellID->203985613,ExpressionUUID->"3a9ed5f4-a3d5-43be-8ff2-2fa2fa0af6a2"],

Cell[CellGroupData[{

Cell["\<\
Calculate the state-dependent thermodynamic properties for Air at room \
temperature (fluid already loaded)\
\>", "MathCaption",
 CellChangeTimes->{{3.829110567623678*^9, 3.829110607158978*^9}, {
  3.829110758190157*^9, 3.829110762310142*^9}},
 CellID->306516178,ExpressionUUID->"091fdbc0-38fc-41fc-84ec-ad9f2771b372"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["T", "RT"], "=", 
   RowBox[{"72", "\[Degree]F"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["P", "RT"], "=", 
   RowBox[{"1", "atm"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"RefProp", "[", 
  RowBox[{"\"\<TP\>\"", ",", "\"\<D H S Cp Cv W\>\"", ",", 
   SubscriptBox["T", "RT"], ",", 
   SubscriptBox["P", "RT"], ",", 
   SubscriptBox["z", "Air3"]}], "]"}]}], "Input",
 CellChangeTimes->{{3.829110640449974*^9, 3.8291107405194006`*^9}, {
  3.829110780422743*^9, 3.829110818110982*^9}},
 CellLabel->"In[27]:=",
 CellID->109647490,ExpressionUUID->"fee1d231-05e4-4f03-a453-a9d1c24badf6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"D\"\>", "\[Rule]", 
    TemplateBox[{"0.0412719140037949`", 
      RowBox[{
       "\"mol\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
        "\"L\""}], "moles per liter", 
      FractionBox["\"Moles\"", "\"Liters\""]},
     "Quantity"]}], ",", 
   RowBox[{"\<\"H\"\>", "\[Rule]", 
    TemplateBox[{"8561.643595541915`", 
      RowBox[{
       "\"J\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
        "\"mol\""}], "joules per mole", 
      FractionBox["\"Joules\"", "\"Moles\""]},
     "Quantity"]}], ",", 
   RowBox[{"\<\"S\"\>", "\[Rule]", 
    TemplateBox[{"198.39305628405606`", 
      RowBox[{
       "\"J\"", "\[InvisibleSpace]", "\"/(\"", "\[InvisibleSpace]", "\"K\"", 
        "\[ThinSpace]", "\"mol\"", "\[InvisibleSpace]", "\")\""}], 
      "joules per kelvin mole", 
      FractionBox["\"Joules\"", 
       RowBox[{"\"Kelvins\"", " ", "\"Moles\""}]]},
     "Quantity"]}], ",", 
   RowBox[{"\<\"Cp\"\>", "\[Rule]", 
    TemplateBox[{"29.145968508338306`", 
      RowBox[{
       "\"J\"", "\[InvisibleSpace]", "\"/(\"", "\[InvisibleSpace]", "\"K\"", 
        "\[ThinSpace]", "\"mol\"", "\[InvisibleSpace]", "\")\""}], 
      "joules per kelvin mole", 
      FractionBox["\"Joules\"", 
       RowBox[{"\"Kelvins\"", " ", "\"Moles\""}]]},
     "Quantity"]}], ",", 
   RowBox[{"\<\"Cv\"\>", "\[Rule]", 
    TemplateBox[{"20.790395927296178`", 
      RowBox[{
       "\"J\"", "\[InvisibleSpace]", "\"/(\"", "\[InvisibleSpace]", "\"K\"", 
        "\[ThinSpace]", "\"mol\"", "\[InvisibleSpace]", "\")\""}], 
      "joules per kelvin mole", 
      FractionBox["\"Joules\"", 
       RowBox[{"\"Kelvins\"", " ", "\"Moles\""}]]},
     "Quantity"]}], ",", 
   RowBox[{"\<\"W\"\>", "\[Rule]", 
    TemplateBox[{"344.69049966576887`", 
      RowBox[{
       "\"m\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"s\""}], 
      "meters per second", 
      FractionBox["\"Meters\"", "\"Seconds\""]},
     "Quantity"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.829110821179777*^9, 3.829553896112119*^9, 
  3.8307884082526655`*^9, 3.83078895466086*^9, 3.8307894916402693`*^9},
 CellLabel->"Out[29]=",
 CellID->148094653,ExpressionUUID->"6d213a72-e5f1-47a2-b6bd-b5930016b94b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
The input pair can be specified in any order, but must match the order of a \
and b.\
\>", "MathCaption",
 CellChangeTimes->{{3.8291108445592422`*^9, 3.8291108894232936`*^9}},
 CellID->278165160,ExpressionUUID->"110a7e4b-ebc6-4b06-b4d2-a591fee81243"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RefProp", "[", 
  RowBox[{"\"\<PT\>\"", ",", "\"\<D H S Cp Cv W\>\"", ",", 
   SubscriptBox["P", "RT"], ",", 
   SubscriptBox["T", "RT"], ",", 
   SubscriptBox["z", "Air3"]}], "]"}]], "Input",
 CellChangeTimes->{{3.8291106141083927`*^9, 3.8291106159524393`*^9}, {
  3.8291109057855735`*^9, 3.8291109289845505`*^9}},
 CellLabel->"In[30]:=",
 CellID->11797651,ExpressionUUID->"255e02d5-e3bd-4f2d-8379-4ca71bf23f69"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"D\"\>", "\[Rule]", 
    TemplateBox[{"0.0412719140037949`", 
      RowBox[{
       "\"mol\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
        "\"L\""}], "moles per liter", 
      FractionBox["\"Moles\"", "\"Liters\""]},
     "Quantity"]}], ",", 
   RowBox[{"\<\"H\"\>", "\[Rule]", 
    TemplateBox[{"8561.643595541915`", 
      RowBox[{
       "\"J\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
        "\"mol\""}], "joules per mole", 
      FractionBox["\"Joules\"", "\"Moles\""]},
     "Quantity"]}], ",", 
   RowBox[{"\<\"S\"\>", "\[Rule]", 
    TemplateBox[{"198.39305628405606`", 
      RowBox[{
       "\"J\"", "\[InvisibleSpace]", "\"/(\"", "\[InvisibleSpace]", "\"K\"", 
        "\[ThinSpace]", "\"mol\"", "\[InvisibleSpace]", "\")\""}], 
      "joules per kelvin mole", 
      FractionBox["\"Joules\"", 
       RowBox[{"\"Kelvins\"", " ", "\"Moles\""}]]},
     "Quantity"]}], ",", 
   RowBox[{"\<\"Cp\"\>", "\[Rule]", 
    TemplateBox[{"29.145968508338306`", 
      RowBox[{
       "\"J\"", "\[InvisibleSpace]", "\"/(\"", "\[InvisibleSpace]", "\"K\"", 
        "\[ThinSpace]", "\"mol\"", "\[InvisibleSpace]", "\")\""}], 
      "joules per kelvin mole", 
      FractionBox["\"Joules\"", 
       RowBox[{"\"Kelvins\"", " ", "\"Moles\""}]]},
     "Quantity"]}], ",", 
   RowBox[{"\<\"Cv\"\>", "\[Rule]", 
    TemplateBox[{"20.790395927296178`", 
      RowBox[{
       "\"J\"", "\[InvisibleSpace]", "\"/(\"", "\[InvisibleSpace]", "\"K\"", 
        "\[ThinSpace]", "\"mol\"", "\[InvisibleSpace]", "\")\""}], 
      "joules per kelvin mole", 
      FractionBox["\"Joules\"", 
       RowBox[{"\"Kelvins\"", " ", "\"Moles\""}]]},
     "Quantity"]}], ",", 
   RowBox[{"\<\"W\"\>", "\[Rule]", 
    TemplateBox[{"344.69049966576887`", 
      RowBox[{
       "\"m\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"s\""}], 
      "meters per second", 
      FractionBox["\"Meters\"", "\"Seconds\""]},
     "Quantity"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.829110935596878*^9, 3.829553900813554*^9, 
  3.8307889549391136`*^9, 3.830789491921527*^9},
 CellLabel->"Out[30]=",
 CellID->48995446,ExpressionUUID->"ec1c47da-31c8-469d-92fe-0cceb1b6b2f4"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Consult the ",
 StyleBox[ButtonBox["RefProp",
  BaseStyle->"Link",
  ButtonData->"paclet:RefpropLink/ref/RefProp"],
  FontWeight->"Bold"],
 ButtonBox[" reference page",
  BaseStyle->"Link",
  ButtonData->"paclet:RefpropLink/ref/RefProp"],
 " for many more options that affect units, mixture behavior, and outputs."
}], "Text",
 CellChangeTimes->{{3.8228158476701164`*^9, 3.8228159426979337`*^9}, {
  3.822815974022194*^9, 3.822815974139835*^9}},
 CellID->327181305,ExpressionUUID->"97c3d1bb-21ee-4108-bfa3-61dbab8b92e9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calling SATSPLN", "Section",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.8291110298638425`*^9, 3.8291110355037594`*^9}},
 CellID->355043246,ExpressionUUID->"09517d08-06aa-4980-b400-5c25a930fdca"],

Cell[TextData[{
 "For pure fluids, the dew point and bubble point at the same temperature are \
also at the same pressure, since temperature and pressure are constant \
through the two-phase region as the fluid vaporizes or condenses.  This means \
that on a Pressure-Temperature (P-T) plot, there is one single saturation \
curve (i.e. the saturation curves overlap).  For ",
 StyleBox["multi-component mixtures",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ", however, this is not the case and the saturation temperature/pressure \
depends on the molar composition, which is not the same in the vapor and \
liquid equilibrium states.  This is demonstrated most dramatically for \
natural gas mixtures using Figure 1 from Volume 1 of Gas Conditioning and \
Processing [2], but occurs to some degree for all multi-component mixtures."
}], "Text",
 CellChangeTimes->{{3.823156707816448*^9, 3.823156727415056*^9}, {
   3.8231577730143933`*^9, 3.823157817045622*^9}, {3.828866449400976*^9, 
   3.828866496152975*^9}, {3.8288665905137005`*^9, 3.828866597761324*^9}, {
   3.828868887386112*^9, 3.8288689180980024`*^9}, 3.830599768549535*^9, {
   3.8305998430133753`*^9, 3.8305998526226673`*^9}, {3.8306001669006224`*^9, 
   3.830600166989385*^9}, {3.8306025166735587`*^9, 3.830602589305276*^9}},
 CellID->70163520,ExpressionUUID->"f60a3aac-ffed-4ccc-b8ad-ee8dd31fb785"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
AAAAAAAAAAAAAADQz/8DPgL6mA==
    "], {{0, 286.5}, {473.25, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->96],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{473.25, 286.5},
  PlotRange->{{0, 473.25}, {0, 286.5}}]], "Text",
 CellChangeTimes->{3.8288668363864946`*^9},
 TextAlignment->Center,
 CellID->372869032,ExpressionUUID->"c47a210f-49b1-4e1f-b858-a46a93f1d189"],

Cell[TextData[{
 StyleBox["Figure 1.",
  FontWeight->"Bold"],
 " Typical phase diagram for a multi-component natural gas mixture [1]"
}], "Caption",
 CellChangeTimes->{{3.822593572812685*^9, 3.8225935774353223`*^9}, {
  3.8226025046350183`*^9, 3.8226025164513807`*^9}, {3.8226051000172167`*^9, 
  3.82260511034559*^9}, {3.828866863361374*^9, 3.8288668844330378`*^9}},
 TextAlignment->Center,
 CellID->209083968,ExpressionUUID->"83a6e0d5-9a4c-4d91-87a7-7d747943b2ff"],

Cell[TextData[{
 "Of note, is the fact that the saturated liquid curve (bubble point curve) \
and the saturated vapor curve (dew point curve) do not overlap.  \
Additionally, the critical point is usually not at the maximum pressure on \
the saturation curves (the ",
 StyleBox["Cricondenbar",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ") or the maximum temperature (the ",
 StyleBox["Cricondentherm",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ").  Also of note is the retrograde region where vaporization/condensation \
occurs in the opposite direction with increasing pressure/temperature than it \
does in the remainder of the two-phase region.  Note also that the Critical \
Point can occur to the left (lower temperature) of the Cricondenbar, as it \
does in Figure 1, or in between the Cricondenbar and Cricondentherm \
temperatures, depending on the mixture components and concentration."
}], "Text",
 CellChangeTimes->{{3.8288689434931345`*^9, 3.828868952850112*^9}, {
  3.828870408793182*^9, 3.8288705227774353`*^9}, {3.8288705544816723`*^9, 
  3.8288706338265657`*^9}, {3.828870673578266*^9, 3.828870748026244*^9}, {
  3.8288708281140947`*^9, 3.828870913290398*^9}, {3.8288719749381657`*^9, 
  3.828871976913911*^9}},
 CellID->231316985,ExpressionUUID->"6fed0ade-b36b-4adf-b72e-e4e4c6092b70"],

Cell[CellGroupData[{

Cell["Calling SATSPLN (saturation spline)", "Subsection",
 CellChangeTimes->{{3.828871544162876*^9, 3.8288715631221867`*^9}, {
  3.8288848593808126`*^9, 3.82888486094962*^9}},
 CellID->567477762,ExpressionUUID->"5755e51e-c9bc-48e6-a1cc-af54ec044be1"],

Cell["\<\
Because this situation is so complex, especially near the critical point \
(retrograde region) and for increasing numbers of components beyond a binary \
mixture, it is a generally a good idea to have REFPROP make a call to SATSPLN \
for mixtures.  SATSPLN calculates algebraic spline curves through the \
saturated liquid and saturated vapor curves at a specific mixture composition \
and uses these splines to make state-point phase determinations, rather than \
applying mixing rules for every state-point determination.\
\>", "Text",
 CellChangeTimes->{{3.8288714116591635`*^9, 3.8288714276832933`*^9}, {
  3.828871486772315*^9, 3.828871490947152*^9}, {3.828871575074232*^9, 
  3.8288717095776267`*^9}, {3.828872018804883*^9, 3.8288721249540863`*^9}, {
  3.8291111980212345`*^9, 3.8291113023971815`*^9}, {3.830602640593043*^9, 
  3.830602687497554*^9}},
 CellID->311551272,ExpressionUUID->"7e1b0a58-334f-4dbe-90ec-aff387e02783"],

Cell["\<\
There are several ways to make sure SATSPLN gets called for a specific \
mixture composition.  First it can be specified in hIn when setting a fluid \
mixture with RefProp. \
\>", "Text",
 CellChangeTimes->{{3.830789052874078*^9, 3.8307890546503544`*^9}},
 CellID->474123320,ExpressionUUID->"8c7f4d3c-1f70-442f-99cd-37ac51917da9"],

Cell[CellGroupData[{

Cell["\<\
Load the predefined, tertiary Air mixture file, calling SATSPLN\
\>", "MathCaption",
 CellChangeTimes->{{3.8291967703294573`*^9, 3.82919680828102*^9}, {
  3.830655100650939*^9, 3.8306551037307034`*^9}},
 CellID->198945292,ExpressionUUID->"89a4efb5-eebe-4a6a-b566-23deee3683ae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["z", "Air3"], "=", 
  RowBox[{
   RowBox[{"RefProp", "[", 
    RowBox[{
    "\"\<AIR.MIX\>\"", ",", "\"\<SATSPLN\>\"", ",", "\"\<\>\"", ",", "0", ",",
      "0"}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8291968815371637`*^9, 3.829196886817019*^9}, {
   3.8291969180106196`*^9, 3.829196950520703*^9}, 3.8291974047692323`*^9, 
   3.829405253047694*^9, {3.829405560094776*^9, 3.8294055633979187`*^9}, {
   3.82955405331682*^9, 3.829554054384965*^9}, {3.8295540911696453`*^9, 
   3.829554093945197*^9}},
 CellLabel->"In[32]:=",
 CellID->37790736,ExpressionUUID->"92750741-beda-4ba7-8f9a-8db3c9cbb4ea"],

Cell[BoxData[
 TemplateBox[{
  "RefProp", "splnok", "\"INFO: Saturation splines created sucessfully.\"", 2,
    32, 1, 33619130975821255989, "Local", "RefpropLink`RefProp"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.8306551314933977`*^9, 3.830788968762102*^9, 
  3.83078900287586*^9, 3.8307895186469965`*^9},
 CellLabel->"During evaluation of In[32]:=",
 CellID->393304334,ExpressionUUID->"a03d736e-e81b-4031-aa9f-422c87ff1607"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.7812`", ",", "0.0092`", ",", "0.2096`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8294055662722607`*^9, 3.829405654875373*^9, 3.8294066163282633`*^9, 
   3.8294066727484226`*^9, 3.8294106550264287`*^9, 3.8294108397834654`*^9, 
   3.8294110140714593`*^9, 3.829411261959772*^9, 3.8294113688519917`*^9, 
   3.829411482393427*^9, {3.8295540217322636`*^9, 3.8295540462028723`*^9}, 
   3.8295540873947372`*^9, 3.829554119766184*^9, 3.830602715788869*^9, 
   3.830602750122014*^9, 3.830655131558255*^9, 3.830788968776065*^9, 
   3.830789002968617*^9, 3.8307895186599607`*^9},
 CellLabel->"Out[32]=",
 CellID->793567354,ExpressionUUID->"421ae469-d398-44b1-9797-408c38a26a88"]
}, Open  ]]
}, Open  ]],

Cell["\<\
This is an efficient way to load the fluid and call SATSPLN at the same time.\
\>", "Text",
 CellChangeTimes->{{3.829554165152819*^9, 3.829554184737457*^9}},
 CellID->45841113,ExpressionUUID->"d71bf8af-8b09-4c6e-9eb6-f1df23082b38"],

Cell[CellGroupData[{

Cell["\<\
If the mixture is already loaded, the mixture name does not need to be \
specified, but the mixture composition does.  Message can be suppressed with ;\
\>", "MathCaption",
 CellChangeTimes->{{3.8291972117054033`*^9, 3.8291972474169264`*^9}, {
  3.82941153729661*^9, 3.829411544224117*^9}},
 CellID->348159098,ExpressionUUID->"f9925eac-f83c-4df2-9113-ce00ad308527"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RefProp", "[", 
  RowBox[{"\"\<SATSPLN\>\"", ",", "\"\<\>\"", ",", "0", ",", "0", ",", 
   SubscriptBox["z", "Air3"]}], "]"}]], "Input",
 CellChangeTimes->{{3.829197274145466*^9, 3.8291972904169645`*^9}, {
  3.8291973342068872`*^9, 3.829197336297298*^9}, {3.829404124494334*^9, 
  3.829404125248296*^9}},
 CellLabel->"In[33]:=",
 CellID->69770858,ExpressionUUID->"9b66b637-6835-41b5-8d4d-0b1dd546ab30"],

Cell[BoxData[
 TemplateBox[{
  "RefProp", "splnok", "\"INFO: Saturation splines created sucessfully.\"", 2,
    33, 2, 33619130975821255989, "Local", "RefpropLink`RefProp"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.8294113737060146`*^9, 3.829411487419959*^9, 
  3.8295541907045374`*^9, 3.83065517735972*^9, 3.8307895496072016`*^9},
 CellLabel->"During evaluation of In[33]:=",
 CellID->330325075,ExpressionUUID->"ff53a391-45e0-4a56-bcd1-95ddf7e469a6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Alternately, there is an optional flag, iFlag, that can be set to 1 for any \
RefProp call\
\>", "MathCaption",
 CellChangeTimes->{{3.829197016257976*^9, 3.8291970511935444`*^9}},
 CellID->15873794,ExpressionUUID->"459ea09a-1ced-4193-8337-f8b6370ee1b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RefProp", "[", 
  RowBox[{"\"\<\>\"", ",", "\"\<M\>\"", ",", "0", ",", "0", ",", 
   SubscriptBox["z", "Air3"], ",", 
   RowBox[{"iFlag", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8291970909522486`*^9, 3.8291971340649815`*^9}, {
  3.8291971768167048`*^9, 3.8291971817285504`*^9}},
 CellLabel->"In[34]:=",
 CellID->38099927,ExpressionUUID->"153cce50-6ac5-42a2-b250-1d3a3ba48ae7"],

Cell[BoxData[
 TemplateBox[{
  "RefProp", "splnok", "\"INFO: Saturation splines created sucessfully.\"", 2,
    34, 3, 33619130975821255989, "Local", "RefpropLink`RefProp"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.8306551937468815`*^9, 3.830789554964836*^9},
 CellLabel->"During evaluation of In[34]:=",
 CellID->743947544,ExpressionUUID->"5c676841-d7fd-439d-a6ae-4c58d88cb3c1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"M\"\>", "\[Rule]", 
   TemplateBox[{"28.958600656`", 
     RowBox[{
      "\"kg\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
       "\"kmol\""}], "kilograms per kilomole", 
     FractionBox["\"Kilograms\"", "\"Kilomoles\""]},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{3.8291973565172377`*^9, 3.829197455549467*^9, 
  3.8293838077556562`*^9, 3.8294114129859915`*^9, 3.8295542013470716`*^9, 
  3.8306551939274*^9, 3.8307895549768305`*^9},
 CellLabel->"Out[34]=",
 CellID->200659325,ExpressionUUID->"82c8b762-faf9-4f3c-8638-c1019e8a73ca"]
}, Open  ]]
}, Open  ]],

Cell["\<\
SATSPLN only needs to be called once for any given mixture composition.  Once \
the saturation splines are created, they will be used for subsequent \
calculations for that composition.  The mixture critical point, \
cricondentherm, and cricondenbar have also been determined and can be \
retrieved.\
\>", "Text",
 CellChangeTimes->{{3.8291975551212683`*^9, 3.8291976161052094`*^9}, {
  3.829280683307147*^9, 3.829280689194436*^9}},
 CellID->786536758,ExpressionUUID->"8066111a-b357-4efb-acfa-816864b06aaa"],

Cell[CellGroupData[{

Cell["\<\
Get the critical point, cricondentherm, and cricondenbar for the mixture.  \
Note that hFld can be omitted, and hIn is required, but arbitrary to retrieve \
these constants.\
\>", "MathCaption",
 CellChangeTimes->{{3.8291976413148375`*^9, 3.829197665008492*^9}, {
  3.8291977452330112`*^9, 3.8291978087292433`*^9}, {3.830610115013841*^9, 
  3.830610121742836*^9}},
 CellID->34559254,ExpressionUUID->"7085d2cc-696b-4d96-8415-54f68a9ec0b7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RefProp", "[", 
  RowBox[{
  "\"\<\>\"", ",", "\"\<Tc Pc TmaxT PmaxT TmaxP PmaxP\>\"", ",", "0", ",", 
   "0", ",", 
   SubscriptBox["z", "Air3"]}], "]"}]], "Input",
 CellChangeTimes->{{3.829197677628749*^9, 3.8291976860881042`*^9}, {
  3.829197814321263*^9, 3.829197867497094*^9}, {3.8291979135060854`*^9, 
  3.8291979142890205`*^9}, {3.8291979513843555`*^9, 3.829197965313112*^9}, {
  3.8291980377214937`*^9, 3.829198089849126*^9}},
 CellLabel->"In[35]:=",
 CellID->304589978,ExpressionUUID->"667d95dc-32d7-433c-a9ce-86d060579984"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"Tc\"\>", "\[Rule]", 
    TemplateBox[{"132.8306975391704`", "\"K\"", "kelvins", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"Pc\"\>", "\[Rule]", 
    TemplateBox[{
     "3852.042257728868`", "\"kPa\"", "kilopascals", "\"Kilopascals\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"TmaxT\"\>", "\[Rule]", 
    TemplateBox[{"132.87430986429396`", "\"K\"", "kelvins", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"PmaxT\"\>", "\[Rule]", 
    TemplateBox[{
     "3850.191220407067`", "\"kPa\"", "kilopascals", "\"Kilopascals\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"TmaxP\"\>", "\[Rule]", 
    TemplateBox[{"132.85703410010262`", "\"K\"", "kelvins", "\"Kelvins\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"PmaxP\"\>", "\[Rule]", 
    TemplateBox[{
     "3853.160238324857`", "\"kPa\"", "kilopascals", "\"Kilopascals\""},
     "Quantity"]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8291978719133143`*^9, 3.829197973474264*^9, {3.829198063704056*^9, 
   3.829198092901965*^9}, 3.8292822115273438`*^9, 3.829282352141407*^9, 
   3.8293838187552185`*^9, 3.829554212545142*^9, 3.830655228899837*^9, 
   3.830789561939209*^9},
 CellLabel->"Out[35]=",
 CellID->212515285,ExpressionUUID->"40d9f1ab-fe53-406f-ad11-8a81f6ea62e9"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Saturation Properties", "Section",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.82305710368225*^9, 3.8230571116738462`*^9}, {
  3.829024642291088*^9, 3.8290246547956977`*^9}, {3.829024775963726*^9, 
  3.829024780685074*^9}, {3.830655251922216*^9, 3.8306552528996177`*^9}},
 CellID->59127286,ExpressionUUID->"ae8866fd-c1dc-43ea-bc3c-3eb34fb1c77f"],

Cell[TextData[{
 "When the fluid properties at the saturated liquid (bubble point) or \
saturated vapor (dew point) states along the boundaries of the two phase \
region are needed, the ",
 StyleBox["RefProp",
  FontWeight->"Bold"],
 " function can be used to calculate the vapor/liquid densities at a given \
saturation pressure or temperature.   "
}], "Text",
 CellChangeTimes->{{3.8168492667978787`*^9, 3.816849386013626*^9}, 
   3.8179997867066865`*^9, {3.822593460690585*^9, 3.822593472259637*^9}, 
   3.822593629534955*^9, {3.822598982839508*^9, 3.8225990563618293`*^9}, {
   3.8225999774766903`*^9, 3.8226001513735666`*^9}, {3.82260181892393*^9, 
   3.822601896188301*^9}, {3.8226020409391065`*^9, 3.8226020451169634`*^9}, 
   3.822604849730685*^9, {3.8226051394487777`*^9, 3.82260515201713*^9}, {
   3.8226079297830935`*^9, 3.8226080916222224`*^9}, 3.8228136934041185`*^9, 
   3.83034695383315*^9},
 CellID->67387048,ExpressionUUID->"44be7160-089d-4bc3-8064-ad462d7e8442"],

Cell[BoxData[GridBox[{
   {
    RowBox[{"RefProp", "[", 
     RowBox[{
      StyleBox["hFld", "TI"], ",", "\"\<AQ\>\"", ",", 
      StyleBox["hOut", "TI"], ",", 
      StyleBox["a", "TI"], ",", 
      StyleBox["b", "TI"], ",", 
      StyleBox["z", "TI"]}], "]"}], Cell[
    "Calculate state-dependent mixture properties. ", "TableText",
     ExpressionUUID->"205b6c0b-e29e-4566-8571-c5e3621a285f"]}
  }]], "DefinitionBox",
 CellChangeTimes->{{3.8253657331377487`*^9, 3.8253657351543837`*^9}, {
   3.8253657889774733`*^9, 3.8253658467140675`*^9}, {3.8255734531131697`*^9, 
   3.8255734553701353`*^9}, {3.8255735051859274`*^9, 
   3.8255735872345467`*^9}, {3.8255736385613394`*^9, 3.825573674579091*^9}, {
   3.825573799896959*^9, 3.8255738325226955`*^9}, {3.825573879762413*^9, 
   3.8255739526734633`*^9}, {3.825620405994397*^9, 3.825620710465331*^9}, {
   3.825630677257697*^9, 3.825630677257697*^9}, {3.8257620347694206`*^9, 
   3.8257620397221794`*^9}, {3.8257658241949077`*^9, 3.825765828171276*^9}, {
   3.829023936043291*^9, 3.8290239361799555`*^9}, {3.829109090277491*^9, 
   3.829109120599384*^9}, {3.8291093585821185`*^9, 3.82910936680616*^9}, {
   3.8291095673509583`*^9, 3.8291095686305647`*^9}, 3.830655281686586*^9, {
   3.830655758347377*^9, 3.830655835330425*^9}, 3.8306561176820793`*^9},
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.35], {
      Scaled[0.65]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->662354869,ExpressionUUID->"23953fa6-af22-4557-96b8-ca4d9aaba5a7"],

Cell["Fluid state-dependent, saturation properties.", "Caption",
 CellChangeTimes->{{3.822593572812685*^9, 3.8225935774353223`*^9}, {
  3.8226025046350183`*^9, 3.8226025164513807`*^9}, {3.829109381269478*^9, 
  3.8291093951423984`*^9}, {3.8306553049384108`*^9, 3.830655318722535*^9}},
 CellID->107467495,ExpressionUUID->"b2a2fe58-1485-4fd0-a52e-c4fd8549adbe"],

Cell["\<\
To get the saturation properties,  use input pairs that include the vapor \
quality, Q.  Setting Q to 0 will return values along the saturated liquid \
curve (no vapor).  Conversely, setting Q to 1 will return values along the \
saturated vapor curve (100% vapor).\
\>", "Text",
 CellChangeTimes->{{3.8228203772151947`*^9, 3.8228205701182365`*^9}, {
  3.830347110325658*^9, 3.830347130469054*^9}},
 CellID->307684685,ExpressionUUID->"4c9937e5-a0fc-411b-9aee-0bfa0a8a53a1"],

Cell["\<\
Q can be paired with either temperature (TQ) or pressure (PQ), as well as \
density, enthalpy, internal energy, or entropy (DQ, HQ, EQ, SQ), and the \
non-Q value must be between the triple point and the critical point.\
\>", "Text",
 CellChangeTimes->{{3.8228205792627783`*^9, 3.8228206244628515`*^9}, {
  3.8306555466267924`*^9, 3.83065567654622*^9}},
 CellID->156526136,ExpressionUUID->"8e097f4b-4c49-41cf-a6ac-9f8aef36313e"],

Cell[CellGroupData[{

Cell["\<\
Calculate the a temperature half way between the triple point and the \
critical point\
\>", "MathCaption",
 CellChangeTimes->{{3.8231701691403666`*^9, 3.8231701978196297`*^9}, {
  3.82317039680244*^9, 3.823170415690919*^9}, {3.8288774864025908`*^9, 
  3.828877539018943*^9}, {3.8288778480826097`*^9, 3.828877856115162*^9}, {
  3.82928194013894*^9, 3.8292819710503035`*^9}},
 CellID->422065167,ExpressionUUID->"4dc2eff1-6bd5-461b-a662-efad7a201378"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"Ttrp", ",", "Ptrp"}], "}"}], "=", 
  RowBox[{
   RowBox[{"RefProp", "[", 
    RowBox[{"\"\<TRIP\>\"", ",", "\"\<T P\>\"", ",", "0", ",", "0", ",", 
     SubscriptBox["z", "Air3"]}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.823170430774545*^9, 3.823170474995268*^9}, {
   3.823170552186833*^9, 3.8231706770338764`*^9}, {3.8231714925945225`*^9, 
   3.8231714962816887`*^9}, {3.8288775441801434`*^9, 
   3.8288776225875177`*^9}, {3.8288778097959986`*^9, 
   3.8288778255399113`*^9}, {3.8288849072298837`*^9, 3.828884926086469*^9}, 
   3.828884958366166*^9, {3.8292819184828367`*^9, 3.829281921108789*^9}, {
   3.8292820467080164`*^9, 3.8292821843560047`*^9}, {3.829282670756576*^9, 
   3.82928270766789*^9}, {3.829383650738454*^9, 3.8293836514974194`*^9}},
 CellLabel->"In[36]:=",
 CellID->80172452,ExpressionUUID->"80648ebc-1c68-4841-bd88-db498bd5ba35"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"55.70590289300708`", "\"K\"", "kelvins", "\"Kelvins\""},
    "Quantity"], ",", 
   TemplateBox[{
    "2.094261822826547`", "\"kPa\"", "kilopascals", "\"Kilopascals\""},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{{3.8292821715781384`*^9, 3.8292821854360886`*^9}, 
   3.8292827094441395`*^9, 3.8293836573637123`*^9, 3.8293930090016804`*^9, 
   3.8295542228276477`*^9, 3.8306556957359147`*^9, 3.8307895812335587`*^9},
 CellLabel->"Out[36]=",
 CellID->171211079,ExpressionUUID->"2144103b-c9bd-49e2-a1b0-aaf1f6f3cf28"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"Tcrit", ",", "Pcrit"}], "}"}], "=", 
  RowBox[{
   RowBox[{"RefProp", "[", 
    RowBox[{"\"\<CRIT\>\"", ",", "\"\<T P\>\"", ",", "0", ",", "0", ",", 
     SubscriptBox["z", "Air3"]}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8292827277312202`*^9, 3.829282741100505*^9}},
 CellLabel->"In[37]:=",
 CellID->30852540,ExpressionUUID->"7a880fe4-8048-40ff-9334-8afba282fee1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"132.8306975391704`", "\"K\"", "kelvins", "\"Kelvins\""},
    "Quantity"], ",", 
   TemplateBox[{
    "3852.0482143598224`", "\"kPa\"", "kilopascals", "\"Kilopascals\""},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{3.8292827629570413`*^9, 3.8293836616542416`*^9, 
  3.8293930131695375`*^9, 3.8295542267541485`*^9, 3.8306556998628426`*^9, 
  3.83078958153575*^9},
 CellLabel->"Out[37]=",
 CellID->131383124,ExpressionUUID->"bc807058-80d9-4718-9760-9e6adee22601"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"T", "=", 
  RowBox[{"0.5", 
   RowBox[{"(", 
    RowBox[{"Ttrp", "+", "Tcrit"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.829282791790958*^9, 3.829282809187441*^9}},
 CellLabel->"In[38]:=",
 CellID->791991855,ExpressionUUID->"b2e7f320-0318-40ce-ba3b-e4698e86e18a"],

Cell[BoxData[
 TemplateBox[{"94.26830021608873`", "\"K\"", "kelvins", "\"Kelvins\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.829282812017872*^9, 3.829383679166421*^9, 
  3.829393016981346*^9, 3.829554230231824*^9, 3.8306557028119793`*^9, 
  3.83078958171527*^9},
 CellLabel->"Out[38]=",
 CellID->17520033,ExpressionUUID->"43c59e91-394f-455c-bcc2-faf66d07630a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Calculate properties on the ",
 StyleBox["liquid saturation curve, Q = 0",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ", at T"
}], "MathCaption",
 CellChangeTimes->{{3.8292828524607463`*^9, 3.8292828813804264`*^9}, {
  3.829282944590434*^9, 3.8292829460914173`*^9}},
 CellID->224255328,ExpressionUUID->"0d54fba6-9857-4d1a-a928-e8c2fdd5a570"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RefProp", "[", 
  RowBox[{"\"\<TQ\>\"", ",", "\"\<P D H S Cp Cv\>\"", ",", "T", ",", "0", ",", 
   SubscriptBox["z", "Air3"]}], "]"}]], "Input",
 CellChangeTimes->{{3.8292824796525126`*^9, 3.8292824818745375`*^9}, {
  3.829282584524124*^9, 3.829282590147086*^9}, {3.8292826349562893`*^9, 
  3.829282635491829*^9}, {3.829282895452832*^9, 3.8292829269316697`*^9}},
 CellLabel->"In[39]:=",
 CellID->749135514,ExpressionUUID->"8c061923-9e32-44fd-8d60-a22d8d34a3b1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"P\"\>", "\[Rule]", 
    TemplateBox[{
     "433.0013343166659`", "\"kPa\"", "kilopascals", "\"Kilopascals\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"D\"\>", "\[Rule]", 
    TemplateBox[{"27.687716749641588`", 
      RowBox[{
       "\"mol\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
        "\"L\""}], "moles per liter", 
      FractionBox["\"Moles\"", "\"Liters\""]},
     "Quantity"]}], ",", 
   RowBox[{"\<\"H\"\>", "\[Rule]", 
    TemplateBox[{
      RowBox[{"-", "2768.0524736300226`"}], 
      RowBox[{
       "\"J\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
        "\"mol\""}], "joules per mole", 
      FractionBox["\"Joules\"", "\"Moles\""]},
     "Quantity"]}], ",", 
   RowBox[{"\<\"S\"\>", "\[Rule]", 
    TemplateBox[{"96.33973347245478`", 
      RowBox[{
       "\"J\"", "\[InvisibleSpace]", "\"/(\"", "\[InvisibleSpace]", "\"K\"", 
        "\[ThinSpace]", "\"mol\"", "\[InvisibleSpace]", "\")\""}], 
      "joules per kelvin mole", 
      FractionBox["\"Joules\"", 
       RowBox[{"\"Kelvins\"", " ", "\"Moles\""}]]},
     "Quantity"]}], ",", 
   RowBox[{"\<\"Cp\"\>", "\[Rule]", 
    TemplateBox[{"59.450807046313884`", 
      RowBox[{
       "\"J\"", "\[InvisibleSpace]", "\"/(\"", "\[InvisibleSpace]", "\"K\"", 
        "\[ThinSpace]", "\"mol\"", "\[InvisibleSpace]", "\")\""}], 
      "joules per kelvin mole", 
      FractionBox["\"Joules\"", 
       RowBox[{"\"Kelvins\"", " ", "\"Moles\""}]]},
     "Quantity"]}], ",", 
   RowBox[{"\<\"Cv\"\>", "\[Rule]", 
    TemplateBox[{"28.279191388971444`", 
      RowBox[{
       "\"J\"", "\[InvisibleSpace]", "\"/(\"", "\[InvisibleSpace]", "\"K\"", 
        "\[ThinSpace]", "\"mol\"", "\[InvisibleSpace]", "\")\""}], 
      "joules per kelvin mole", 
      FractionBox["\"Joules\"", 
       RowBox[{"\"Kelvins\"", " ", "\"Moles\""}]]},
     "Quantity"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.829282398956226*^9, 3.829282483914085*^9, 
  3.829282593487157*^9, 3.8292826368731656`*^9, 3.829282958736638*^9, 
  3.8293837190428085`*^9, 3.829554234968161*^9, 3.8306557096486664`*^9, 
  3.830789581970587*^9},
 CellLabel->"Out[39]=",
 CellID->352947584,ExpressionUUID->"c6dc70a9-fcda-4ab1-8381-acaa02934e77"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Calculate properties on the ",
 StyleBox["vapor saturation curve, Q = 1",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ", at T"
}], "MathCaption",
 CellChangeTimes->{{3.8292828524607463`*^9, 3.8292828813804264`*^9}, {
  3.829282944590434*^9, 3.8292829460914173`*^9}, {3.8292829963310976`*^9, 
  3.829282997755289*^9}, {3.8292830278438454`*^9, 3.829283028010441*^9}},
 CellID->255082240,ExpressionUUID->"c00001cf-cc00-4c76-a263-e6e2171bc14d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RefProp", "[", 
  RowBox[{"\"\<TQ\>\"", ",", "\"\<P D H S Cp Cv\>\"", ",", "T", ",", "1", ",", 
   SubscriptBox["z", "Air3"]}], "]"}]], "Input",
 CellChangeTimes->{{3.8292824796525126`*^9, 3.8292824818745375`*^9}, {
  3.829282584524124*^9, 3.829282590147086*^9}, {3.8292826349562893`*^9, 
  3.829282635491829*^9}, {3.829282895452832*^9, 3.8292829269316697`*^9}, {
  3.8292830338029413`*^9, 3.8292830344522057`*^9}},
 CellLabel->"In[40]:=",
 CellID->105178510,ExpressionUUID->"dd026df7-021c-422d-a7ca-b26c81943d16"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"P\"\>", "\[Rule]", 
    TemplateBox[{
     "356.56032062882025`", "\"kPa\"", "kilopascals", "\"Kilopascals\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"D\"\>", "\[Rule]", 
    TemplateBox[{"0.5018721820545801`", 
      RowBox[{
       "\"mol\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
        "\"L\""}], "moles per liter", 
      FractionBox["\"Moles\"", "\"Liters\""]},
     "Quantity"]}], ",", 
   RowBox[{"\<\"H\"\>", "\[Rule]", 
    TemplateBox[{"2514.4490483612312`", 
      RowBox[{
       "\"J\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
        "\"mol\""}], "joules per mole", 
      FractionBox["\"Joules\"", "\"Moles\""]},
     "Quantity"]}], ",", 
   RowBox[{"\<\"S\"\>", "\[Rule]", 
    TemplateBox[{"153.26373703558355`", 
      RowBox[{
       "\"J\"", "\[InvisibleSpace]", "\"/(\"", "\[InvisibleSpace]", "\"K\"", 
        "\[ThinSpace]", "\"mol\"", "\[InvisibleSpace]", "\")\""}], 
      "joules per kelvin mole", 
      FractionBox["\"Joules\"", 
       RowBox[{"\"Kelvins\"", " ", "\"Moles\""}]]},
     "Quantity"]}], ",", 
   RowBox[{"\<\"Cp\"\>", "\[Rule]", 
    TemplateBox[{"34.350115525671114`", 
      RowBox[{
       "\"J\"", "\[InvisibleSpace]", "\"/(\"", "\[InvisibleSpace]", "\"K\"", 
        "\[ThinSpace]", "\"mol\"", "\[InvisibleSpace]", "\")\""}], 
      "joules per kelvin mole", 
      FractionBox["\"Joules\"", 
       RowBox[{"\"Kelvins\"", " ", "\"Moles\""}]]},
     "Quantity"]}], ",", 
   RowBox[{"\<\"Cv\"\>", "\[Rule]", 
    TemplateBox[{"22.206386233773106`", 
      RowBox[{
       "\"J\"", "\[InvisibleSpace]", "\"/(\"", "\[InvisibleSpace]", "\"K\"", 
        "\[ThinSpace]", "\"mol\"", "\[InvisibleSpace]", "\")\""}], 
      "joules per kelvin mole", 
      FractionBox["\"Joules\"", 
       RowBox[{"\"Kelvins\"", " ", "\"Moles\""}]]},
     "Quantity"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.829282398956226*^9, 3.829282483914085*^9, 
  3.829282593487157*^9, 3.8292826368731656`*^9, 3.829282958736638*^9, 
  3.829283058317401*^9, 3.8293837228755627`*^9, 3.829554238802909*^9, 
  3.830655716048538*^9, 3.8307895822269044`*^9},
 CellLabel->"Out[40]=",
 CellID->286747656,ExpressionUUID->"6728fdbe-0a5a-4cad-bee6-7171f5e9a3c7"]
}, Open  ]]
}, Open  ]],

Cell["\<\
As before, return values can be extracted from the return List, as needed for \
subsequent calculations.\
\>", "Text",
 CellChangeTimes->{{3.829283269532688*^9, 3.829283307180047*^9}},
 CellID->4580821,ExpressionUUID->"ba321d99-d550-4049-9540-b3190d1ab793"],

Cell[CellGroupData[{

Cell["\<\
Extract the saturated liquid and saturated vapor pressures and densities @ T\
\>", "MathCaption",
 CellChangeTimes->{{3.8292833180379877`*^9, 3.8292833578435936`*^9}},
 CellID->63126096,ExpressionUUID->"42a72ba3-582c-4587-ae00-30be80d2a9ec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["P", "L"], ",", 
    SubscriptBox["D", "L"]}], "}"}], "=", 
  RowBox[{
   RowBox[{"RefProp", "[", 
    RowBox[{"\"\<TQ\>\"", ",", "\"\<P D\>\"", ",", "T", ",", "0", ",", 
     SubscriptBox["z", "Air3"]}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.829283412738799*^9, 3.8292834452110124`*^9}, {
  3.8293267230558605`*^9, 3.829326730469041*^9}},
 CellLabel->"In[41]:=",
 CellID->173193684,ExpressionUUID->"c5cdaec4-7e17-4666-a823-c385c5d24806"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
    "433.0013343166659`", "\"kPa\"", "kilopascals", "\"Kilopascals\""},
    "Quantity"], ",", 
   TemplateBox[{"27.687716749641588`", 
     RowBox[{
      "\"mol\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"L\""}],
      "moles per liter", 
     FractionBox["\"Moles\"", "\"Liters\""]},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{3.829283455758806*^9, 3.8293263682165813`*^9, 
  3.829326656955584*^9, 3.829326732079734*^9, 3.8293837615052824`*^9, 
  3.829393030775467*^9, 3.82955424282818*^9, 3.8306557330829673`*^9, 
  3.8307895824652634`*^9},
 CellLabel->"Out[41]=",
 CellID->125816210,ExpressionUUID->"c9fbe97c-33a9-4e5e-b879-1fcdd264841c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["P", "V"], ",", 
    SubscriptBox["D", "V"]}], "}"}], "=", 
  RowBox[{
   RowBox[{"RefProp", "[", 
    RowBox[{"\"\<TQ\>\"", ",", "\"\<P D\>\"", ",", "T", ",", "1", ",", 
     SubscriptBox["z", "Air3"]}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.829283412738799*^9, 3.8292834806602345`*^9}, {
  3.8293267353340335`*^9, 3.829326738677125*^9}},
 CellLabel->"In[42]:=",
 CellID->280996417,ExpressionUUID->"1a2ad0dd-28be-435d-b5da-ac0ed668ed9c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{
    "356.56032062882025`", "\"kPa\"", "kilopascals", "\"Kilopascals\""},
    "Quantity"], ",", 
   TemplateBox[{"0.5018721820545801`", 
     RowBox[{
      "\"mol\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", "\"L\""}],
      "moles per liter", 
     FractionBox["\"Moles\"", "\"Liters\""]},
    "Quantity"]}], "}"}]], "Output",
 CellChangeTimes->{3.8292834861256237`*^9, 3.829326372051298*^9, 
  3.8293266609030313`*^9, 3.829326740141181*^9, 3.8293837652513*^9, 
  3.829393034296054*^9, 3.82955424626795*^9, 3.8306557378332586`*^9, 
  3.830789582796377*^9},
 CellLabel->"Out[42]=",
 CellID->308679660,ExpressionUUID->"acd10132-3696-4364-a8e3-e2368f0d9fff"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Note that the point on the saturated vapor curve is at a lower pressure than \
the point on the saturated liquid curve, as expected.  At a pressure between \
these two values, the mixture will be two-phase, with differing molar \
concentrations in each phase; requiring a flash calculation to get the \
vapor/liquid molar densities and mole fractions in each phase (see below).\
\>", "Text",
 CellChangeTimes->{{3.8231712680112157`*^9, 3.8231712699470415`*^9}, {
  3.8231758860698786`*^9, 3.8231759497256246`*^9}, {3.8231760274207797`*^9, 
  3.823176056621706*^9}, {3.8231762363898773`*^9, 3.8231762647420435`*^9}, {
  3.823176530885082*^9, 3.8231766675814605`*^9}, {3.823176748527953*^9, 
  3.823176773789383*^9}, {3.8231849481338215`*^9, 3.823184950493507*^9}, {
  3.828884810221244*^9, 3.8288848378932605`*^9}, {3.8288850808526907`*^9, 
  3.8288850809474354`*^9}, {3.829283209387501*^9, 3.8292832122388515`*^9}},
 CellID->125930538,ExpressionUUID->"76c86f7b-6093-4e84-a74a-5f3c0028d919"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting the Saturation Curves", "Section",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.82305710368225*^9, 3.8230571116738462`*^9}, {
  3.8258485872970705`*^9, 3.8258485935613003`*^9}, {3.8288851017079325`*^9, 
  3.828885109053316*^9}},
 CellID->221654001,ExpressionUUID->"aba96ead-cc21-4897-9762-900c5c6b0fbb"],

Cell["\<\
While NIST REFPROP comes with a graphical interface that can make plots, \
phase diagrams can be custom created for fluids and mixtures with great \
control and annotations using the plotting tools available in Mathematica. \
\>", "Text",
 CellChangeTimes->{{3.828945155026059*^9, 3.8289451886820765`*^9}, {
  3.8289453942185583`*^9, 3.828945397562646*^9}, {3.828946677754636*^9, 
  3.828946855506402*^9}},
 CellID->9091236,ExpressionUUID->"70e9bacd-59bc-4ed3-876a-248d9f2f77d9"],

Cell["\<\
Still using the tertiary-air mixture, plot the saturation curve for this \
fluid using temperatures between the triple point and critical points \
temperatures.\
\>", "Text",
 CellChangeTimes->{
  3.828946873660894*^9, {3.82894692202557*^9, 3.8289469688194513`*^9}, {
   3.8289473598988695`*^9, 3.8289474249060974`*^9}, {3.828949068106207*^9, 
   3.8289490700420313`*^9}},
 CellID->264899,ExpressionUUID->"2da180ba-8117-4229-8e08-1d0f60286c08"],

Cell[CellGroupData[{

Cell["\<\
The triple point and critical point values have already been defined above, \
however, the temperature on the vapor saturation curve at Ptrp needs to be \
defined, as well as the cricondentherm temperature as limits on the vapor \
saturation curve.\
\>", "MathCaption",
 CellChangeTimes->{{3.8289471405154085`*^9, 3.828947164050514*^9}, {
  3.828951945459659*^9, 3.828951969275984*^9}, {3.829324917596896*^9, 
  3.8293249347001705`*^9}, {3.829325101724616*^9, 3.829325135380635*^9}, {
  3.829325166788663*^9, 3.8293251815083375`*^9}, {3.829325241453041*^9, 
  3.8293252548861265`*^9}, {3.829325884931652*^9, 3.8293259244390345`*^9}},
 CellID->357286776,ExpressionUUID->"8dcbe7f9-ae1d-4692-8fc0-cedac97f68f9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TminV", "=", 
  RowBox[{
   RowBox[{"RefProp", "[", 
    RowBox[{"\"\<PQ\>\"", ",", "\"\<T\>\"", ",", "Ptrp", ",", "1", ",", 
     SubscriptBox["z", "Air3"]}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.828947935730728*^9, 3.828947942603355*^9}, {
  3.828949599099554*^9, 3.8289496010174265`*^9}, {3.8293252785149536`*^9, 
  3.829325338293132*^9}},
 CellLabel->"In[19]:=",
 CellID->157226984,ExpressionUUID->"6a4a36a1-edeb-43ce-8668-d50ca04cfe9d"],

Cell[BoxData[
 TemplateBox[{"59.153542359973315`", "\"K\"", "kelvins", "\"Kelvins\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.828947944164154*^9, 3.8289496118554506`*^9, 
  3.8289498570479183`*^9, 3.8289499171980925`*^9, 3.8289518555031366`*^9, 
  3.829281013534289*^9, 3.829325342896823*^9, 3.8293837743130665`*^9, 
  3.8293930477071986`*^9},
 CellLabel->"Out[19]=",
 CellID->299094355,ExpressionUUID->"ef6bf8d1-a111-4765-94b4-59fec36e11f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TmaxV", "=", 
  RowBox[{
   RowBox[{"RefProp", "[", 
    RowBox[{"\"\<\>\"", ",", "\"\<TmaxT\>\"", ",", "0", ",", "0", ",", 
     SubscriptBox["z", "Air3"]}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8293259336593733`*^9, 3.829325982357205*^9}},
 CellLabel->"In[20]:=",
 CellID->67756654,ExpressionUUID->"ff544699-e376-42a2-95f2-cd9d06561fa9"],

Cell[BoxData[
 TemplateBox[{"132.8774772844353`", "\"K\"", "kelvins", "\"Kelvins\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.829325996636001*^9, 3.8293837785287685`*^9, 
  3.8293930519359174`*^9},
 CellLabel->"Out[20]=",
 CellID->66926118,ExpressionUUID->"aa6fd4b1-456b-4c5e-8187-5f51f0c63b1e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Set Up Saturation Curves", "MathCaption",
 CellChangeTimes->{{3.828947985284216*^9, 3.8289479947159996`*^9}},
 CellID->537344581,ExpressionUUID->"38a3047f-942e-4944-9238-826df2dee869"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"satVCurve", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"QuantityMagnitude", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"RefProp", "[", 
         RowBox[{"\"\<TQ\>\"", ",", "\"\<P\>\"", ",", 
          RowBox[{"t", "*", "K"}], ",", "1", ",", 
          SubscriptBox["z", "Air3"]}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", "MPa"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"QuantityMagnitude", "[", "TminV", "]"}], ",", 
       RowBox[{"QuantityMagnitude", "[", "TmaxV", "]"}]}], "}"}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", "50"}], ",", 
     RowBox[{"MaxRecursion", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Red", ",", "Thick", ",", 
         RowBox[{"Dashing", "[", "Medium", "]"}]}], "}"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"LineLegend", "[", 
         RowBox[{
          RowBox[{"{", "\"\<Sat. Vapor\>\"", "}"}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Black", ",", "Bold", ",", "14"}], "}"}]}]}], "]"}], ",", 
        RowBox[{"Scaled", "[", 
         RowBox[{"{", 
          RowBox[{"0.2", ",", " ", "0.8"}], "}"}], "]"}]}], "]"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"satLCurve", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"QuantityMagnitude", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"RefProp", "[", 
         RowBox[{"\"\<TQ\>\"", ",", "\"\<P\>\"", ",", 
          RowBox[{"t", "*", "K"}], ",", "0", ",", 
          SubscriptBox["z", "Air3"]}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", "MPa"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"QuantityMagnitude", "[", "Ttrp", "]"}], ",", 
       RowBox[{"QuantityMagnitude", "[", "Tcrit", "]"}]}], "}"}], ",", 
     RowBox[{"PlotPoints", "\[Rule]", "50"}], ",", 
     RowBox[{"MaxRecursion", "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Black", ",", "Thick"}], "}"}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"LineLegend", "[", 
         RowBox[{
          RowBox[{"{", "\"\<Sat. Liquid\>\"", "}"}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Black", ",", "Bold", ",", "14"}], "}"}]}]}], "]"}], ",", 
        RowBox[{"Scaled", "[", 
         RowBox[{"{", 
          RowBox[{"0.2", ",", " ", "0.8"}], "}"}], "]"}]}], "]"}]}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.828948050995531*^9, 3.8289480826878242`*^9}, {
   3.8289481225701714`*^9, 3.828948157723187*^9}, {3.828948233532505*^9, 
   3.8289482439636164`*^9}, 3.8289486918122573`*^9, {3.8289487293090076`*^9, 
   3.828948750307865*^9}, {3.828948782659373*^9, 3.828948804068161*^9}, {
   3.8289488530352163`*^9, 3.828948897739694*^9}, {3.8289489779332914`*^9, 
   3.828948987300247*^9}, {3.8289490871742544`*^9, 3.828949117288715*^9}, {
   3.828949168150731*^9, 3.8289491714429283`*^9}, {3.8289495453821716`*^9, 
   3.82894955163546*^9}, {3.828949624140608*^9, 3.82894967475628*^9}, 
   3.828949868140253*^9, {3.82895007737385*^9, 3.8289501592838583`*^9}, {
   3.8289517072295856`*^9, 3.828951761661059*^9}, {3.8289520795342026`*^9, 
   3.828952134788473*^9}, {3.829325722526881*^9, 3.8293257431297693`*^9}, {
   3.829325827205985*^9, 3.8293258447979565`*^9}, {3.829326004501998*^9, 
   3.8293260114853387`*^9}, {3.829326061570394*^9, 3.8293261077649174`*^9}},
 CellLabel->"In[56]:=",
 CellID->56059221,ExpressionUUID->"a8b1bca2-2770-481b-866e-f4b3da2670f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Add some annotations", "MathCaption",
 CellChangeTimes->{{3.8289520213577385`*^9, 3.8289520308383913`*^9}},
 CellID->451204585,ExpressionUUID->"af750d1f-ccd3-4abd-b6b9-de8dbeb7c242"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"triplePt", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Callout", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"QuantityMagnitude", "[", "Ttrp", "]"}], ",", 
          RowBox[{"QuantityMagnitude", "[", 
           RowBox[{"Ptrp", ",", "MPa"}], "]"}]}], "}"}], ",", 
        "\"\<Triple Point\>\"", ",", 
        RowBox[{"LeaderSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"40", ",", 
           RowBox[{"55", "\[Degree]"}], ",", "10"}], "}"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Blue", ",", "Larger"}], "}"}]}]}], "]"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", 
         RowBox[{"PointSize", "[", "0.015", "]"}]}], "}"}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"critPt", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Callout", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"QuantityMagnitude", "[", "Tcrit", "]"}], ",", 
          RowBox[{"QuantityMagnitude", "[", 
           RowBox[{"Pcrit", ",", "MPa"}], "]"}]}], "}"}], ",", 
        "\"\<Critical Point\>\"", ",", 
        RowBox[{"LeaderSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"40", ",", 
           RowBox[{"200", "\[Degree]"}], ",", "0"}], "}"}]}], ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Red", ",", "Larger"}], "}"}]}]}], "]"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Red", ",", 
         RowBox[{"PointSize", "[", "0.015", "]"}]}], "}"}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"labelL", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Text", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Liquid\>\"", ",", 
        RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
        RowBox[{"FontWeight", "\[Rule]", "\"\<Bold\>\""}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"QuantityMagnitude", "[", 
         RowBox[{
          RowBox[{"0.5", "Tcrit"}], "+", 
          RowBox[{"0.5", "Ttrp"}]}], "]"}], ",", 
        RowBox[{"QuantityMagnitude", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"0.5", "Pcrit"}], "+", 
           RowBox[{"0.5", "Ptrp"}]}], ",", "MPa"}], "]"}]}], "}"}]}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"labelV", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Text", "[", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Vapor\>\"", ",", 
        RowBox[{"FontSize", "\[Rule]", "14"}], ",", 
        RowBox[{"FontWeight", "\[Rule]", "\"\<Bold\>\""}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"QuantityMagnitude", "[", 
         RowBox[{
          RowBox[{"0.85", "Tcrit"}], "+", 
          RowBox[{"0.15", "Ttrp"}]}], "]"}], ",", 
        RowBox[{"QuantityMagnitude", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"0.1", "Pcrit"}], "+", 
           RowBox[{"0.9", "Ptrp"}]}], ",", "MPa"}], "]"}]}], "}"}]}], "]"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.828952175836731*^9, 3.828952177412486*^9}, {
  3.828952208339828*^9, 3.8289522532287855`*^9}, {3.8289524575874476`*^9, 
  3.828952573061715*^9}, {3.828952683518401*^9, 3.8289527540388327`*^9}, {
  3.8289527881157513`*^9, 3.8289527974049225`*^9}, {3.828953144830048*^9, 
  3.828953146429744*^9}, {3.8289531980776873`*^9, 3.828953302157421*^9}, {
  3.829326173269757*^9, 3.829326251725998*^9}},
 CellLabel->"In[58]:=",
 CellID->9284284,ExpressionUUID->"84c5107a-83cd-4c32-83e9-2d60f0010f62"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Show the Plot", "MathCaption",
 CellChangeTimes->{{3.828948427325389*^9, 3.828948431243907*^9}},
 CellID->391770430,ExpressionUUID->"9b9ae76c-6f8f-4b5d-b59d-920d17ed718c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
  "satVCurve", ",", "satLCurve", ",", "triplePt", ",", "critPt", ",", 
   "labelL", ",", "labelV", ",", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Temperature [K]\>\"", ",", "\"\<Pressure [MPa]\>\""}], 
     "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Saturation Curves for Tertiary Air Mixture\>\""}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Bold", ",", "Black", ",", "Larger"}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8289484716668625`*^9, 3.828948489515148*^9}, {
  3.828948524563411*^9, 3.8289486592453566`*^9}, {3.8289500253958178`*^9, 
  3.828950049038607*^9}, {3.8289523853007116`*^9, 3.8289523934768553`*^9}, {
  3.828952587845191*^9, 3.828952594196211*^9}, {3.8289528721480865`*^9, 
  3.82895287574048*^9}},
 CellLabel->"In[62]:=",
 CellID->453853607,ExpressionUUID->"d2e540ce-ff6e-4b5c-9ab3-d1deeb01dc3e"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{{}, {}, 
       TagBox[
        {RGBColor[1, 0, 0], Thickness[Large], Opacity[1.], Dashing[Medium], 
         LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAAk1tKU6eTTUB54IXzyShhP69DROvh
TE5A36MOXEpfaD8/47cbsRVPQArYPTz4cnE/igNUoTHRT0BTjyN10PJ3PxKG
REmCRFBASXf9klUSgD8Z5hsONqhQQPDiVB/kv4U/fYaHfUIFUUA7EVvkym2M
P5sCMDkZalFA+l5Ya2G5kj/g8qQqGc1RQJ12o2uLNJg/gyOuxnEpUkDubBc0
+meeP+Av9K6UjVJANQFP3pg+oz+afM5BEOtSQKrj2Ixbvac/ez11CrVGU0An
/uBoD+isPxbaWB8kqlNAxUUfoAW7sT8Pt9De6wZUQCgmqLwDSLU/wm+F6n1r
VECAqRi/FLm5P5ycBiw5zlRAOI1M5769vj/TCRwYTSpVQNL9JmTjB8I/xFJu
UCuOVUB50fzmikvFPxPcVDNi61VAVtve4sG5yD8cQXhiY1BWQJazlSyf5Mw/
TBpox42zVkAT4L0/i7zQP9kz7NYQEFdAQrh/nBYb0z8hKa0yXnRXQEMZHeLz
8dU/xl4COQTSV0AzF3wOi93YP5IIJHXTLVhA7LnKeMj+2z8YjoL9bJFYQBcc
C3SytN8/+1N1MF/uWEDGoKugbb3hP5n1pK8bU1lAgCz9V7L24z9eC6FkAbZZ
QLygzQIfVuY/gGExxD8SWkCL2NgrHrroP1yT/m9IdlpAYNEcWayF6z+WBWDG
qdNaQJPPpOOBVO4/9+uNUjQvW0CiNL1td6PwPxKu+CqJkltAHQqYItNZ8j+K
sPetNu9bQCsbOI07D/Q/vI4zfa5TXEBNlgVRtAn2P0ytA/d+sVxAzCe4F0MC
+D8DQKCmeA1dQG5NowzYD/o/dK55ojxxXUB/NON5DG78P0Jd50hZzl1A0umT
cTvH/j/K55E7QDNeQCqRZ5qVvQBAeeYIZFCWXkDrPIjGwiYCQIYlFDe58l5A
kqhl//uLA0BNQFxW7FZfQIZ8dQTgJgVAcZs4IHi0X0A6iBqPPr4GQF+18I8W
CGBAZrfcxPplCEDiiuM11jlgQGf7JHyvUApAk4AgMUJoYEADNjBhij4MQLMx
FkgUnGBAiClGLt/KDkAUemh6
          "]]},
        Annotation[#, "Charting`Private`Tag$29477#1"]& ]}, {}}, {{{}, {}, 
       TagBox[
        {GrayLevel[0], Thickness[Large], Opacity[1.], LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAAncwx2IHaS0AxAiv2yShhP52A6XhJ
nExAZKf7AHOSaD82tU/TXW5NQG0pdvsPuXE/4mjjPoYyTkA5qLJoE3d4P85G
ep7V8k5ApW/EHix/gD9Tpb+3ccNPQL/B4ff0a4Y/dUEZ8RBDUECzj7VSA2iN
P47wKWOPrFBA2VZomUJtkz/HNDxPIRRRQIFnpcHjLJk/iTjlQ710UUC7Pf5T
S6+fP5h8ZZV/3VFAVEoH4W0WpD8xgHzvSz9SQMXPg528z6g/6hiVwyufUkBc
cu7EDj6uP+/xhPQxB1NAAcjigv2Qsj9+igsuQmhTQHVNvAOBTLY/WmNpxHjR
U0CAwHXNl/e6P1XRyNTCOFRAPebv0r4ewD/a/r7tFplUQHAy/r0g6sI/rGyM
Y5EBVUAK4Pr7olfGPwea8OEVY1VA5chfmnXxyT+vByy9wMxVQNt5a+XJUM4/
dwppEn80VkDJUB4kJY/RP8jMPHBHlVZAkVG3FtwK1D9mz+cqNv5WQBpz4J5H
BNc/jpEp7i5gV0B2hWyL8xLaP9bobCs7wFdA/VhYSktZ3T9qgIfFbShYQDZM
PO1KneA/iNc4aKqJWECXzOAoG5biP/NuwWcN81hAzI2VZY7o5D99m0vhg1pZ
QNZZPwNgYuc/kYdsYwS7WUCnyRLEeuDpP/KzZEKrI1pAKpGFnOvJ7D/cn/Mp
XIVaQA/Q7p4ctu8/5iCEiyDlWkDdIblOUGPxPz3i60kLTVtAzcZyUKoq8z8d
Y+oQAK5bQPFB/1R/8PQ/SiTANBsXXEDcvuvET/32PwGlLGFAeVxA6cu8EV8H
+T/YupoHedlcQFj1J/RPJvs/+xDgCthBXUDm52+WWJf9P6gmvBZBo11AAHjs
NOkAAEChfG9/0AxeQC6e66HhYwFAumckYnN0XkBEcyj/OdUCQF0ScE0g1V5A
thSYuRJBBEBN/ZKV8z1fQJNZXExs4QVAxqdM5tCfX0AWHCycU3sHQF/nB7HB
/19AaN8YVJwhCUCiM01s7DNgQBcjtFPRAgtAWtNhBH1kYEC5o1UEqdcMQOiA
Dpn9l2BAg7jYo37ADkDXmnq9
          "]]},
        Annotation[#, "Charting`Private`Tag$33264#1"]& ]}, {}}, {{}, {
       {RGBColor[0, 0, 1], PointSize[0.015], AbsoluteThickness[1.6], 
        PointBox[{{55.707085965947115`, 0.0020946441764401725`}, {
         55.707085965947115`, 0.0020946441764401725`}}]}, {
        TagBox[
         {Opacity[0.], 
          PointBox[{{55.707085965947115`, 0.0020946441764401725`}}]},
         Annotation[#, {{Callout}, Charting`Private`Tag$37242, {1}}]& ], 
        TagBox[
         {Opacity[0.], 
          PointBox[{{55.707085965947115`, 0.0020946441764401725`}}]},
         Annotation[#, {{Callout}, Charting`Private`Tag$37242, {
           1}}]& ]}}, {{{{}, GraphicsGroupBox[{
           {GrayLevel[1], AbsoluteThickness[4], Opacity[
             NCache[
              Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
            "Round"], 
            BSplineCurveBox[{
             Offset[{5.7357643635104605`, 8.191520442889917}, {
               56.26625072328448, 0.0021441689644181566`}], 
              Offset[{5.7357643635104605`, 8.191520442889917}, {
               56.26625072328448, 0.0021441689644181566`}], 
              Offset[{14.339410908776152`, 20.478801107224793`}, {
               56.26625072328448, 0.0021441689644181566`}], 
              Offset[{14.339410908776152`, 20.478801107224793`}, {
               56.26625072328448, 0.0021441689644181566`}], 
              Offset[{22.943057454041842`, 32.76608177155967}, {
               56.26625072328448, 0.0021441689644181566`}], 
              Offset[{24.943057454041842`, 32.76608177155967}, {
               56.26625072328448, 0.0021441689644181566`}], 
              Offset[{26.943057454041842`, 32.76608177155967}, {
               56.26625072328448, 0.0021441689644181566`}], 
              Offset[{26.943057454041842`, 32.76608177155967}, {
               56.26625072328448, 0.0021441689644181566`}]}]}, 
           {RGBColor[
            0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
            AbsoluteThickness[1.25], 
            BSplineCurveBox[{
             Offset[{5.7357643635104605`, 8.191520442889917}, {
               56.26625072328448, 0.0021441689644181566`}], 
              Offset[{5.7357643635104605`, 8.191520442889917}, {
               56.26625072328448, 0.0021441689644181566`}], 
              Offset[{14.339410908776152`, 20.478801107224793`}, {
               56.26625072328448, 0.0021441689644181566`}], 
              Offset[{14.339410908776152`, 20.478801107224793`}, {
               56.26625072328448, 0.0021441689644181566`}], 
              Offset[{22.943057454041842`, 32.76608177155967}, {
               56.26625072328448, 0.0021441689644181566`}], 
              Offset[{24.943057454041842`, 32.76608177155967}, {
               56.26625072328448, 0.0021441689644181566`}], 
              Offset[{26.943057454041842`, 32.76608177155967}, {
               56.26625072328448, 0.0021441689644181566`}], 
              Offset[{26.943057454041842`, 32.76608177155967}, {
               56.26625072328448, 0.0021441689644181566`}]}]}, 
           {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
             NCache[
              Rational[2, 3], 0.6666666666666666]]}], 
            PolygonBox[{
             Offset[{91.94305745404185, 41.266081771559676`}, {
               56.26625072328448, 0.0021441689644181566`}], 
              Offset[{91.94305745404185, 24.266081771559676`}, {
               56.26625072328448, 0.0021441689644181566`}], 
              Offset[{26.943057454041842`, 24.266081771559662`}, {
               56.26625072328448, 0.0021441689644181566`}], 
              Offset[{26.943057454041842`, 41.26608177155966}, {
               56.26625072328448, 0.0021441689644181566`}]}]}, 
           {RGBColor[
            0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
            AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
            StyleBox[
             RotationBox["\<\"Triple Point\"\>",
              BoxRotation->0.],
             StripOnInput->False,
             LineColor->RGBColor[0, 0, 1],
             LineOpacity->1,
             FrontFaceColor->RGBColor[0, 0, 1],
             BackFaceColor->RGBColor[0, 0, 1],
             FrontFaceOpacity->1,
             BackFaceOpacity->1,
             GraphicsColor->RGBColor[0, 0, 1],
             Opacity->1,
             FontSize->Larger,
             FontColor->RGBColor[0, 0, 1],
             FontOpacity->1], 
            Offset[{59.44305745404184, 32.76608177155967}, \
{56.26625072328448, 0.0021441689644181566}], 
            ImageScaled[{
             Rational[1, 2], Rational[1, 2]}]]}]}, {}}, {}}}, {{}, {
       {RGBColor[1, 0, 0], PointSize[0.015], AbsoluteThickness[1.6], 
        PointBox[{{132.83441602479704`, 3.85215148561309}, {
         132.83441602479704`, 3.85215148561309}}]}, {
        TagBox[
         {Opacity[0.], PointBox[{{132.83441602479704`, 3.85215148561309}}]},
         Annotation[#, {{Callout}, Charting`Private`Tag$37322, {1}}]& ], 
        TagBox[
         {Opacity[0.], PointBox[{{132.83441602479704`, 3.85215148561309}}]},
         Annotation[#, {{Callout}, Charting`Private`Tag$37322, {
           1}}]& ]}}, {{{{}, GraphicsGroupBox[{
           {GrayLevel[1], AbsoluteThickness[4], Opacity[
             NCache[
              Rational[2, 3], 0.6666666666666666]], CapForm["Butt"], JoinForm[
            "Round"], 
            BSplineCurveBox[{
             Offset[{0., 0.}, {130.65000441561116`, 3.8141235378292366`}], 
              Offset[{0., 0.}, {130.65000441561116`, 3.8141235378292366`}], 
              Offset[{-18.79385241571817, -6.840402866513373}, {
               130.65000441561116`, 3.8141235378292366`}], 
              Offset[{-18.79385241571817, -6.840402866513373}, {
               130.65000441561116`, 3.8141235378292366`}], 
              Offset[{-37.58770483143634, -13.680805733026746`}, {
               130.65000441561116`, 3.8141235378292366`}], 
              Offset[{-39.58770483143634, -13.680805733026746`}, {
               130.65000441561116`, 3.8141235378292366`}], 
              Offset[{-41.58770483143634, -13.680805733026746`}, {
               130.65000441561116`, 3.8141235378292366`}], 
              Offset[{-41.58770483143634, -13.680805733026746`}, {
               130.65000441561116`, 3.8141235378292366`}]}]}, 
           {RGBColor[
            0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
            AbsoluteThickness[1.25], 
            BSplineCurveBox[{
             Offset[{0., 0.}, {130.65000441561116`, 3.8141235378292366`}], 
              Offset[{0., 0.}, {130.65000441561116`, 3.8141235378292366`}], 
              Offset[{-18.79385241571817, -6.840402866513373}, {
               130.65000441561116`, 3.8141235378292366`}], 
              Offset[{-18.79385241571817, -6.840402866513373}, {
               130.65000441561116`, 3.8141235378292366`}], 
              Offset[{-37.58770483143634, -13.680805733026746`}, {
               130.65000441561116`, 3.8141235378292366`}], 
              Offset[{-39.58770483143634, -13.680805733026746`}, {
               130.65000441561116`, 3.8141235378292366`}], 
              Offset[{-41.58770483143634, -13.680805733026746`}, {
               130.65000441561116`, 3.8141235378292366`}], 
              Offset[{-41.58770483143634, -13.680805733026746`}, {
               130.65000441561116`, 3.8141235378292366`}]}]}, 
           {EdgeForm[None], FaceForm[{GrayLevel[1], Opacity[
             NCache[
              Rational[2, 3], 0.6666666666666666]]}], 
            PolygonBox[{
             Offset[{-41.58770483143634, -6.180805733026738}, {
               130.65000441561116`, 3.8141235378292366`}], 
              Offset[{-41.58770483143634, -21.180805733026737`}, {
               130.65000441561116`, 3.8141235378292366`}], 
              Offset[{-113.58770483143634`, -21.180805733026755`}, {
               130.65000441561116`, 3.8141235378292366`}], 
              Offset[{-113.58770483143634`, -6.180805733026754}, {
               130.65000441561116`, 3.8141235378292366`}]}]}, 
           {RGBColor[
            0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
            AbsoluteThickness[1.25], EdgeForm[None]}, {}, InsetBox[
            StyleBox[
             RotationBox["\<\"Critical Point\"\>",
              BoxRotation->0.],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->Larger,
             FontColor->RGBColor[1, 0, 0]], 
            Offset[{-77.58770483143634, -13.680805733026746}, \
{130.65000441561116, 3.8141235378292366}], 
            ImageScaled[{Rational[1, 2], Rational[1, 2]}]]}]}, {}}, {}}}, 
     InsetBox[
      StyleBox["\<\"Liquid\"\>",
       StripOnInput->False,
       FontSize->14,
       FontWeight->"Bold"], {94.27075099537208, 1.927123064894765}], InsetBox[
      StyleBox["\<\"Vapor\"\>",
       StripOnInput->False,
       FontSize->14,
       FontWeight->"Bold"], {121.26531651596954, 0.38710032832010516}]}, 
    InsetBox[
     TagBox[GridBox[{
        {
         FormBox[
          TemplateBox[{"\"Sat. Vapor\""},
           "LineLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large], 
                    Dashing[Medium]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Thickness[Large], 
                    Dashing[Medium]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              GrayLevel[0], FontWeight -> Bold, FontSize -> 14, FontFamily -> 
              "Arial"}, Background -> Automatic, StripOnInput -> False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    RowBox[{"Dashing", "[", "Medium", "]"}]}], "]"}], "}"}], 
                ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "Bold", ",", "14"}], "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]},
        {
         FormBox[
          TemplateBox[{"\"Sat. Liquid\""},
           "LineLegend",
           DisplayFunction->(StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              GrayLevel[0], FontWeight -> Bold, FontSize -> 14, FontFamily -> 
              "Arial"}, Background -> Automatic, StripOnInput -> False]& ),
           Editable->True,
           InterpretationFunction:>(RowBox[{"LineLegend", "[", 
              RowBox[{
                RowBox[{"{", 
                  RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
                ",", 
                RowBox[{"{", #, "}"}], ",", 
                RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "Bold", ",", "14"}], "}"}]}], ",", 
                RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )],
          TraditionalForm]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       GridBoxSpacings->{"Columns" -> {{0}}}],
      "Grid"], Scaled[{0.2, 0.8}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{59.153542359973315`, 0},
   DisplayFunction->Identity,
   Frame->True,
   FrameLabel->{
     FormBox["\"Temperature [K]\"", TraditionalForm], 
     FormBox["\"Pressure [MPa]\"", TraditionalForm]},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->Full,
   LabelStyle->Directive[Bold, 
     GrayLevel[0], Larger],
   Method->{
    "DefaultBoundaryStyle" -> Automatic, 
     "DefaultGraphicsInteraction" -> {
      "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
       "Effects" -> {
        "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
         "Droplines" -> {
          "freeformCursorMode" -> True, 
           "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
     "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotLabel->FormBox[
    "\"Saturation Curves for Tertiary Air Mixture\"", TraditionalForm],
   PlotRange->Automatic,
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 0], 
            Thickness[Large], 
            Dashing[Medium]], 
           Line[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAAk1tKU6eTTUB54IXzyShhP69DROvh
TE5A36MOXEpfaD8/47cbsRVPQArYPTz4cnE/igNUoTHRT0BTjyN10PJ3PxKG
REmCRFBASXf9klUSgD8Z5hsONqhQQPDiVB/kv4U/fYaHfUIFUUA7EVvkym2M
P5sCMDkZalFA+l5Ya2G5kj/g8qQqGc1RQJ12o2uLNJg/gyOuxnEpUkDubBc0
+meeP+Av9K6UjVJANQFP3pg+oz+afM5BEOtSQKrj2Ixbvac/ez11CrVGU0An
/uBoD+isPxbaWB8kqlNAxUUfoAW7sT8Pt9De6wZUQCgmqLwDSLU/wm+F6n1r
VECAqRi/FLm5P5ycBiw5zlRAOI1M5769vj/TCRwYTSpVQNL9JmTjB8I/xFJu
UCuOVUB50fzmikvFPxPcVDNi61VAVtve4sG5yD8cQXhiY1BWQJazlSyf5Mw/
TBpox42zVkAT4L0/i7zQP9kz7NYQEFdAQrh/nBYb0z8hKa0yXnRXQEMZHeLz
8dU/xl4COQTSV0AzF3wOi93YP5IIJHXTLVhA7LnKeMj+2z8YjoL9bJFYQBcc
C3SytN8/+1N1MF/uWEDGoKugbb3hP5n1pK8bU1lAgCz9V7L24z9eC6FkAbZZ
QLygzQIfVuY/gGExxD8SWkCL2NgrHrroP1yT/m9IdlpAYNEcWayF6z+WBWDG
qdNaQJPPpOOBVO4/9+uNUjQvW0CiNL1td6PwPxKu+CqJkltAHQqYItNZ8j+K
sPetNu9bQCsbOI07D/Q/vI4zfa5TXEBNlgVRtAn2P0ytA/d+sVxAzCe4F0MC
+D8DQKCmeA1dQG5NowzYD/o/dK55ojxxXUB/NON5DG78P0Jd50hZzl1A0umT
cTvH/j/K55E7QDNeQCqRZ5qVvQBAeeYIZFCWXkDrPIjGwiYCQIYlFDe58l5A
kqhl//uLA0BNQFxW7FZfQIZ8dQTgJgVAcZs4IHi0X0A6iBqPPr4GQF+18I8W
CGBAZrfcxPplCEDiiuM11jlgQGf7JHyvUApAk4AgMUJoYEADNjBhij4MQLMx
FkgUnGBAiClGLt/KDkAUemh6
            "]]}, "Charting`Private`Tag$29477#1"]}}, {}}, {{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            GrayLevel[0], 
            Thickness[Large]], 
           Line[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAAncwx2IHaS0AxAiv2yShhP52A6XhJ
nExAZKf7AHOSaD82tU/TXW5NQG0pdvsPuXE/4mjjPoYyTkA5qLJoE3d4P85G
ep7V8k5ApW/EHix/gD9Tpb+3ccNPQL/B4ff0a4Y/dUEZ8RBDUECzj7VSA2iN
P47wKWOPrFBA2VZomUJtkz/HNDxPIRRRQIFnpcHjLJk/iTjlQ710UUC7Pf5T
S6+fP5h8ZZV/3VFAVEoH4W0WpD8xgHzvSz9SQMXPg528z6g/6hiVwyufUkBc
cu7EDj6uP+/xhPQxB1NAAcjigv2Qsj9+igsuQmhTQHVNvAOBTLY/WmNpxHjR
U0CAwHXNl/e6P1XRyNTCOFRAPebv0r4ewD/a/r7tFplUQHAy/r0g6sI/rGyM
Y5EBVUAK4Pr7olfGPwea8OEVY1VA5chfmnXxyT+vByy9wMxVQNt5a+XJUM4/
dwppEn80VkDJUB4kJY/RP8jMPHBHlVZAkVG3FtwK1D9mz+cqNv5WQBpz4J5H
BNc/jpEp7i5gV0B2hWyL8xLaP9bobCs7wFdA/VhYSktZ3T9qgIfFbShYQDZM
PO1KneA/iNc4aKqJWECXzOAoG5biP/NuwWcN81hAzI2VZY7o5D99m0vhg1pZ
QNZZPwNgYuc/kYdsYwS7WUCnyRLEeuDpP/KzZEKrI1pAKpGFnOvJ7D/cn/Mp
XIVaQA/Q7p4ctu8/5iCEiyDlWkDdIblOUGPxPz3i60kLTVtAzcZyUKoq8z8d
Y+oQAK5bQPFB/1R/8PQ/SiTANBsXXEDcvuvET/32PwGlLGFAeVxA6cu8EV8H
+T/YupoHedlcQFj1J/RPJvs/+xDgCthBXUDm52+WWJf9P6gmvBZBo11AAHjs
NOkAAEChfG9/0AxeQC6e66HhYwFAumckYnN0XkBEcyj/OdUCQF0ScE0g1V5A
thSYuRJBBEBN/ZKV8z1fQJNZXExs4QVAxqdM5tCfX0AWHCycU3sHQF/nB7HB
/19AaN8YVJwhCUCiM01s7DNgQBcjtFPRAgtAWtNhBH1kYEC5o1UEqdcMQOiA
Dpn9l2BAg7jYo37ADkDXmnq9
            "]]}, "Charting`Private`Tag$33264#1"]}}, {}}, {{}, {{{
          Directive[
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           PointSize[0.015]], 
          
          Point[{{55.707085965947115`, 0.0020946441764401725`}, {
           55.707085965947115`, 0.0020946441764401725`}}]}}, {
         Annotation[{
           Opacity[0.], 
           Point[{{55.707085965947115`, 0.0020946441764401725`}}]}, {{
           Callout}, Charting`Private`Tag$37242, {1}}], 
         Annotation[{
           Opacity[0.], 
           Point[{{55.707085965947115`, 0.0020946441764401725`}}]}, {{
           Callout}, Charting`Private`Tag$37242, {1}}]}}, {{{{}, {{
            GraphicsGroup[{{
               Directive[
                AbsoluteThickness[4], 
                GrayLevel[1], 
                Opacity[
                 Rational[2, 3]]], 
               CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurve[{
                 
                 Offset[{5.7357643635104605`, 8.191520442889917}, {
                  56.26625072328448, 0.0021441689644181566`}], 
                 
                 Offset[{5.7357643635104605`, 8.191520442889917}, {
                  56.26625072328448, 0.0021441689644181566`}], 
                 
                 Offset[{14.339410908776152`, 20.478801107224793`}, {
                  56.26625072328448, 0.0021441689644181566`}], 
                 
                 Offset[{14.339410908776152`, 20.478801107224793`}, {
                  56.26625072328448, 0.0021441689644181566`}], 
                 
                 Offset[{22.943057454041842`, 32.76608177155967}, {
                  56.26625072328448, 0.0021441689644181566`}], 
                 
                 Offset[{24.943057454041842`, 32.76608177155967}, {
                  56.26625072328448, 0.0021441689644181566`}], 
                 
                 Offset[{26.943057454041842`, 32.76608177155967}, {
                  56.26625072328448, 0.0021441689644181566`}], 
                 
                 Offset[{26.943057454041842`, 32.76608177155967}, {
                  56.26625072328448, 0.0021441689644181566`}]}]}, {
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]], 
               BSplineCurve[{
                 
                 Offset[{5.7357643635104605`, 8.191520442889917}, {
                  56.26625072328448, 0.0021441689644181566`}], 
                 
                 Offset[{5.7357643635104605`, 8.191520442889917}, {
                  56.26625072328448, 0.0021441689644181566`}], 
                 
                 Offset[{14.339410908776152`, 20.478801107224793`}, {
                  56.26625072328448, 0.0021441689644181566`}], 
                 
                 Offset[{14.339410908776152`, 20.478801107224793`}, {
                  56.26625072328448, 0.0021441689644181566`}], 
                 
                 Offset[{22.943057454041842`, 32.76608177155967}, {
                  56.26625072328448, 0.0021441689644181566`}], 
                 
                 Offset[{24.943057454041842`, 32.76608177155967}, {
                  56.26625072328448, 0.0021441689644181566`}], 
                 
                 Offset[{26.943057454041842`, 32.76608177155967}, {
                  56.26625072328448, 0.0021441689644181566`}], 
                 
                 Offset[{26.943057454041842`, 32.76608177155967}, {
                  56.26625072328448, 0.0021441689644181566`}]}]}, {
               FaceForm[
                Directive[
                 GrayLevel[1], 
                 Opacity[
                  Rational[2, 3]]]], 
               EdgeForm[], 
               Polygon[{
                 
                 Offset[{91.94305745404185, 41.266081771559676`}, {
                  56.26625072328448, 0.0021441689644181566`}], 
                 
                 Offset[{91.94305745404185, 24.266081771559676`}, {
                  56.26625072328448, 0.0021441689644181566`}], 
                 
                 Offset[{26.943057454041842`, 24.266081771559662`}, {
                  56.26625072328448, 0.0021441689644181566`}], 
                 
                 Offset[{26.943057454041842`, 41.26608177155966}, {
                  56.26625072328448, 0.0021441689644181566`}]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]]}, {}, 
              Text[
               Style[
                Rotate["Triple Point", 0], {
                 RGBColor[0, 0, 1], Larger, 
                 Opacity[1]}], 
               
               Offset[{59.44305745404184, 32.76608177155967}, {
                56.26625072328448, 0.0021441689644181566`}], {0, 
               0}]}]}}}, {}}, {}}}, {{}, {{{
          Directive[
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           PointSize[0.015]], 
          
          Point[{{132.83441602479704`, 3.85215148561309}, {
           132.83441602479704`, 3.85215148561309}}]}}, {
         Annotation[{
           Opacity[0.], 
           Point[{{132.83441602479704`, 3.85215148561309}}]}, {{Callout}, 
           Charting`Private`Tag$37322, {1}}], 
         Annotation[{
           Opacity[0.], 
           Point[{{132.83441602479704`, 3.85215148561309}}]}, {{Callout}, 
           Charting`Private`Tag$37322, {1}}]}}, {{{{}, {{
            GraphicsGroup[{{
               Directive[
                AbsoluteThickness[4], 
                GrayLevel[1], 
                Opacity[
                 Rational[2, 3]]], 
               CapForm["Butt"], 
               JoinForm["Round"], 
               BSplineCurve[{
                 Offset[{0., 0.}, {130.65000441561116`, 3.8141235378292366`}], 
                 Offset[{0., 0.}, {130.65000441561116`, 3.8141235378292366`}], 
                 
                 Offset[{-18.79385241571817, -6.840402866513373}, {
                  130.65000441561116`, 3.8141235378292366`}], 
                 
                 Offset[{-18.79385241571817, -6.840402866513373}, {
                  130.65000441561116`, 3.8141235378292366`}], 
                 
                 Offset[{-37.58770483143634, -13.680805733026746`}, {
                  130.65000441561116`, 3.8141235378292366`}], 
                 
                 Offset[{-39.58770483143634, -13.680805733026746`}, {
                  130.65000441561116`, 3.8141235378292366`}], 
                 
                 Offset[{-41.58770483143634, -13.680805733026746`}, {
                  130.65000441561116`, 3.8141235378292366`}], 
                 Offset[{-41.58770483143634, -13.680805733026746`}, {
                  130.65000441561116`, 3.8141235378292366`}]}]}, {
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]], 
               BSplineCurve[{
                 Offset[{0., 0.}, {130.65000441561116`, 3.8141235378292366`}], 
                 Offset[{0., 0.}, {130.65000441561116`, 3.8141235378292366`}], 
                 
                 Offset[{-18.79385241571817, -6.840402866513373}, {
                  130.65000441561116`, 3.8141235378292366`}], 
                 
                 Offset[{-18.79385241571817, -6.840402866513373}, {
                  130.65000441561116`, 3.8141235378292366`}], 
                 
                 Offset[{-37.58770483143634, -13.680805733026746`}, {
                  130.65000441561116`, 3.8141235378292366`}], 
                 
                 Offset[{-39.58770483143634, -13.680805733026746`}, {
                  130.65000441561116`, 3.8141235378292366`}], 
                 
                 Offset[{-41.58770483143634, -13.680805733026746`}, {
                  130.65000441561116`, 3.8141235378292366`}], 
                 
                 Offset[{-41.58770483143634, -13.680805733026746`}, {
                  130.65000441561116`, 3.8141235378292366`}]}]}, {
               FaceForm[
                Directive[
                 GrayLevel[1], 
                 Opacity[
                  Rational[2, 3]]]], 
               EdgeForm[], 
               Polygon[{
                 
                 Offset[{-41.58770483143634, -6.180805733026738}, {
                  130.65000441561116`, 3.8141235378292366`}], 
                 
                 Offset[{-41.58770483143634, -21.180805733026737`}, {
                  130.65000441561116`, 3.8141235378292366`}], 
                 
                 Offset[{-113.58770483143634`, -21.180805733026755`}, {
                  130.65000441561116`, 3.8141235378292366`}], 
                 
                 Offset[{-113.58770483143634`, -6.180805733026754}, {
                  130.65000441561116`, 3.8141235378292366`}]}]}, {
               EdgeForm[], 
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.25]]}, {}, 
              Text[
               Style[
                Rotate["Critical Point", 0], {
                 RGBColor[1, 0, 0], Larger}], 
               
               Offset[{-77.58770483143634, -13.680805733026746`}, {
                130.65000441561116`, 3.8141235378292366`}], {0, 
               0}]}]}}}, {}}, {}}}, 
      Text[
       Style["Liquid", FontSize -> 14, FontWeight -> "Bold"], {
       94.27075099537208, 1.927123064894765}], 
      Text[
       Style["Vapor", FontSize -> 14, FontWeight -> "Bold"], {
       121.26531651596954`, 0.38710032832010516`}]}, {
     PlotRange -> Automatic, Frame -> True, 
      FrameLabel -> {"Temperature [K]", "Pressure [MPa]"}, PlotLabel -> 
      "Saturation Curves for Tertiary Air Mixture", LabelStyle -> 
      Directive[Bold, 
        GrayLevel[0], Larger], ImageSize -> Full, DisplayFunction -> Identity,
       Ticks -> {Automatic, Automatic}, 
      AxesOrigin -> {59.153542359973315`, 0}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
      DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {59.153542359973315`, 0}, DisplayFunction :> Identity, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, 
      PlotRange -> {{59.153542359973315`, 132.8774772844353}, {0., 
       3.8490584960138143`}}, PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      Unevaluated[
       LineLegend[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          GrayLevel[0], 
          Thickness[Large]]}, {"Sat. Liquid"}, LegendMarkers -> None, 
        LabelStyle -> {
          GrayLevel[0], Bold, 14}, LegendLayout -> "Column"]]], 
     Scaled[{0.2, 0.8}], Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.8289496935280924`*^9, 3.8289499469056673`*^9, {3.828950027151125*^9, 
   3.8289500504099407`*^9}, 3.8289500885499706`*^9, 3.8289501379857993`*^9, 
   3.828950284703539*^9, 3.82895177682652*^9, 3.8289518687138505`*^9, {
   3.8289521158780375`*^9, 3.8289521450909343`*^9}, 3.8289523950965242`*^9, 
   3.8289525961629233`*^9, 3.8289528397227488`*^9, 3.8289528773062935`*^9, {
   3.8289532064562907`*^9, 3.828953254162738*^9}, {3.828953296220299*^9, 
   3.828953308624445*^9}, 3.82928103615578*^9, 3.8293262724186745`*^9},
 CellLabel->"Out[62]=",
 CellID->709171468,ExpressionUUID->"48169a0c-1cdb-4d6f-a9b8-f26e08157ce2"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Note the separation between the saturated vapor and saturated liquid curves.  \
This is a much narrower separation than for the natural gas shown in Figure 1 \
and the cricondentherm and cricondenbar (not plotted) are clustered very near \
the critical point.\
\>", "Text",
 CellChangeTimes->{{3.8289529387809362`*^9, 3.8289529563260336`*^9}, {
  3.8289529991894007`*^9, 3.828953089908889*^9}},
 CellID->464233227,ExpressionUUID->"e277c920-1b92-457d-a0c5-c09c162eaa98"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Single Phase Properties", "Section",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.82305710368225*^9, 3.8230571116738462`*^9}, {
  3.8290246119791236`*^9, 3.8290246180917807`*^9}},
 CellID->266225053,ExpressionUUID->"825d5a8b-5213-41c4-99e2-3ee29659c691"],

Cell["\<\
When it is known that the state point is in a single phase region (vapor or \
liquid), there are flags on the input pair string to RefProp that can be \
employed to speed up the calculations.\
\>", "Text",
 CellChangeTimes->{{3.822822250413862*^9, 3.8228223529495845`*^9}, {
  3.8306560330325136`*^9, 3.8306560387452583`*^9}},
 CellID->258668859,ExpressionUUID->"cd3bbd60-9f89-4007-848f-1e2c823e4d55"],

Cell["\<\
Normally, the ABFLSH routine is called internally by REFPROP to determine the \
phase of the inputs (liquid, vapor, or 2-phase), and then the appropriate \
iterative routine will be called to obtain the independent properties of the \
equations of state: temperature and density.  For subsequent calculations for \
properties that are known to be in the same single phase region, use the code \
\"AB&\", where the symbol & indicates the single phase state. The time \
required with the use of AB& is negligible, compared to that required for the \
iterative solution called by ABFLSH.\
\>", "Text",
 CellChangeTimes->{{3.8228223673650475`*^9, 3.8228223707968693`*^9}, {
  3.82282243796319*^9, 3.822822459268238*^9}, {3.8228224908996034`*^9, 
  3.8228224916845317`*^9}, {3.8228227089094925`*^9, 3.8228227175404053`*^9}, {
  3.8228227544596863`*^9, 3.822822768963893*^9}, {3.8228298739125447`*^9, 
  3.8228298783576527`*^9}, {3.8306560105137844`*^9, 3.830656019089841*^9}, {
  3.8306560722177114`*^9, 3.8306560982819786`*^9}, {3.8306561941933875`*^9, 
  3.8306561966487904`*^9}},
 CellID->133424027,ExpressionUUID->"7f103df4-fd73-4872-950c-1a7c92f48fec"],

Cell["\<\
Unfortunately, while this convention still works in this RefpropLink \
implementation, speed tests show no difference in speed versus using the \
general call parameter, \"AB\".\
\>", "Text",
 CellChangeTimes->{{3.822834754129918*^9, 3.822834849904751*^9}, {
  3.830656218659907*^9, 3.8306562602027645`*^9}},
 CellID->395914649,ExpressionUUID->"d32129ad-95d4-4b64-b149-3e8823ce78eb"],

Cell["\<\
There are two flags, however, that are more useful in RefpropLink.\
\>", "Text",
 CellChangeTimes->{{3.8228350303142357`*^9, 3.82283506836945*^9}},
 CellID->455957052,ExpressionUUID->"7df92665-2022-4c36-816e-f63eca781223"],

Cell[TextData[{
 StyleBox["**>", "BulletedText",
  FontWeight->"Bold"],
 StyleBox[" or ", "BulletedText"],
 StyleBox["**L", "BulletedText",
  FontWeight->"Bold"],
 StyleBox[" : When the greater than \">\" character or the letter \"L\" is \
appended to the two letters that specify the input properties (such as \
\"TP\"), the routine will assume that the input properties are in the single \
phase ", "BulletedText"],
 StyleBox["liquid", "BulletedText",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" region, or are within the two-phase area as a ", "BulletedText"],
 StyleBox["metastable state", "BulletedText",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[". For example: \"TP>\", \"PH>\", \"HSL\".  To remember the greater \
than symbol, \">\", think \"above the T-P saturation curve\", which is the \
liquid region.", "BulletedText"]
}], "BulletedText",
 CellChangeTimes->{{3.822837843311191*^9, 3.822837895442724*^9}, {
  3.8228380648227205`*^9, 3.8228380728382745`*^9}, {3.8228381049743204`*^9, 
  3.8228382678297296`*^9}, {3.8228383425997124`*^9, 3.822838349230008*^9}, {
  3.8228417275547767`*^9, 3.8228417284912663`*^9}},
 CellID->132058655,ExpressionUUID->"a77dc4d7-76b3-4180-9c6b-e57a042b2d46"],

Cell[TextData[{
 StyleBox["**<", "BulletedText",
  FontWeight->"Bold"],
 StyleBox[" or ", "BulletedText"],
 StyleBox["**V", "BulletedText",
  FontWeight->"Bold"],
 StyleBox[" : When the less than \"<\" character or the letter \"V\" is \
appended to the two letters that specify the input properties (such as \
\"TP\"), the routine will assume that the input properties are in the single \
phase ", "BulletedText"],
 StyleBox["vapor", "BulletedText",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" region, or are within the two-phase area as a ", "BulletedText"],
 StyleBox["metastable state", "BulletedText",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[". For example: TP>, PH>, HSL.  For example: \"TP<\", \"PH<\", \
\"HSV\".  To remember the less than symbol, \"<\", think \"below the T-P \
saturation curve\", which is the vapor region.", "BulletedText"]
}], "BulletedText",
 CellChangeTimes->{{3.822837843311191*^9, 3.822837895442724*^9}, {
  3.8228380648227205`*^9, 3.8228380901190453`*^9}, {3.822838300136289*^9, 
  3.8228383964058266`*^9}, {3.8228416423077497`*^9, 3.8228417374841805`*^9}},
 CellID->983206561,ExpressionUUID->"b4c38d98-e3e4-4b96-a10f-4c0039b85480"],

Cell["\<\
Above, we calculated the saturated liquid and saturated vapor pressure at a \
temperature mid-way along the saturation curves.  We can use these values to \
calculate state points that are guaranteed to be in the liquid region, above \
the saturation curves, and the vapor region, below the saturation curves on \
the p-T diagram.\
\>", "Text",
 CellChangeTimes->{{3.8293263952702208`*^9, 3.829326498877219*^9}, {
  3.8306563627374816`*^9, 3.8306563682168355`*^9}},
 CellID->67127027,ExpressionUUID->"30b14f0b-755b-4e5a-8159-d14a349db461"],

Cell[CellGroupData[{

Cell["\<\
Set pressures above and below the saturation points calculated previously at \
T.\
\>", "MathCaption",
 CellChangeTimes->{{3.8293265195100555`*^9, 3.8293265331894827`*^9}, {
  3.8293266084851737`*^9, 3.829326626348447*^9}},
 CellID->342875855,ExpressionUUID->"17e375da-b310-4bf7-bc29-8a994287b0d3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["P", "liq"], "=", 
  RowBox[{"1.1", 
   SubscriptBox["P", "L"]}]}]], "Input",
 CellChangeTimes->{{3.829326570810899*^9, 3.8293265865089293`*^9}, 
   3.829326670973113*^9},
 CellLabel->"In[43]:=",
 CellID->544419760,ExpressionUUID->"2b09a637-d5dc-49fc-81e0-cd2203da0c21"],

Cell[BoxData[
 TemplateBox[{
  "476.3014677483325`", "\"kPa\"", "kilopascals", "\"Kilopascals\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.829326631502635*^9, 3.829326671971441*^9, 
  3.82932674662784*^9, 3.829393063400242*^9, 3.8295542760892477`*^9, 
  3.830656385888545*^9, 3.830789610616949*^9},
 CellLabel->"Out[43]=",
 CellID->50126198,ExpressionUUID->"adda5dfe-b3b7-48c6-ac29-d385fd650791"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["P", "vap"], "=", 
  RowBox[{"0.9", 
   SubscriptBox["P", "V"]}]}]], "Input",
 CellChangeTimes->{{3.8293266786765113`*^9, 3.829326687108995*^9}, {
  3.8293267524532638`*^9, 3.8293267676127343`*^9}},
 CellLabel->"In[44]:=",
 CellID->229205228,ExpressionUUID->"25a6c3ab-b170-4d71-a43d-07ee060e558c"],

Cell[BoxData[
 TemplateBox[{
  "320.90428856593826`", "\"kPa\"", "kilopascals", "\"Kilopascals\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8293266892691927`*^9, 3.829326769622361*^9, 
  3.8293930664939966`*^9, 3.829554280419675*^9, 3.830656389965643*^9, 
  3.830789610842348*^9},
 CellLabel->"Out[44]=",
 CellID->428958342,ExpressionUUID->"e8597e8d-d05c-48e4-95a1-bdc1480c5fcb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Now calculate the Density, Enthalpy, and Entropy at these single-phase state \
points\
\>", "MathCaption",
 CellChangeTimes->{{3.8293267887502503`*^9, 3.829326829533185*^9}},
 CellID->112963140,ExpressionUUID->"7c55050b-7409-4b12-8348-23ffc01dc342"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RefProp", "[", 
  RowBox[{"\"\<TP>\>\"", ",", "\"\<D H S\>\"", ",", "T", ",", 
   SubscriptBox["P", "liq"], ",", 
   SubscriptBox["z", "Air3"]}], "]"}]], "Input",
 CellChangeTimes->{{3.829326836130546*^9, 3.8293269029977713`*^9}, {
   3.8293269549977455`*^9, 3.829326955973138*^9}, 3.8293270396773486`*^9, {
   3.82932713971791*^9, 3.8293271448053093`*^9}, {3.8293937003802257`*^9, 
   3.8293937029563384`*^9}},
 CellLabel->"In[45]:=",
 CellID->176014021,ExpressionUUID->"4b1423bd-81c2-4a76-8c5b-33cac8bd77ae"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"D\"\>", "\[Rule]", 
    TemplateBox[{"27.69378323005362`", 
      RowBox[{
       "\"mol\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
        "\"L\""}], "moles per liter", 
      FractionBox["\"Moles\"", "\"Liters\""]},
     "Quantity"]}], ",", 
   RowBox[{"\<\"H\"\>", "\[Rule]", 
    TemplateBox[{
      RowBox[{"-", "2767.4918392866484`"}], 
      RowBox[{
       "\"J\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
        "\"mol\""}], "joules per mole", 
      FractionBox["\"Joules\"", "\"Moles\""]},
     "Quantity"]}], ",", 
   RowBox[{"\<\"S\"\>", "\[Rule]", 
    TemplateBox[{"96.32909289134604`", 
      RowBox[{
       "\"J\"", "\[InvisibleSpace]", "\"/(\"", "\[InvisibleSpace]", "\"K\"", 
        "\[ThinSpace]", "\"mol\"", "\[InvisibleSpace]", "\")\""}], 
      "joules per kelvin mole", 
      FractionBox["\"Joules\"", 
       RowBox[{"\"Kelvins\"", " ", "\"Moles\""}]]},
     "Quantity"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8293269106323595`*^9, 3.82932696223141*^9, 
  3.829327041594223*^9, 3.8293271460360184`*^9, 3.8293937066255283`*^9, 
  3.8295542848168864`*^9, 3.830656400676983*^9, 3.8307896110617914`*^9},
 CellLabel->"Out[45]=",
 CellID->114647480,ExpressionUUID->"ce0f99ff-90f2-42c1-a435-a304e383d799"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RefProp", "[", 
  RowBox[{"\"\<TP<\>\"", ",", "\"\<D H S\>\"", ",", "T", ",", 
   SubscriptBox["P", "vap"], ",", 
   SubscriptBox["z", "Air3"]}], "]"}]], "Input",
 CellChangeTimes->{{3.8293271122842274`*^9, 3.82932716530946*^9}, {
  3.8293937151716795`*^9, 3.8293937160852375`*^9}},
 CellLabel->"In[46]:=",
 CellID->335975204,ExpressionUUID->"e514555a-c792-4b09-a40e-c824f47dae80"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"D\"\>", "\[Rule]", 
    TemplateBox[{"0.44660934272642977`", 
      RowBox[{
       "\"mol\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
        "\"L\""}], "moles per liter", 
      FractionBox["\"Moles\"", "\"Liters\""]},
     "Quantity"]}], ",", 
   RowBox[{"\<\"H\"\>", "\[Rule]", 
    TemplateBox[{"2538.2682448930545`", 
      RowBox[{
       "\"J\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
        "\"mol\""}], "joules per mole", 
      FractionBox["\"Joules\"", "\"Moles\""]},
     "Quantity"]}], ",", 
   RowBox[{"\<\"S\"\>", "\[Rule]", 
    TemplateBox[{"154.31508021406069`", 
      RowBox[{
       "\"J\"", "\[InvisibleSpace]", "\"/(\"", "\[InvisibleSpace]", "\"K\"", 
        "\[ThinSpace]", "\"mol\"", "\[InvisibleSpace]", "\")\""}], 
      "joules per kelvin mole", 
      FractionBox["\"Joules\"", 
       RowBox[{"\"Kelvins\"", " ", "\"Moles\""}]]},
     "Quantity"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8293271672921886`*^9, 3.829393718664342*^9, 
  3.829554288051239*^9, 3.8306564046164136`*^9, 3.8307896112802076`*^9},
 CellLabel->"Out[46]=",
 CellID->497125110,ExpressionUUID->"6f04bef4-fdf7-4d28-9696-551f279c3133"]
}, Open  ]]
}, Open  ]],

Cell["\<\
This phase notation can be very useful in regions where the solver has \
trouble determining the phase on its own, resulting in a convergence error.\
\>", "Text",
 CellChangeTimes->{{3.82932761991803*^9, 3.8293276591421885`*^9}, {
  3.8306564287528453`*^9, 3.830656431665079*^9}},
 CellID->76624845,ExpressionUUID->"690d4e1e-4c74-47f4-a5a6-e39672d4d393"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Two Phase Properties", "Section",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.82305710368225*^9, 3.8230571116738462`*^9}, {
  3.8290246851634583`*^9, 3.8290246887957916`*^9}},
 CellID->328677578,ExpressionUUID->"075a3a4b-38b4-4b73-a092-b6402ee32d1d"],

Cell[TextData[{
 "Unlike the Legacy API and single-phase ",
 StyleBox["RefProp",
  FontWeight->"Bold"],
 " input parameter flags, there are no specialized commands or parameters \
dedicated for use when the state point is known to be in the two-phase (2\
\[Phi]) region.  These calls are simply made using RefProp as specified above \
for general state-point property calculations, with a few exceptions."
}], "Text",
 CellChangeTimes->{{3.8168492667978787`*^9, 3.816849386013626*^9}, 
   3.8179997867066865`*^9, {3.822593460690585*^9, 3.822593472259637*^9}, 
   3.822593629534955*^9, {3.822598982839508*^9, 3.8225990563618293`*^9}, {
   3.8225999774766903`*^9, 3.8226001513735666`*^9}, {3.82260181892393*^9, 
   3.822601896188301*^9}, {3.8226020409391065`*^9, 3.8226020451169634`*^9}, 
   3.822604849730685*^9, {3.8226051394487777`*^9, 3.82260515201713*^9}, {
   3.8226085968775773`*^9, 3.822608819181978*^9}, {3.8303595806026926`*^9, 
   3.830359592490055*^9}, {3.8303597065785265`*^9, 3.8303597186981*^9}, {
   3.8303651640193586`*^9, 3.8303653373197556`*^9}, {3.8303655216498313`*^9, 
   3.830365529698247*^9}},
 CellID->284819056,ExpressionUUID->"8bf9b751-cbc5-49b4-8df0-3948eeac6a33"],

Cell[BoxData[GridBox[{
   {
    RowBox[{"RefProp", "[", 
     RowBox[{
      StyleBox["hFld", "TI"], ",", 
      StyleBox["hIn", "TI"], ",", 
      StyleBox["hOut", "TI"], ",", 
      StyleBox["a", "TI"], ",", 
      StyleBox["b", "TI"], ",", 
      StyleBox["z", "TI"], ",", 
      RowBox[{
       StyleBox["satcomp", "TI"], "\[Rule]", "T"}], ",", 
      RowBox[{"iMass", "\[Rule]", "1"}]}], "]"}], Cell[
    "Calculate two-phase mixture properties. ", "TableText",ExpressionUUID->
     "39a368f0-1808-44a5-9aaf-d164df86c62e"]}
  }]], "DefinitionBox",
 CellChangeTimes->{{3.8253657331377487`*^9, 3.8253657351543837`*^9}, {
   3.8253657889774733`*^9, 3.8253658467140675`*^9}, {3.8255734531131697`*^9, 
   3.8255734553701353`*^9}, {3.8255735051859274`*^9, 
   3.8255735872345467`*^9}, {3.8255736385613394`*^9, 3.825573674579091*^9}, {
   3.825573799896959*^9, 3.8255738325226955`*^9}, {3.825573879762413*^9, 
   3.8255739526734633`*^9}, {3.825620405994397*^9, 3.825620710465331*^9}, {
   3.825630677257697*^9, 3.825630677257697*^9}, {3.8257620347694206`*^9, 
   3.8257620397221794`*^9}, {3.8257658241949077`*^9, 3.825765828171276*^9}, {
   3.829023936043291*^9, 3.8290239361799555`*^9}, {3.829109090277491*^9, 
   3.829109120599384*^9}, {3.8291093585821185`*^9, 3.82910936680616*^9}, {
   3.8291095673509583`*^9, 3.8291095686305647`*^9}, 3.830656513721553*^9, {
   3.830656852504211*^9, 3.8306568995124245`*^9}, {3.830656941153047*^9, 
   3.8306569673160243`*^9}, {3.8306577945838366`*^9, 3.8306578276474104`*^9}},
 GridBoxOptions->{GridBoxItemSize->{"Columns" -> {
     Scaled[0.55], {
      Scaled[0.45]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
   "RowsIndexed" -> {}}},
 CellID->60910840,ExpressionUUID->"7f04dd4f-3415-46bd-93b9-fd34c1e6401c"],

Cell["Fluid two-phase, state-dependent properties.", "Caption",
 CellChangeTimes->{{3.822593572812685*^9, 3.8225935774353223`*^9}, {
  3.8226025046350183`*^9, 3.8226025164513807`*^9}, {3.829109381269478*^9, 
  3.8291093951423984`*^9}, {3.8306578514547186`*^9, 3.830657857182395*^9}},
 CellID->392021,ExpressionUUID->"9accd748-f876-4794-ad49-fd08e6a4f515"],

Cell["\<\
The two-phase (2\[Phi]) region occurs at state points between the saturated \
vapor and saturated liquid curves.  The vapor quality, Q, lies somewhere \
between 0 and 1, representing the fraction of vapor in the mixture (1 = \
saturated vapor; 0 = saturated liquid).\
\>", "Text",
 CellChangeTimes->{{3.8293931051645813`*^9, 3.829393255636284*^9}, {
  3.8293932989794025`*^9, 3.829393406210711*^9}, {3.829393455547805*^9, 
  3.829393486469164*^9}, {3.8293935801716127`*^9, 3.829393598771886*^9}, {
  3.830656739780754*^9, 3.8306567429044223`*^9}},
 CellID->164191590,ExpressionUUID->"2ac527aa-5314-499a-be28-671d06bcd308"],

Cell[TextData[{
 "For ",
 Cell[BoxData[
  StyleBox["hIn", "TI"]], "InlineFormula",ExpressionUUID->
  "2aebb7ea-3161-4f71-bddf-d3c93ba2f5e1"],
 ", the state point can be set using any of the \"xQ\" input pairs mentioned \
under Saturation Proper above, but setting the value of Q to something \
between 0 and 1.  If a different \"AB\" pair is set at a known 2\[Phi] state \
point, the quality, Q, can be returned from ",
 Cell[BoxData[
  ButtonBox["RefProp",
   BaseStyle->"Link",
   ButtonData->"paclet:RefpropLink/ref/RefProp"]], "InlineFormula",
  ExpressionUUID->"9b36f547-3767-43a6-ab6f-ad816a3072e0"],
 " on a mole basis using \"QMOLE\" or a mass basis using \"QMASS\" in the ",
 Cell[BoxData[
  StyleBox["hOut", "TI"]], "InlineFormula",ExpressionUUID->
  "72f4a8e9-4b83-4080-aac2-d2859f48ed93"],
 " parameter."
}], "Text",
 CellChangeTimes->{{3.8306565638135138`*^9, 3.8306567870183744`*^9}, {
  3.830657179936234*^9, 3.830657229560443*^9}},
 CellID->35419738,ExpressionUUID->"50004f92-99eb-430b-8145-7b2466241e2c"],

Cell[TextData[{
 "In addition to retrieving quality, the vapor/liquid equilibrium \
compositions for mixtures can be returned as well by setting an option \
parameter, ",
 Cell[BoxData[
  StyleBox["satcomp", "TI"]], "InlineFormula",ExpressionUUID->
  "a84c210d-7dcb-420d-a74d-24c16c515a50"],
 " to True.  If not specified (or set to False), ",
 Cell[BoxData[
  StyleBox["satcomp", "TI"]], "InlineFormula",ExpressionUUID->
  "3ba2a68a-1cb4-4025-9c78-c103c02412c7"],
 " defaults to False, which suppresses the output of the equilibrium \
compositions, when not needed.  By default, the equilibrium compositions in \
the liquid phase (x) and the vapor phase (y) are printed on a mole basis.  \
However, mass-based compositions can be reported by setting a second option \
parameter, ",
 Cell[BoxData[
  StyleBox["iMass", "TI"]], "InlineFormula",ExpressionUUID->
  "c093ba78-a973-465a-b27d-5aa6e59c30f9"],
 ", to 1 (default is 0 when not specified)."
}], "Text",
 CellChangeTimes->{{3.830657362952607*^9, 3.8306573660891876`*^9}, {
  3.8306574686797276`*^9, 3.830657670512764*^9}, {3.8306578887828555`*^9, 
  3.830658188396271*^9}, {3.8306584232968416`*^9, 3.8306584361604567`*^9}},
 CellID->283787862,ExpressionUUID->"5361bbf9-04eb-4405-b7d0-f2ac41fc024c"],

Cell["\<\
In this example, we'll use our mid-point T value from the examples above and \
set the pressure half-way between the saturated liquid and vapor pressures to \
ensure the that state-point is in the 2\[Phi] region.\
\>", "Text",
 CellChangeTimes->{{3.8293935139736032`*^9, 3.8293935721241283`*^9}, {
  3.829393606642841*^9, 3.829393616714939*^9}, {3.8306582483509026`*^9, 
  3.8306582684471116`*^9}},
 CellID->357614613,ExpressionUUID->"49e51d5e-07fb-4f8a-8d49-d1d4109f9fde"],

Cell[CellGroupData[{

Cell["\<\
Calculate the 2\[Phi] mixture density, returning the mole-based Q values as \
well as the molar composition in each phase.\
\>", "MathCaption",
 CellChangeTimes->{{3.829393626508727*^9, 3.829393679270664*^9}, {
  3.8306583484780293`*^9, 3.8306583628386164`*^9}, {3.830658817060407*^9, 
  3.830658837581538*^9}},
 CellID->471966478,ExpressionUUID->"7738541f-915d-487c-b2ec-08493119cf24"],

Cell[CellGroupData[{

Cell[BoxData[
 SubscriptBox["z", "Air3"]], "Input",
 CellChangeTimes->{{3.8306585856754313`*^9, 3.8306585930058484`*^9}},
 CellLabel->"In[47]:=",
 CellID->449258204,ExpressionUUID->"a5b473ab-dda1-47f7-b501-2a133df5b1c4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.7812`", ",", "0.0092`", ",", "0.2096`"}], "}"}]], "Output",
 CellChangeTimes->{3.830658595126178*^9, 3.8306587664278927`*^9, 
  3.830789629851491*^9},
 CellLabel->"Out[47]=",
 CellID->159193850,ExpressionUUID->"42519a38-35b4-4353-98f4-f41d89ae1ed2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["P", 
    RowBox[{"2", "\[Phi]"}]], "=", 
   RowBox[{"0.5", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["P", "L"], "+", 
      SubscriptBox["P", "V"]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"RefProp", "[", 
  RowBox[{"\"\<TP\>\"", ",", "\"\<D QMOLE\>\"", ",", "T", ",", 
   SubscriptBox["P", 
    RowBox[{"2", "\[Phi]"}]], ",", 
   SubscriptBox["z", "Air3"], ",", 
   RowBox[{"SatComp", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.829393765775386*^9, 3.829393827405614*^9}, {
   3.8306583684326487`*^9, 3.8306583930787125`*^9}, 3.830658747389826*^9},
 CellLabel->"In[48]:=",
 CellID->8156225,ExpressionUUID->"31b2dbc6-69bd-4bd7-a416-5f5f307006e0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"D\"\>", "\[Rule]", 
    TemplateBox[{"0.8849147930599723`", 
      RowBox[{
       "\"mol\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
        "\"L\""}], "moles per liter", 
      FractionBox["\"Moles\"", "\"Liters\""]},
     "Quantity"]}], ",", 
   RowBox[{"\<\"QMOLE\"\>", "\[Rule]", "0.6274816008522652`"}], ",", 
   RowBox[{"\<\"x\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.6697225353685732`", ",", "0.012150695490206642`", ",", 
      "0.3181267691412202`"}], "}"}]}], ",", 
   RowBox[{"\<\"y\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.8473810746468797`", ",", "0.007448254038219915`", ",", 
      "0.14517067131490033`"}], "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8293938338733225`*^9, 3.829554292140339*^9, 3.830658284152096*^9, {
   3.830658378869726*^9, 3.8306583942066946`*^9}, {3.830658752009438*^9, 
   3.8306587728417053`*^9}, 3.8307896301217966`*^9},
 CellLabel->"Out[49]=",
 CellID->405967293,ExpressionUUID->"49a593bf-6d52-4d22-a44e-babf9c3566aa"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Note that because the Air mixture is mostly Nitrogen, the mole-based and \
mass-based Q values are not very different.  Also, the input composition, z, \
is the bulk, single-phase, composition, which will be different from the \
compositions in the liquid (x) or vapor (y) phases.\
\>", "Text",
 CellChangeTimes->{{3.829393847324359*^9, 3.829393883341066*^9}, {
  3.8306582975343275`*^9, 3.8306582996706076`*^9}, {3.830658495608387*^9, 
  3.830658498798851*^9}, {3.830658532342114*^9, 3.830658621861622*^9}},
 CellID->249554189,ExpressionUUID->"5beebafa-1d81-4597-a617-1607a43f10f6"],

Cell[CellGroupData[{

Cell["\<\
Calculate the 2\[Phi] mixture density, returning the mass-based Q values as \
well as the molar composition in each phase.\
\>", "MathCaption",
 CellChangeTimes->{{3.829393626508727*^9, 3.829393679270664*^9}, {
  3.8306583484780293`*^9, 3.8306583628386164`*^9}, {3.830658826925044*^9, 
  3.830658833589222*^9}},
 CellID->194654352,ExpressionUUID->"53e21de5-410e-4b3f-a2e2-f270f7188895"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["P", 
    RowBox[{"2", "\[Phi]"}]], "=", 
   RowBox[{"0.5", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["P", "L"], "+", 
      SubscriptBox["P", "V"]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"RefProp", "[", 
  RowBox[{"\"\<TP\>\"", ",", "\"\<D QMASS\>\"", ",", "T", ",", 
   SubscriptBox["P", 
    RowBox[{"2", "\[Phi]"}]], ",", 
   SubscriptBox["z", "Air3"], ",", 
   RowBox[{"SatComp", "\[Rule]", "True"}], ",", 
   RowBox[{"iMass", "\[Rule]", "1"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.829393765775386*^9, 3.829393827405614*^9}, {
   3.8306583684326487`*^9, 3.8306583930787125`*^9}, 3.830658747389826*^9, {
   3.830658844237728*^9, 3.830658857078377*^9}},
 CellLabel->"In[50]:=",
 CellID->139431381,ExpressionUUID->"a0898525-5949-4242-bafe-7d59b9e8f7a7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"D\"\>", "\[Rule]", 
    TemplateBox[{"0.7397445459871663`", 
      RowBox[{
       "\"mol\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
        "\"L\""}], "moles per liter", 
      FractionBox["\"Moles\"", "\"Liters\""]},
     "Quantity"]}], ",", 
   RowBox[{"\<\"QMASS\"\>", "\[Rule]", "0.7498079037692`"}], ",", 
   RowBox[{"\<\"x\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.6385720481586519`", ",", "0.012743324896439586`", ",", 
      "0.3486846269449085`"}], "}"}]}], ",", 
   RowBox[{"\<\"y\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.8287913711670831`", ",", "0.008017681330096981`", ",", 
      "0.16319094750281996`"}], "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.830658858901498*^9, 3.830789649918805*^9},
 CellLabel->"Out[51]=",
 CellID->65480128,ExpressionUUID->"2a52860d-dddc-4e41-b79c-6f1c89dcddf5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
On the saturation curves, Q returns 1 or 0 exactly, and the composition at \
the quality specified is the bulk composition; Liquid (Q=0, x=z) or Vapor \
(Q=1, y=z).\
\>", "MathCaption",
 CellChangeTimes->{{3.8293939278919554`*^9, 3.829393942171777*^9}, {
  3.8306588905198812`*^9, 3.830658961717435*^9}, {3.830658992724484*^9, 
  3.8306590510125437`*^9}},
 CellID->152907918,ExpressionUUID->"05e80b98-0110-4001-97e8-aa3fab9aba94"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RefProp", "[", 
  RowBox[{"\"\<TQ\>\"", ",", "\"\<D QMASS QMOLE\>\"", ",", "T", ",", "0", ",", 
   SubscriptBox["z", "Air3"], ",", 
   RowBox[{"SatComp", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8293941049346175`*^9, 3.829394125931511*^9}, {
  3.8293996742132654`*^9, 3.829399684781012*^9}, {3.8306589690707626`*^9, 
  3.8306589816451225`*^9}},
 CellLabel->"In[52]:=",
 CellID->149833332,ExpressionUUID->"eaaa1fe6-3e88-44f6-81a3-ae10c6958a83"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"D\"\>", "\[Rule]", 
    TemplateBox[{"27.687716749641588`", 
      RowBox[{
       "\"mol\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
        "\"L\""}], "moles per liter", 
      FractionBox["\"Moles\"", "\"Liters\""]},
     "Quantity"]}], ",", 
   RowBox[{"\<\"QMASS\"\>", "\[Rule]", "0.`"}], ",", 
   RowBox[{"\<\"QMOLE\"\>", "\[Rule]", "0.`"}], ",", 
   RowBox[{"\<\"x\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.7812`", ",", "0.0092`", ",", "0.2096`"}], "}"}]}], ",", 
   RowBox[{"\<\"y\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.904423295423943`", ",", "0.0052699743502115926`", ",", 
      "0.09030673022584544`"}], "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8293996976904964`*^9, 3.8295542977573214`*^9, 
  3.8306583133809276`*^9, 3.83065898329867*^9, 3.830789650222026*^9},
 CellLabel->"Out[52]=",
 CellID->195243360,ExpressionUUID->"793891a0-7310-4c03-9380-a5c4cbfcec6d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RefProp", "[", 
  RowBox[{"\"\<TQ\>\"", ",", "\"\<D QMASS QMOLE\>\"", ",", "T", ",", "1", ",", 
   SubscriptBox["z", "Air3"], ",", 
   RowBox[{"SatComp", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.82939973048482*^9, 3.82939973050978*^9}, {
  3.8306590563742*^9, 3.830659063429325*^9}},
 CellLabel->"In[53]:=",
 CellID->154902391,ExpressionUUID->"579820e2-9250-4c4b-b80b-32e9942649a5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"D\"\>", "\[Rule]", 
    TemplateBox[{"0.5018721820545801`", 
      RowBox[{
       "\"mol\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
        "\"L\""}], "moles per liter", 
      FractionBox["\"Moles\"", "\"Liters\""]},
     "Quantity"]}], ",", 
   RowBox[{"\<\"QMASS\"\>", "\[Rule]", "1.`"}], ",", 
   RowBox[{"\<\"QMOLE\"\>", "\[Rule]", "1.`"}], ",", 
   RowBox[{"\<\"x\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.556626015555977`", ",", "0.013832199979441073`", ",", 
      "0.42954178446458186`"}], "}"}]}], ",", 
   RowBox[{"\<\"y\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.7812`", ",", "0.0092`", ",", "0.2096`"}], "}"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8293997316347437`*^9, 3.8295543013377447`*^9, 
  3.830658317343299*^9, 3.830659065032009*^9, 3.8307896504464273`*^9},
 CellLabel->"Out[53]=",
 CellID->142022961,ExpressionUUID->"80dbac6c-68e0-470a-a246-b0569db90490"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
However, in the single-phase regions, Q is undefined and returns a large \
negative value and both compositions return the bulk composition (which is \
why they are suppressed by default).\
\>", "MathCaption",
 CellChangeTimes->{{3.8293940446208715`*^9, 3.829394080179802*^9}, {
  3.830659092213319*^9, 3.8306591672206526`*^9}},
 CellID->510416336,ExpressionUUID->"09fe5a82-f5d8-4f9e-b111-91d0dc135483"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RefProp", "[", 
  RowBox[{"\"\<TP\>\"", ",", "\"\<D QMASS QMOLE\>\"", ",", "T", ",", 
   SubscriptBox["P", "liq"], ",", 
   SubscriptBox["z", "Air3"], ",", 
   RowBox[{"SatComp", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8293939573482027`*^9, 3.8293939596360846`*^9}, {
  3.8293997541405745`*^9, 3.829399759004571*^9}, {3.830659175758806*^9, 
  3.8306591980132737`*^9}},
 CellLabel->"In[54]:=",
 CellID->169297097,ExpressionUUID->"135e50a5-e43b-4f8e-b0b4-9b0ffd16ac6d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"D\"\>", "\[Rule]", 
    TemplateBox[{"27.69378323005363`", 
      RowBox[{
       "\"mol\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
        "\"L\""}], "moles per liter", 
      FractionBox["\"Moles\"", "\"Liters\""]},
     "Quantity"]}], ",", 
   RowBox[{"\<\"QMASS\"\>", "\[Rule]", 
    RowBox[{"-", "9.99999`*^6"}]}], ",", 
   RowBox[{"\<\"QMOLE\"\>", "\[Rule]", 
    RowBox[{"-", "9.99999`*^6"}]}], ",", 
   RowBox[{"\<\"x\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.7812`", ",", "0.0092`", ",", "0.2096`"}], "}"}]}], ",", 
   RowBox[{"\<\"y\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.7812`", ",", "0.0092`", ",", "0.2096`"}], "}"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.82939396649375*^9, 3.8293997715131264`*^9, 3.8295543063822584`*^9, 
   3.830658321543064*^9, {3.8306591827829895`*^9, 3.8306591990634346`*^9}, 
   3.8307896506697955`*^9},
 CellLabel->"Out[54]=",
 CellID->117527292,ExpressionUUID->"f848522f-2f67-485b-8b34-2355ffc08ead"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RefProp", "[", 
  RowBox[{"\"\<TP\>\"", ",", "\"\<D QMASS QMOLE\>\"", ",", "T", ",", 
   SubscriptBox["P", "vap"], ",", 
   SubscriptBox["z", "Air3"], ",", 
   RowBox[{"SatComp", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.829394023347747*^9, 3.829394023710801*^9}, {
  3.8293997649008055`*^9, 3.8293997657984333`*^9}, {3.8306592085500565`*^9, 
  3.8306592144293575`*^9}},
 CellLabel->"In[55]:=",
 CellID->24586238,ExpressionUUID->"7024323c-cb25-446c-9dcf-37a879f7c6be"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"D\"\>", "\[Rule]", 
    TemplateBox[{"0.4466093427264297`", 
      RowBox[{
       "\"mol\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
        "\"L\""}], "moles per liter", 
      FractionBox["\"Moles\"", "\"Liters\""]},
     "Quantity"]}], ",", 
   RowBox[{"\<\"QMASS\"\>", "\[Rule]", 
    RowBox[{"-", "9.99999`*^6"}]}], ",", 
   RowBox[{"\<\"QMOLE\"\>", "\[Rule]", 
    RowBox[{"-", "9.99999`*^6"}]}], ",", 
   RowBox[{"\<\"x\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.7812`", ",", "0.0092`", ",", "0.2096`"}], "}"}]}], ",", 
   RowBox[{"\<\"y\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.7812`", ",", "0.0092`", ",", "0.2096`"}], "}"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8293940255997257`*^9, 3.82939976786887*^9, 
  3.829554309663457*^9, 3.8306583248372507`*^9, 3.830659215625156*^9, 
  3.8307896508902345`*^9},
 CellLabel->"Out[55]=",
 CellID->121117230,ExpressionUUID->"405ee030-8249-4fc2-9809-f15c4f13be46"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Alternatively, the liquid/vapor compositions can be retrieved explicitly \
using XMOLELIQ and XMOLEVAP in the output parameter list; these values will \
be returned on a molar basis, regardless of the state of the iMass Option.  \
XMASSLIQ and XMASSVAP will also return the mass-based, equilibrium \
vapor/liquid compositions. \
\>", "Text",
 CellChangeTimes->{{3.8307896665144367`*^9, 3.8307898586573944`*^9}, {
  3.830789952489366*^9, 3.830789963536812*^9}},
 CellID->267651511,ExpressionUUID->"6291f3e0-4b7d-45af-9139-b00fab570281"],

Cell[CellGroupData[{

Cell["Get the molar-based equilibrium compositions", "MathCaption",
 CellChangeTimes->{{3.830789880250598*^9, 3.830789894834609*^9}},
 CellID->775472793,ExpressionUUID->"f5ae30e7-b8f7-43a9-a08c-ca66dc04ad47"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RefProp", "[", 
  RowBox[{"\"\<TP\>\"", ",", "\"\<XMOLELIQ XMOLEVAP\>\"", ",", "T", ",", 
   SubscriptBox["P", 
    RowBox[{"2", "\[Phi]"}]], ",", 
   SubscriptBox["z", "Air3"]}], "]"}]], "Input",
 CellChangeTimes->{{3.8307899144730444`*^9, 3.8307899433368645`*^9}, {
  3.8307900147956514`*^9, 3.830790034065127*^9}},
 CellLabel->"In[59]:=",
 CellID->225223365,ExpressionUUID->"b2682fb2-c39e-47c0-8724-6a993a1ff33b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"XMOLELIQ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.6697225353685732`", ",", "0.012150695490206642`", ",", 
      "0.3181267691412202`"}], "}"}]}], ",", 
   RowBox[{"\<\"XMOLEVAP\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.8473810746468797`", ",", "0.007448254038219915`", ",", 
      "0.14517067131490033`"}], "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.830789973072273*^9, {3.830790017604164*^9, 3.83079003521303*^9}},
 CellLabel->"Out[59]=",
 CellID->212179532,ExpressionUUID->"393f4bf9-575c-44e5-bade-5a9c45543f6b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get the mass-based equilibrium compositions", "MathCaption",
 CellChangeTimes->{{3.830789880250598*^9, 3.830789894834609*^9}, {
  3.8307900516809998`*^9, 3.8307900520011444`*^9}},
 CellID->39931563,ExpressionUUID->"ca30d6b3-1e1a-467b-80a2-a61be2ca77a4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RefProp", "[", 
  RowBox[{"\"\<TP\>\"", ",", "\"\<XMASSLIQ XMASSVAP\>\"", ",", "T", ",", 
   SubscriptBox["P", 
    RowBox[{"2", "\[Phi]"}]], ",", 
   SubscriptBox["z", "Air3"]}], "]"}]], "Input",
 CellChangeTimes->{{3.8307899144730444`*^9, 3.8307899433368645`*^9}, {
  3.8307900147956514`*^9, 3.8307900619774523`*^9}},
 CellLabel->"In[60]:=",
 CellID->3156862,ExpressionUUID->"d0b6e93f-538b-4b1e-8eb3-49652f745301"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"XMASSLIQ\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.6375670715727499`", ",", "0.016495294808812254`", ",", 
      "0.3459376336184379`"}], "}"}]}], ",", 
   RowBox[{"\<\"XMASSVAP\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0.8276613990433644`", ",", "0.010374242599658873`", ",", 
      "0.1619643583569767`"}], "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.830789973072273*^9, {3.830790017604164*^9, 3.830790063480404*^9}},
 CellLabel->"Out[60]=",
 CellID->445160699,ExpressionUUID->"d655381e-584a-4e8e-8050-f83f0db0102b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["References", "Section",
 CellFrame->{{0, 0}, {0, 2}},
 CellChangeTimes->{{3.8305999282782993`*^9, 3.830599930070475*^9}},
 CellID->776680,ExpressionUUID->"270c355b-3449-4662-90f8-b31216668ccf"],

Cell["\<\
1. Eric W. Lemmon, Ian H. Bell, Marcia L. Huber, and Mark O. McLinden, \
REFPROP Documentation, Release 10.0, NIST, May 21, 2018.\
\>", "Text",
 CellChangeTimes->{{3.829459108114297*^9, 3.8294591288957357`*^9}, {
  3.830600083573577*^9, 3.8306001415325193`*^9}},
 CellID->442085681,ExpressionUUID->"7e712525-102d-486d-ad3e-05d19c89a63e"],

Cell["\<\
2. Campbell, J.M., Gas Conditioning and Processing, Volume 1: The Basic \
Principles, 9th Edition, 2nd Printing, Editors Hubbard, R. and \
Snow\[Dash]McGregor, K., Campbell Petroleum Series, Norman, Oklahoma, 2014.\
\>", "Text",
 CellChangeTimes->{{3.829459108114297*^9, 3.8294591288957357`*^9}, {
  3.830600083573577*^9, 3.8306000910286036`*^9}},
 CellID->645428874,ExpressionUUID->"3ef57053-9954-43f3-9a56-d09cd347b90e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["More About", "TutorialMoreAboutSection",
 CellID->23220180,ExpressionUUID->"25f77bf4-5f5b-40f4-b7db-db33d3a3502c"],

Cell[TextData[ButtonBox["RefpropLink Guide",
 BaseStyle->"Link",
 ButtonData->"paclet:RefpropLink/guide/RefpropLink"]], "TutorialMoreAbout",
 CellChangeTimes->{{3.829554477265361*^9, 3.829554507471608*^9}},
 CellID->1567025153,ExpressionUUID->"c443d1d5-bc00-4a1f-825f-c4bfc2d47324"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Tutorials", "RelatedTutorialsSection",
 CellID->415694126,ExpressionUUID->"89f78c7d-f7c0-4dba-b37d-9c13e8be31e4"],

Cell[TextData[ButtonBox["RefpropLink Overview",
 BaseStyle->"Link",
 ButtonData->
  "paclet:RefpropLink/tutorial/RefpropLinkOverview"]], "RelatedTutorials",
 CellChangeTimes->{{3.831186766631734*^9, 3.831186789799773*^9}},
 CellID->90776795,ExpressionUUID->"0d2e3c1e-2296-4a21-8bb5-147b2d8c94f6"],

Cell[TextData[ButtonBox["RefpropLink Implementation",
 BaseStyle->"Link",
 ButtonData->
  "paclet:RefpropLink/tutorial/Implementation"]], "RelatedTutorials",
 CellChangeTimes->{{3.8295561633470955`*^9, 3.8295561679617863`*^9}, {
  3.8295562342814484`*^9, 3.829556249907692*^9}},
 CellID->478075264,ExpressionUUID->"2a574757-fecd-4c94-83e3-5caa42c319a0"],

Cell[TextData[ButtonBox["RefpropLink Units",
 BaseStyle->"Link",
 ButtonData->"paclet:RefpropLink/tutorial/Units"]], "RelatedTutorials",
 CellChangeTimes->{{3.8247597062351108`*^9, 3.8247597155232735`*^9}, {
  3.8294005400615873`*^9, 3.829400540243102*^9}, {3.8304132140208445`*^9, 
  3.8304132176700525`*^9}, {3.8311862807612495`*^9, 3.8311862841681366`*^9}},
 CellID->72633640,ExpressionUUID->"9cc3c05b-4dfe-4b7e-9c04-1827b382e1c7"],

Cell[TextData[ButtonBox["Pure Fluids",
 BaseStyle->"Link",
 ButtonData->"paclet:RefpropLink/tutorial/PureFluids"]], "RelatedTutorials",
 CellChangeTimes->{{3.8247596885483713`*^9, 3.824759701802932*^9}, {
  3.829400160716598*^9, 3.829400160987873*^9}, {3.829400502531926*^9, 
  3.829400502766299*^9}},
 CellID->208940830,ExpressionUUID->"3659f5cf-c26a-4ff3-88e7-c7cb8bee9a26"],

Cell[TextData[ButtonBox["Mixtures (Legacy API)",
 BaseStyle->"Link",
 ButtonData->
  "paclet:RefpropLink/tutorial/MixturesLegacyAPI"]], "RelatedTutorials",
 CellChangeTimes->{{3.824759646683339*^9, 3.82475966792255*^9}, {
  3.8294000624453025`*^9, 3.829400069852522*^9}, {3.8294005159719934`*^9, 
  3.8294005162203283`*^9}},
 CellID->806871991,ExpressionUUID->"075d9904-e964-4a99-b617-d263b99b5715"],

Cell[TextData[ButtonBox["Pure Fluids (Legacy API)",
 BaseStyle->"Link",
 ButtonData->
  "paclet:RefpropLink/tutorial/PureFluidsLegacyAPI"]], "RelatedTutorials",
 CellChangeTimes->{{3.824759672858325*^9, 3.824759685154475*^9}, {
  3.829400529749158*^9, 3.82940052986086*^9}},
 CellID->6214240,ExpressionUUID->"ae633430-7687-4546-b8f1-cabe0a01b926"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Wolfram Education Group Courses", "TutorialRelatedLinksSection",
 CellID->415694148,ExpressionUUID->"19a31833-8cbe-4a8b-92d4-bbb1531f3e4e"],

Cell["XXXX", "TutorialRelatedLinks",
 CellID->415694149,ExpressionUUID->"45a65e8e-e4f4-4f30-a7f9-d1e34fa4d639"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{742, 865},
WindowMargins->{{-1735, Automatic}, {Automatic, 38}},
PrintingStartingPageNumber->1,
PageHeaders->{{None, None, None}, {None, None, 
   Cell[
    TextData[{
      StyleBox[
       RowBox[{"Printed", " ", "from", " ", "the", " ", 
         StyleBox["Mathematica", FontSlant -> "Italic"], " ", "Help", " ", 
         "System", " "}], "PageHeader"], 
      StyleBox[
       CounterBox["Page"], "PageNumber"]}], "Header", 
    CellMargins -> {{Inherited, 0}, {Inherited, Inherited}}]}},
PageFooters->{{None, None, None}, {
   Cell[
    TextData[
     StyleBox[
      RowBox[{
       "\[Copyright]1988", "\[Dash]", "2008", " ", "Wolfram", " ", "Research",
         ",", " ", "Inc", ".", " ", "All", " ", "rights", " ", "reserved", 
        "."}], "PageFooter"]], "Footer", 
    CellMargins -> {{0, Inherited}, {Inherited, Inherited}}], None, None}},
PageHeaderLines->{False, False},
PageFooterLines->{False, False},
PrintingOptions->{"FacingPages"->False,
"FirstPageFace"->Right,
"FirstPageFooter"->True,
"FirstPageHeader"->True},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 19, 2020)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "TutorialPageStyles.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"2110ee3f-c01c-4fd8-bf9d-fa50b5b9143d"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 600, 14, 22, "History",ExpressionUUID->"7cf2bb9b-4e7a-4a34-b449-4ca7fdae92be",
 CellID->1247902091],
Cell[CellGroupData[{
Cell[1183, 38, 123, 1, 27, "CategorizationSection",ExpressionUUID->"65bd0344-1041-43b8-8773-45a00718766e",
 CellID->1122911449],
Cell[1309, 41, 136, 2, 31, "Categorization",ExpressionUUID->"e610afc9-8aad-4bae-9bd2-89bf68c3066c",
 CellID->686433507],
Cell[1448, 45, 139, 2, 31, "Categorization",ExpressionUUID->"143bed86-e5f5-492b-a50c-3a08d82fab1d",
 CellID->605800465],
Cell[1590, 49, 136, 2, 31, "Categorization",ExpressionUUID->"6f43ff07-fe18-42c6-acdf-a214d9a7ff36",
 CellID->468444828],
Cell[1729, 53, 129, 1, 31, "Categorization",ExpressionUUID->"8e388ad3-f37b-4a41-9d81-38fa4775dc20"]
}, Closed]],
Cell[CellGroupData[{
Cell[1895, 59, 111, 1, 17, "KeywordsSection",ExpressionUUID->"13f11d75-8490-4f67-a1f5-c1d105813c64",
 CellID->1427428552],
Cell[2009, 62, 173, 2, 17, "Keywords",ExpressionUUID->"c92da338-5989-4ec9-b76f-057cb5f917ef",
 CellID->1251852827],
Cell[2185, 66, 174, 2, 17, "Keywords",ExpressionUUID->"1040a194-e829-4c0a-a1fe-425790cc0647",
 CellID->699981508],
Cell[2362, 70, 166, 2, 17, "Keywords",ExpressionUUID->"a64e6899-9764-4b3f-9dad-76038832866d",
 CellID->123893237],
Cell[2531, 74, 171, 2, 17, "Keywords",ExpressionUUID->"47ea26ea-cbda-4d15-802b-58cc6d61812c",
 CellID->3979281]
}, Closed]],
Cell[CellGroupData[{
Cell[2739, 81, 108, 1, 17, "DetailsSection",ExpressionUUID->"a835a6a7-5184-4d8f-9d0c-71560e6e9408",
 CellID->307771771],
Cell[2850, 84, 202, 3, 31, "Details",ExpressionUUID->"7273cd97-219c-4dc4-93fd-2445790c0377",
 CellID->218895918],
Cell[3055, 89, 202, 3, 31, "Details",ExpressionUUID->"b1b72751-fe64-473d-8d39-3e89068f7030",
 CellID->350963985],
Cell[3260, 94, 199, 3, 31, "Details",ExpressionUUID->"7dc84399-c3d4-4136-ba80-9eef18d8c82c",
 CellID->795871300],
Cell[3462, 99, 126, 2, 31, "Details",ExpressionUUID->"97be3b5f-9830-4227-a6a5-f17f53d87c0d",
 CellID->199739161],
Cell[3591, 103, 115, 2, 31, "Details",ExpressionUUID->"682f54cc-be79-45cd-90ba-5a4ecdc92bcc",
 CellID->40625308],
Cell[3709, 107, 116, 2, 31, "Details",ExpressionUUID->"c67a0823-667e-4fff-b4ab-c4d81662ef36",
 CellID->357121918],
Cell[3828, 111, 117, 2, 31, "Details",ExpressionUUID->"223123cf-14d8-4e7d-896b-a620922da660",
 CellID->35949532],
Cell[3948, 115, 133, 2, 31, "Details",ExpressionUUID->"6804efe2-c832-4526-a80b-5408f1bff1c4",
 CellID->929432370],
Cell[4084, 119, 122, 2, 31, "Details",ExpressionUUID->"a8363493-987b-4a6b-82d1-ad18540b38b1",
 CellID->240026365]
}, Closed]],
Cell[CellGroupData[{
Cell[4243, 126, 100, 1, 105, "Title",ExpressionUUID->"4bdcf8cf-f179-4f78-ba0c-dbcec5b4945e",
 CellID->509267359],
Cell[4346, 129, 1467, 28, 111, "Text",ExpressionUUID->"ecac9c2a-2303-4dd3-a70a-20ec71ddaf9b",
 CellID->1534169418],
Cell[5816, 159, 1115, 19, 66, "Text",ExpressionUUID->"e5c10053-aad3-4276-b0ac-56425154351b",
 CellID->573206524],
Cell[6934, 180, 1647, 34, 93, "Text",ExpressionUUID->"41b8ac7d-2391-4fa9-8e6e-faf3729d9b2d",
 CellID->22039004],
Cell[8584, 216, 1063, 20, 36, "Text",ExpressionUUID->"c617ee11-e94c-4df9-a117-e989ebe84ad9",
 CellID->304173396],
Cell[CellGroupData[{
Cell[9672, 240, 265, 4, 50, "Section",ExpressionUUID->"c6d86421-fe50-45ed-aba3-6f4b58759fcb",
 CellID->43322749],
Cell[9940, 246, 824, 20, 67, "Text",ExpressionUUID->"04c63ed5-c074-431a-83be-92b3c7abea20",
 CellID->573431709],
Cell[CellGroupData[{
Cell[10789, 270, 182, 2, 38, "MathCaption",ExpressionUUID->"d4512b50-8c09-416c-842c-04c05f7632f6",
 CellID->279625114],
Cell[10974, 274, 197, 3, 25, "Input",ExpressionUUID->"a43c531c-a210-44b7-8145-fdc514c04683",
 CellID->713385182]
}, Open  ]],
Cell[CellGroupData[{
Cell[11208, 282, 384, 8, 52, "MathCaption",ExpressionUUID->"fc251668-1e8a-43cf-98a8-a8f4ca91312f",
 CellID->872464924],
Cell[CellGroupData[{
Cell[11617, 294, 174, 3, 25, "Input",ExpressionUUID->"0c6d5abb-127f-4898-af6b-6d7fea7b2606",
 CellID->68619680],
Cell[11794, 299, 761, 16, 32, "Print",ExpressionUUID->"e29079e0-54de-4488-b3d1-e28ba8d56fdc",
 CellID->16353655]
}, Open  ]]
}, Open  ]],
Cell[12582, 319, 640, 12, 51, "Text",ExpressionUUID->"72577682-58d7-4abd-b71c-a7eec2379e8f",
 CellID->86903750],
Cell[13225, 333, 703, 14, 81, "Text",ExpressionUUID->"41b1b0bb-9a79-422e-9c58-f3c859fa1d8d",
 CellID->159972398]
}, Open  ]],
Cell[CellGroupData[{
Cell[13965, 352, 206, 3, 50, "Section",ExpressionUUID->"248c0337-16e2-49b5-9cc9-36570fcd22db",
 CellID->471261456],
Cell[14174, 357, 1756, 37, 125, "DefinitionBox",ExpressionUUID->"d871f8ef-61ae-4307-a621-742e0d6188a4",
 CellID->2096742444],
Cell[15933, 396, 207, 2, 27, "Caption",ExpressionUUID->"b713d90d-882f-47ee-af1e-b5996c7fe26b",
 CellID->1891092685],
Cell[16143, 400, 1248, 24, 97, "Text",ExpressionUUID->"179dba0e-adb6-4c34-a568-12a6abcc6456",
 CellID->192609466],
Cell[CellGroupData[{
Cell[17416, 428, 186, 2, 38, "Subsection",ExpressionUUID->"ad59d7d9-4eb4-4833-be6f-2d784ae3b133",
 CellID->133116597],
Cell[17605, 432, 1584, 28, 102, "Text",ExpressionUUID->"818a0c47-5dc1-49a8-a085-d442b7e654be",
 CellID->18384341],
Cell[19192, 462, 1002, 20, 53, "Text",ExpressionUUID->"c2a48b0d-81ff-49fa-8629-c3a7332c9556",
 CellID->840914914],
Cell[CellGroupData[{
Cell[20219, 486, 241, 4, 38, "MathCaption",ExpressionUUID->"c1f577a4-5958-43d2-879d-ce734334ad58",
 CellID->94686831],
Cell[CellGroupData[{
Cell[20485, 494, 987, 21, 62, "Input",ExpressionUUID->"19882ad1-a39d-4737-a153-a4b07372978b",
 CellID->560684107],
Cell[21475, 517, 967, 21, 36, "Output",ExpressionUUID->"bdc72533-39e6-413f-838e-7c51cd445017",
 CellID->336681022]
}, Open  ]]
}, Open  ]],
Cell[22469, 542, 691, 10, 66, "Text",ExpressionUUID->"c87e86a1-7c49-4f66-b95f-6ee8e67ad458",
 CellID->90476344],
Cell[CellGroupData[{
Cell[23185, 556, 226, 3, 38, "MathCaption",ExpressionUUID->"e3a9f5a9-bffb-4a94-85f1-12f1558f6b8b",
 CellID->1041970],
Cell[CellGroupData[{
Cell[23436, 563, 1328, 35, 98, "Input",ExpressionUUID->"84722ac9-b88e-43df-9008-71b6fd0d51ef",
 CellID->257830515],
Cell[24767, 600, 573, 14, 36, "Output",ExpressionUUID->"068b6ae5-9bd0-4c7f-a856-fef61fae24b5",
 CellID->575262355]
}, Open  ]]
}, Open  ]],
Cell[25367, 618, 333, 6, 36, "Text",ExpressionUUID->"81e35d55-d301-4d33-b4e8-1613b36d6ed9",
 CellID->56564293],
Cell[25703, 626, 503, 8, 66, "Text",ExpressionUUID->"d05e45af-7e59-4dd9-b4a3-5109499170d6",
 CellID->1014628631],
Cell[CellGroupData[{
Cell[26231, 638, 204, 2, 38, "MathCaption",ExpressionUUID->"95eb878c-87e6-4c2e-839b-34bcf672b8ba",
 CellID->130874322],
Cell[CellGroupData[{
Cell[26460, 644, 264, 5, 25, "Input",ExpressionUUID->"5dc07631-3e2e-425e-9a49-095483c7c6b5",
 CellID->40545384],
Cell[26727, 651, 239, 4, 24, "Output",ExpressionUUID->"9030f158-88ca-4244-88d0-27317ac70238",
 CellID->654334733]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[27015, 661, 549, 13, 52, "MathCaption",ExpressionUUID->"d65e462b-bb14-436c-918a-e839edf0834d",
 CellID->158736981],
Cell[CellGroupData[{
Cell[27589, 678, 347, 8, 25, "Input",ExpressionUUID->"d6836775-0a03-4268-9e26-7cf1868bbe42",
 CellID->6273109],
Cell[27939, 688, 514, 12, 36, "Output",ExpressionUUID->"dd103271-b403-400d-a4ca-c59b62f0133f",
 CellID->6511671]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[28514, 707, 240, 3, 38, "Subsection",ExpressionUUID->"691e100a-299c-4252-9d31-627554170099",
 CellID->44886640],
Cell[28757, 712, 852, 21, 67, "Text",ExpressionUUID->"d1c425dd-4dfd-453d-a402-50ef5ff20220",
 CellID->678210058],
Cell[CellGroupData[{
Cell[29634, 737, 538, 12, 39, "MathCaption",ExpressionUUID->"558c7bd2-54f0-4781-b5ab-f737d010baaa",
 CellID->230227444],
Cell[CellGroupData[{
Cell[30197, 753, 430, 8, 25, "Input",ExpressionUUID->"e07b9f19-ed46-4a75-945f-a4b3be0a6513",
 CellID->16465047],
Cell[30630, 763, 697, 15, 36, "Output",ExpressionUUID->"af1c55d2-46b1-4c85-aacd-1282021c1e22",
 CellID->30610459]
}, Open  ]]
}, Open  ]],
Cell[31354, 782, 779, 14, 83, "Text",ExpressionUUID->"96d20369-94f6-44c4-83e8-b250bc1ecefc",
 CellID->747896140],
Cell[32136, 798, 447, 8, 36, "Text",ExpressionUUID->"8666704d-00fc-487e-af5e-328c3ec8218d",
 CellID->89322858]
}, Open  ]],
Cell[CellGroupData[{
Cell[32620, 811, 194, 2, 38, "Subsection",ExpressionUUID->"dd163f83-6349-4fc6-9178-e3d67ca44ad1",
 CellID->3660113],
Cell[32817, 815, 535, 8, 66, "Text",ExpressionUUID->"14c4cde5-c772-436e-b5b9-1751e827d891",
 CellID->219397012],
Cell[33355, 825, 557, 19, 192, "Text",ExpressionUUID->"5fb59430-59f3-4d21-bf90-6aaf62c0bd5a",
 CellID->231902546],
Cell[33915, 846, 252, 3, 27, "Caption",ExpressionUUID->"d880c8cd-24dc-48ef-9ee7-a60476ff73ba",
 CellID->200475462],
Cell[34170, 851, 571, 9, 66, "Text",ExpressionUUID->"9c99eda1-7b31-41ff-a8aa-17be42c6b6f8",
 CellID->66519272],
Cell[34744, 862, 1139, 27, 100, "Text",ExpressionUUID->"9bcc1985-6bfa-40f6-92b5-79eb34a23922",
 CellID->195748038],
Cell[35886, 891, 2058, 51, 85, "Text",ExpressionUUID->"4aaa3a10-7644-4115-9739-34702e77c72d",
 CellID->261721614],
Cell[37947, 944, 453, 8, 51, "Text",ExpressionUUID->"db97e5a5-0e10-4658-840b-cdc2e2b3e436",
 CellID->305891491],
Cell[38403, 954, 649, 15, 52, "Text",ExpressionUUID->"26eb9a3b-940b-43eb-825e-89674b314021",
 CellID->187701476],
Cell[CellGroupData[{
Cell[39077, 973, 287, 5, 38, "MathCaption",ExpressionUUID->"ef8085ce-f808-4eee-8aad-7d4fb5ac5495",
 CellID->65014393],
Cell[CellGroupData[{
Cell[39389, 982, 310, 5, 25, "Input",ExpressionUUID->"8da684f5-d7d4-4b68-accf-951b1dff3465",
 CellID->462380331],
Cell[39702, 989, 365, 7, 24, "Output",ExpressionUUID->"74296312-83eb-4574-8a9d-67489579bd76",
 CellID->12672560]
}, Open  ]]
}, Open  ]],
Cell[40094, 1000, 408, 7, 36, "Text",ExpressionUUID->"1b9d172e-712b-4297-86f0-1e24393b1c4a",
 CellID->108771273],
Cell[CellGroupData[{
Cell[40527, 1011, 368, 7, 52, "MathCaption",ExpressionUUID->"1a1ddc06-2296-44f4-92b0-8301709af352",
 CellID->201793012],
Cell[CellGroupData[{
Cell[40920, 1022, 466, 9, 25, "Input",ExpressionUUID->"0ffab274-9d5b-425c-8809-cd519a973095",
 CellID->286397801],
Cell[41389, 1033, 489, 9, 24, "Output",ExpressionUUID->"c7422a0c-4dc1-4e41-97f2-67004341d561",
 CellID->119693245]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[41927, 1048, 294, 5, 38, "MathCaption",ExpressionUUID->"f9c57f01-f808-47e1-b241-33e5e7799608",
 CellID->27511504],
Cell[CellGroupData[{
Cell[42246, 1057, 604, 16, 25, "Input",ExpressionUUID->"58c2b6b6-1fac-4b09-8b70-86a1acaf7539",
 CellID->155050774],
Cell[42853, 1075, 917, 20, 36, "Output",ExpressionUUID->"54c87781-2184-4453-bc62-5d24e4b40ff5",
 CellID->476605891]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[43819, 1101, 385, 6, 52, "MathCaption",ExpressionUUID->"ace368ad-6fd3-4b62-9878-6244d34bd6bd",
 CellID->65873702],
Cell[CellGroupData[{
Cell[44229, 1111, 413, 9, 25, "Input",ExpressionUUID->"acbd43b9-1be3-414d-9071-9fa3809b5f7a",
 CellID->404018090],
Cell[44645, 1122, 644, 12, 55, "Message",ExpressionUUID->"68548c9e-3fdd-40e6-8636-2f6cf21116cc",
 CellID->483347385],
Cell[45292, 1136, 330, 6, 24, "Output",ExpressionUUID->"09829306-d5ed-4123-804f-5d35768e4ae3",
 CellID->247399968]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[45671, 1148, 380, 7, 52, "MathCaption",ExpressionUUID->"c1ad95bc-ca22-4dda-8761-8ca493d25a6f",
 CellID->11719281],
Cell[CellGroupData[{
Cell[46076, 1159, 303, 7, 25, "Input",ExpressionUUID->"05cb2c54-0dd7-4d5c-b0c8-30cd8b03a9a0",
 CellID->21137868],
Cell[46382, 1168, 516, 8, 24, "Output",ExpressionUUID->"d0c4a071-86e0-426f-9c8b-29c4ae0f8853",
 CellID->570722040]
}, Open  ]]
}, Open  ]],
Cell[46925, 1180, 509, 11, 37, "Text",ExpressionUUID->"f72e9704-e2c2-435a-bccc-3bce77a84cb8",
 CellID->23718428],
Cell[47437, 1193, 686, 15, 37, "Text",ExpressionUUID->"203caa10-c79e-4999-a9bc-343093fdd393",
 CellID->221458984],
Cell[CellGroupData[{
Cell[48148, 1212, 536, 13, 39, "MathCaption",ExpressionUUID->"bfe8aab7-66ea-414d-82c4-8a3ae0a71f67",
 CellID->263392303],
Cell[CellGroupData[{
Cell[48709, 1229, 324, 6, 25, "Input",ExpressionUUID->"ff717fb3-a2fe-40c0-898e-1c26b4e0e29a",
 CellID->253299226],
Cell[49036, 1237, 434, 10, 24, "Output",ExpressionUUID->"72437a20-4cec-4981-95e1-f66774667b05",
 CellID->268443948]
}, Open  ]]
}, Open  ]],
Cell[49497, 1251, 873, 17, 69, "Text",ExpressionUUID->"b42b98cc-df51-4e76-b661-10a1d31c7678",
 CellID->207435388]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[50419, 1274, 216, 3, 50, "Section",ExpressionUUID->"c7a5b72d-a5ab-4860-a0c3-1e99eda847cd",
 CellID->347120648],
Cell[50638, 1279, 1434, 31, 71, "Text",ExpressionUUID->"cd454ffc-46db-478a-b58b-e93bb342c1c4",
 CellID->22646652],
Cell[52075, 1312, 1015, 19, 41, "DefinitionBox",ExpressionUUID->"ddd86d21-2f1c-4d6c-846c-cf1abaa40ebc",
 CellID->502623787],
Cell[53093, 1333, 183, 2, 27, "Caption",ExpressionUUID->"1c2c61fb-2029-4bda-b062-e4555ff2dc89",
 CellID->197256598],
Cell[53279, 1337, 941, 21, 55, "Text",ExpressionUUID->"102493ac-fb68-4fb6-8c31-08ddcadd69a8",
 CellID->149164589],
Cell[54223, 1360, 301, 7, 37, "Text",ExpressionUUID->"f4f33785-890b-4a27-900b-44f324f55f15",
 CellID->329574969],
Cell[54527, 1369, 705, 15, 40, "Text",ExpressionUUID->"b1f4674a-f715-4287-8805-8ad584583d34",
 CellID->134133454],
Cell[55235, 1386, 1436, 31, 160, "DefinitionBox",ExpressionUUID->"bbcd63f2-88e6-4382-b5d3-eddf6e0e1e2b",
 CellID->248133496],
Cell[56674, 1419, 327, 6, 27, "Caption",ExpressionUUID->"e5bcee65-96e8-404a-a336-c95d6564b2f3",
 CellID->475182523],
Cell[57004, 1427, 774, 20, 40, "Text",ExpressionUUID->"e9de9f23-2928-4847-868c-f1d440c3d977",
 CellID->172860845],
Cell[57781, 1449, 1089, 31, 53, "Text",ExpressionUUID->"d3a0ded0-7baa-4313-abb9-98fb6174a2b1",
 CellID->207010670],
Cell[CellGroupData[{
Cell[58895, 1484, 301, 4, 38, "MathCaption",ExpressionUUID->"f5c31eab-1a8c-406b-87af-f420f325b984",
 CellID->34664985],
Cell[CellGroupData[{
Cell[59221, 1492, 419, 8, 25, "Input",ExpressionUUID->"a933817c-2e4b-416b-964f-61647288fcf0",
 CellID->201708715],
Cell[59643, 1502, 403, 6, 24, "Output",ExpressionUUID->"c846476c-a337-4094-8b8c-cee1f6883a8e",
 CellID->415580201]
}, Open  ]],
Cell[CellGroupData[{
Cell[60083, 1513, 417, 8, 25, "Input",ExpressionUUID->"0c4d2f96-bde2-4459-86ab-49d3c415a590",
 CellID->272365515],
Cell[60503, 1523, 301, 5, 24, "Output",ExpressionUUID->"0f7ee0ce-7390-41fb-98d0-e1768b8bf464",
 CellID->66260187]
}, Open  ]],
Cell[CellGroupData[{
Cell[60841, 1533, 443, 8, 25, "Input",ExpressionUUID->"526ed296-0459-41e3-99d6-fb523b46bec0",
 CellID->640961820],
Cell[61287, 1543, 299, 5, 24, "Output",ExpressionUUID->"44ffc4f0-b2d2-4075-89a9-0e160ce27b56",
 CellID->497508151]
}, Open  ]]
}, Open  ]],
Cell[61613, 1552, 735, 17, 52, "Text",ExpressionUUID->"029bce5b-1316-4f9b-8ef1-166d1a96621a",
 CellID->105446541],
Cell[CellGroupData[{
Cell[62373, 1573, 283, 8, 38, "MathCaption",ExpressionUUID->"e0f004e7-150a-4a0f-bb3e-0abe654b188d",
 CellID->25430490],
Cell[62659, 1583, 244, 6, 25, "Input",ExpressionUUID->"c1021f6c-4bf9-4b13-b7c9-29c99e46cbfb",
 CellID->140966850]
}, Open  ]],
Cell[CellGroupData[{
Cell[62940, 1594, 204, 2, 38, "MathCaption",ExpressionUUID->"1f3644c4-79cd-4747-9c36-edfac8fd7bd4",
 CellID->81177682],
Cell[CellGroupData[{
Cell[63169, 1600, 427, 10, 25, "Input",ExpressionUUID->"7e0d07eb-33fe-482b-8f25-a9c927eeb8ee",
 CellID->50269942],
Cell[63599, 1612, 396, 8, 24, "Output",ExpressionUUID->"a248cfd3-2218-4fed-a9a4-1a435aa3f8cb",
 CellID->373193810]
}, Open  ]]
}, Open  ]],
Cell[64022, 1624, 458, 11, 38, "Text",ExpressionUUID->"ed5ed630-5bc8-435f-a11a-3908c37c272f",
 CellID->453156352],
Cell[CellGroupData[{
Cell[64505, 1639, 248, 3, 38, "MathCaption",ExpressionUUID->"06ba60bf-4ba0-4099-8ba8-d1c1559c32a2",
 CellID->494606105],
Cell[64756, 1644, 593, 15, 25, "Input",ExpressionUUID->"c01dfd9f-edbb-48ff-840a-057249d9f94c",
 CellID->292353154],
Cell[CellGroupData[{
Cell[65374, 1663, 365, 7, 25, "Input",ExpressionUUID->"d2e32d02-adfe-4d45-b0c5-ac0d83086d53",
 CellID->600137366],
Cell[65742, 1672, 471, 9, 24, "Output",ExpressionUUID->"b127c992-f0d2-420f-9f3f-1b75bd252330",
 CellID->122007839]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[66262, 1687, 299, 5, 38, "MathCaption",ExpressionUUID->"d3289a92-b5d8-4a94-9db2-50219a4b1511",
 CellID->23778057],
Cell[CellGroupData[{
Cell[66586, 1696, 704, 15, 25, "Input",ExpressionUUID->"6352cd72-6c83-4784-877b-f1ae21f54656",
 CellID->107656848],
Cell[67293, 1713, 547, 10, 24, "Output",ExpressionUUID->"0ab8033a-cf91-4ee1-a8c3-1b585173f7fe",
 CellID->678437928]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[67889, 1729, 265, 5, 38, "MathCaption",ExpressionUUID->"e1918e42-8d07-4b66-959d-a340608e596b",
 CellID->35285899],
Cell[CellGroupData[{
Cell[68179, 1738, 428, 11, 25, "Input",ExpressionUUID->"812d6d50-f87a-465b-81f4-4eb9b270de77",
 CellID->88607472],
Cell[68610, 1751, 912, 22, 52, "Output",ExpressionUUID->"3a8e36c9-c445-446a-b4d1-86221f2f627c",
 CellID->228041293]
}, Open  ]]
}, Open  ]],
Cell[69549, 1777, 216, 4, 21, "Text",ExpressionUUID->"0f41b2df-3730-42f1-a0e9-0ed1baacde0d",
 CellID->255594995],
Cell[CellGroupData[{
Cell[69790, 1785, 331, 6, 52, "MathCaption",ExpressionUUID->"c5e6f978-e418-4710-88ab-f373ffb36ace",
 CellID->641584905],
Cell[CellGroupData[{
Cell[70146, 1795, 727, 14, 25, "Input",ExpressionUUID->"04f9e88e-8ca3-40a4-8ee1-db6eb79bb63a",
 CellID->412622337],
Cell[70876, 1811, 666, 12, 24, "Output",ExpressionUUID->"3e969029-5615-4da7-80e1-4f61674819f5",
 CellID->434940538]
}, Open  ]],
Cell[CellGroupData[{
Cell[71579, 1828, 507, 10, 25, "Input",ExpressionUUID->"7c41abc6-9fa4-403d-9edd-3979266986ea",
 CellID->901849200],
Cell[72089, 1840, 469, 9, 24, "Output",ExpressionUUID->"d3529641-079f-4c18-8b83-c62a87859df2",
 CellID->374203444]
}, Open  ]],
Cell[CellGroupData[{
Cell[72595, 1854, 562, 11, 25, "Input",ExpressionUUID->"c79157f8-cef5-47bf-a07b-01aa2ebda25c",
 CellID->349308121],
Cell[73160, 1867, 475, 9, 24, "Output",ExpressionUUID->"a317bdf4-fdff-4fd8-802b-3ca07e4ca169",
 CellID->9835156]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[73684, 1882, 458, 11, 60, "MathCaption",ExpressionUUID->"b54bf6af-0915-41f3-9cc9-63631165323f",
 CellID->92016512],
Cell[74145, 1895, 297, 6, 25, "Input",ExpressionUUID->"a09f1ac0-a647-44ec-8744-c1a22bf12b84",
 CellID->125095657]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[74491, 1907, 221, 3, 50, "Section",ExpressionUUID->"b55694d4-8272-4dab-a433-ca33b8d5ff63",
 CellID->419820630],
Cell[74715, 1912, 907, 17, 22, "Text",ExpressionUUID->"4229da10-47ac-4b52-889a-e9666aae4ee5",
 CellID->779510363],
Cell[75625, 1931, 1266, 22, 41, "DefinitionBox",ExpressionUUID->"24d4e30d-eda6-4357-ab04-88bdbac16d5e",
 CellID->76010766],
Cell[76894, 1955, 236, 3, 27, "Caption",ExpressionUUID->"502fb2e7-1ef1-49fd-89b9-2976e0260dac",
 CellID->93358605],
Cell[77133, 1960, 565, 11, 53, "Text",ExpressionUUID->"e21adb8f-4494-4706-975c-fba5959d8725",
 CellID->457163806],
Cell[77701, 1973, 1618, 33, 102, "Text",ExpressionUUID->"c163511d-a216-478f-9859-942d48d51c02",
 CellID->511979775],
Cell[79322, 2008, 685, 11, 36, "Text",ExpressionUUID->"3ce8a36f-c394-4f9f-9b91-a9c0f96cc3c6",
 CellID->166758029],
Cell[CellGroupData[{
Cell[80032, 2023, 532, 9, 38, "MathCaption",ExpressionUUID->"37710af6-703e-4fea-a2a4-1f1a853ed2ab",
 CellID->65680357],
Cell[CellGroupData[{
Cell[80589, 2036, 648, 14, 25, "Input",ExpressionUUID->"2e789c73-fe94-4718-9970-9e941ce6dd26",
 CellID->226840327],
Cell[81240, 2052, 664, 13, 35, "Output",ExpressionUUID->"229f543b-6bbf-4a8f-9a03-a06b2ed27a80",
 CellID->242503249]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[81953, 2071, 418, 5, 38, "MathCaption",ExpressionUUID->"39de99a4-7070-4a54-9be0-a15a1824701f",
 CellID->345062545],
Cell[CellGroupData[{
Cell[82396, 2080, 544, 11, 25, "Input",ExpressionUUID->"d4d98b24-5145-4fce-a06a-0bc04b542a53",
 CellID->558206195],
Cell[82943, 2093, 1888, 44, 66, "Output",ExpressionUUID->"01ad6ae4-7929-4aa0-ad6f-fa0a4feda615",
 CellID->868972825]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[84880, 2143, 320, 4, 38, "MathCaption",ExpressionUUID->"1d8c339e-ffe9-4a56-b69d-12026fb62f2e",
 CellID->59263332],
Cell[CellGroupData[{
Cell[85225, 2151, 837, 15, 25, "Input",ExpressionUUID->"95f721cd-8189-417d-9f6a-726f8b52b61c",
 CellID->42575265],
Cell[86065, 2168, 630, 11, 24, "Output",ExpressionUUID->"a7ff612f-a6d9-423d-8a47-6bea5f498903",
 CellID->204879607]
}, Open  ]],
Cell[CellGroupData[{
Cell[86732, 2184, 338, 7, 25, "Input",ExpressionUUID->"173db767-54b3-4f9c-85ef-bb98b0ea04ba",
 CellID->388862441],
Cell[87073, 2193, 468, 9, 24, "Output",ExpressionUUID->"1836ee76-cdb0-49d5-9974-160b6c976ba2",
 CellID->733635516]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[87590, 2208, 292, 5, 38, "MathCaption",ExpressionUUID->"8a1b9629-24e0-4d18-bb09-2863b2a59f62",
 CellID->163614416],
Cell[87885, 2215, 723, 17, 44, "Input",ExpressionUUID->"6df5f5ff-43f9-4033-8624-d83749311b6b",
 CellID->113516622],
Cell[CellGroupData[{
Cell[88633, 2236, 270, 5, 25, "Input",ExpressionUUID->"96e6bf96-cc4c-4d61-8626-5c9f3e402488",
 CellID->29763904],
Cell[88906, 2243, 296, 4, 24, "Output",ExpressionUUID->"5700503a-0347-453b-a3cb-02d35d301c43",
 CellID->131952752]
}, Open  ]],
Cell[CellGroupData[{
Cell[89239, 2252, 446, 9, 25, "Input",ExpressionUUID->"f307c19a-6803-4ad4-bcdd-86ec38857b6f",
 CellID->43546959],
Cell[89688, 2263, 472, 9, 24, "Output",ExpressionUUID->"4f24f63d-1b09-4e75-afe3-38762afba2cc",
 CellID->211914470]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[90209, 2278, 514, 11, 66, "MathCaption",ExpressionUUID->"ad54a5a6-dd21-4069-9797-7967e3de797e",
 CellID->61613211],
Cell[CellGroupData[{
Cell[90748, 2293, 474, 10, 25, "Input",ExpressionUUID->"8df14391-94fb-4098-ab54-77e60b8f76dd",
 CellID->346084844],
Cell[91225, 2305, 577, 13, 36, "Output",ExpressionUUID->"81a96e5c-d389-40e2-ba19-3f9a33dd1202",
 CellID->57804541]
}, Open  ]],
Cell[CellGroupData[{
Cell[91839, 2323, 415, 9, 25, "Input",ExpressionUUID->"375c969b-2c79-43c5-bef3-898cb654e303",
 CellID->200453411],
Cell[92257, 2334, 579, 13, 36, "Output",ExpressionUUID->"8deb3c66-99e6-41d7-8f05-2b699a5ca4d9",
 CellID->166025945]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[92897, 2354, 212, 3, 50, "Section",ExpressionUUID->"cc698813-6a99-435f-b90f-87864dae7c78",
 CellID->7569461],
Cell[93112, 2359, 409, 7, 51, "Text",ExpressionUUID->"02467c62-f4f9-404b-a9c7-6dce239079eb",
 CellID->594464066],
Cell[93524, 2368, 494, 8, 51, "Text",ExpressionUUID->"70c2b6b8-1c85-46ae-b885-a837746a0e01",
 CellID->92632341],
Cell[94021, 2378, 911, 20, 53, "Text",ExpressionUUID->"1c7ceadb-12ac-4983-b5f4-6e31f405725e",
 CellID->395169496],
Cell[94935, 2400, 1267, 22, 41, "DefinitionBox",ExpressionUUID->"63f00587-6744-4bd3-8bd2-81f086f9f97c",
 CellID->348821922],
Cell[96205, 2424, 286, 4, 27, "Caption",ExpressionUUID->"81a0d873-4457-4e0f-b0b1-228cb98afe68",
 CellID->191781415],
Cell[96494, 2430, 369, 7, 21, "Text",ExpressionUUID->"ca5a5cef-8195-46f9-bc8a-9e82208a3df3",
 CellID->164317926],
Cell[96866, 2439, 243, 4, 21, "Text",ExpressionUUID->"132fdbdb-adee-4249-a294-7c3a29b0c063",
 CellID->5306619],
Cell[CellGroupData[{
Cell[97134, 2447, 275, 4, 38, "MathCaption",ExpressionUUID->"d0bebe89-586e-4743-ac31-4659193cbb5b",
 CellID->302727579],
Cell[CellGroupData[{
Cell[97434, 2455, 446, 9, 25, "Input",ExpressionUUID->"404a86a2-d314-4c37-b752-b65e45503b64",
 CellID->244604783],
Cell[97883, 2466, 1168, 25, 69, "Output",ExpressionUUID->"c2c557f9-80b2-47d4-99c3-57bbf7975c4c",
 CellID->61758583]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[99112, 2498, 268, 4, 50, "Section",ExpressionUUID->"abe65af4-8946-4e5d-a503-0e589750b23b",
 CellID->607614576],
Cell[99383, 2504, 1101, 23, 55, "Text",ExpressionUUID->"649beedc-8579-4e3e-80c7-a9547fa53380",
 CellID->337228190],
Cell[100487, 2529, 1481, 28, 41, "DefinitionBox",ExpressionUUID->"52816851-22e6-48a3-9c8f-2b250843690c",
 CellID->77312680],
Cell[101971, 2559, 298, 4, 27, "Caption",ExpressionUUID->"acd67345-13a9-40bd-9112-b66aa2a167da",
 CellID->41284769],
Cell[102272, 2565, 466, 8, 36, "Text",ExpressionUUID->"3cdc92e1-86d2-47b0-9331-2fbaf5cfb2cb",
 CellID->592238353],
Cell[102741, 2575, 815, 18, 55, "Text",ExpressionUUID->"69263f9a-f4e3-4ba4-953b-da654e79d64c",
 CellID->107426830],
Cell[103559, 2595, 1153, 31, 56, "Text",ExpressionUUID->"8086e6fa-4905-484b-8057-66bc0ede62a7",
 CellID->569057450],
Cell[104715, 2628, 978, 22, 68, "Text",ExpressionUUID->"3a9ed5f4-a3d5-43be-8ff2-2fa2fa0af6a2",
 CellID->203985613],
Cell[CellGroupData[{
Cell[105718, 2654, 328, 6, 52, "MathCaption",ExpressionUUID->"091fdbc0-38fc-41fc-84ec-ad9f2771b372",
 CellID->306516178],
Cell[CellGroupData[{
Cell[106071, 2664, 668, 17, 62, "Input",ExpressionUUID->"fee1d231-05e4-4f03-a453-a9d1c24badf6",
 CellID->109647490],
Cell[106742, 2683, 2257, 54, 66, "Output",ExpressionUUID->"6d213a72-e5f1-47a2-b6bd-b5930016b94b",
 CellID->148094653]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[109048, 2743, 260, 5, 38, "MathCaption",ExpressionUUID->"110a7e4b-ebc6-4b06-b4d2-a591fee81243",
 CellID->278165160],
Cell[CellGroupData[{
Cell[109333, 2752, 437, 9, 25, "Input",ExpressionUUID->"255e02d5-e3bd-4f2d-8379-4ca71bf23f69",
 CellID->11797651],
Cell[109773, 2763, 2233, 54, 66, "Output",ExpressionUUID->"ec1c47da-31c8-469d-92fe-0cceb1b6b2f4",
 CellID->48995446]
}, Open  ]]
}, Open  ]],
Cell[112033, 2821, 538, 13, 36, "Text",ExpressionUUID->"97c3d1bb-21ee-4108-bfa3-61dbab8b92e9",
 CellID->327181305]
}, Open  ]],
Cell[CellGroupData[{
Cell[112608, 2839, 209, 3, 50, "Section",ExpressionUUID->"09517d08-06aa-4980-b400-5c25a930fdca",
 CellID->355043246],
Cell[112820, 2844, 1367, 21, 126, "Text",ExpressionUUID->"f60a3aac-ffed-4ccc-b8ad-ee8dd31fb785",
 CellID->70163520],
Cell[114190, 2867, 43459, 718, 295, "Text",ExpressionUUID->"c47a210f-49b1-4e1f-b858-a46a93f1d189",
 CellID->372869032],
Cell[157652, 3587, 466, 9, 27, "Caption",ExpressionUUID->"83a6e0d5-9a4c-4d91-87a7-7d747943b2ff",
 CellID->209083968],
Cell[158121, 3598, 1312, 24, 126, "Text",ExpressionUUID->"6fed0ade-b36b-4adf-b72e-e4e4c6092b70",
 CellID->231316985],
Cell[CellGroupData[{
Cell[159458, 3626, 250, 3, 38, "Subsection",ExpressionUUID->"5755e51e-c9bc-48e6-a1cc-af54ec044be1",
 CellID->567477762],
Cell[159711, 3631, 942, 14, 96, "Text",ExpressionUUID->"7e1b0a58-334f-4dbe-90ec-aff387e02783",
 CellID->311551272],
Cell[160656, 3647, 340, 6, 36, "Text",ExpressionUUID->"8c7f4d3c-1f70-442f-99cd-37ac51917da9",
 CellID->474123320],
Cell[CellGroupData[{
Cell[161021, 3657, 287, 5, 38, "MathCaption",ExpressionUUID->"89a4efb5-eebe-4a6a-b566-23deee3683ae",
 CellID->198945292],
Cell[CellGroupData[{
Cell[161333, 3666, 704, 16, 25, "Input",ExpressionUUID->"92750741-beda-4ba7-8f9a-8db3c9cbb4ea",
 CellID->37790736],
Cell[162040, 3684, 449, 8, 19, "Message",ExpressionUUID->"a03d736e-e81b-4031-aa9f-422c87ff1607",
 CellID->393304334],
Cell[162492, 3694, 711, 12, 24, "Output",ExpressionUUID->"421ae469-d398-44b1-9797-408c38a26a88",
 CellID->793567354]
}, Open  ]]
}, Open  ]],
Cell[163230, 3710, 241, 4, 21, "Text",ExpressionUUID->"d71bf8af-8b09-4c6e-9eb6-f1df23082b38",
 CellID->45841113],
Cell[CellGroupData[{
Cell[163496, 3718, 375, 6, 52, "MathCaption",ExpressionUUID->"f9925eac-f83c-4df2-9113-ce00ad308527",
 CellID->348159098],
Cell[CellGroupData[{
Cell[163896, 3728, 426, 8, 25, "Input",ExpressionUUID->"9b66b637-6835-41b5-8d4d-0b1dd546ab30",
 CellID->69770858],
Cell[164325, 3738, 473, 8, 19, "Message",ExpressionUUID->"ff53a391-45e0-4a56-bcd1-95ddf7e469a6",
 CellID->330325075]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[164847, 3752, 263, 5, 38, "MathCaption",ExpressionUUID->"459ea09a-1ced-4193-8337-f8b6370ee1b6",
 CellID->15873794],
Cell[CellGroupData[{
Cell[165135, 3761, 419, 8, 25, "Input",ExpressionUUID->"153cce50-6ac5-42a2-b250-1d3a3ba48ae7",
 CellID->38099927],
Cell[165557, 3771, 401, 7, 19, "Message",ExpressionUUID->"5c676841-d7fd-439d-a6ae-4c58d88cb3c1",
 CellID->743947544],
Cell[165961, 3780, 604, 13, 36, "Output",ExpressionUUID->"82c8b762-faf9-4f3c-8638-c1019e8a73ca",
 CellID->200659325]
}, Open  ]]
}, Open  ]],
Cell[166592, 3797, 517, 9, 51, "Text",ExpressionUUID->"8066111a-b357-4efb-acfa-816864b06aaa",
 CellID->786536758],
Cell[CellGroupData[{
Cell[167134, 3810, 448, 8, 66, "MathCaption",ExpressionUUID->"7085d2cc-696b-4d96-8415-54f68a9ec0b7",
 CellID->34559254],
Cell[CellGroupData[{
Cell[167607, 3822, 557, 11, 25, "Input",ExpressionUUID->"667d95dc-32d7-433c-a9ce-86d060579984",
 CellID->304589978],
Cell[168167, 3835, 1305, 30, 60, "Output",ExpressionUUID->"40d9f1ab-fe53-406f-ad11-8a81f6ea62e9",
 CellID->212515285]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[169545, 3873, 359, 5, 50, "Section",ExpressionUUID->"ae8866fd-c1dc-43ea-bc3c-3eb34fb1c77f",
 CellID->59127286],
Cell[169907, 3880, 980, 17, 51, "Text",ExpressionUUID->"44be7160-089d-4bc3-8064-ad462d7e8442",
 CellID->67387048],
Cell[170890, 3899, 1541, 28, 41, "DefinitionBox",ExpressionUUID->"23953fa6-af22-4557-96b8-ca4d9aaba5a7",
 CellID->662354869],
Cell[172434, 3929, 359, 4, 27, "Caption",ExpressionUUID->"b2a2fe58-1485-4fd0-a52e-c4fd8549adbe",
 CellID->107467495],
Cell[172796, 3935, 482, 8, 51, "Text",ExpressionUUID->"4c9937e5-a0fc-411b-9aee-0bfa0a8a53a1",
 CellID->307684685],
Cell[173281, 3945, 438, 7, 51, "Text",ExpressionUUID->"8e097f4b-4c49-41cf-a6ac-9f8aef36313e",
 CellID->156526136],
Cell[CellGroupData[{
Cell[173744, 3956, 459, 8, 38, "MathCaption",ExpressionUUID->"4dc2eff1-6bd5-461b-a662-efad7a201378",
 CellID->422065167],
Cell[CellGroupData[{
Cell[174228, 3968, 971, 19, 25, "Input",ExpressionUUID->"80648ebc-1c68-4841-bd88-db498bd5ba35",
 CellID->80172452],
Cell[175202, 3989, 583, 12, 33, "Output",ExpressionUUID->"2144103b-c9bd-49e2-a1b0-aaf1f6f3cf28",
 CellID->171211079]
}, Open  ]],
Cell[CellGroupData[{
Cell[175822, 4006, 488, 12, 25, "Input",ExpressionUUID->"7a880fe4-8048-40ff-9334-8afba282fee1",
 CellID->30852540],
Cell[176313, 4020, 529, 12, 33, "Output",ExpressionUUID->"bc807058-80d9-4718-9760-9e6adee22601",
 CellID->131383124]
}, Open  ]],
Cell[CellGroupData[{
Cell[176879, 4037, 290, 7, 25, "Input",ExpressionUUID->"b2e7f320-0318-40ce-ba3b-e4698e86e18a",
 CellID->791991855],
Cell[177172, 4046, 368, 7, 33, "Output",ExpressionUUID->"43c59e91-394f-455c-bcc2-faf66d07630a",
 CellID->17520033]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[177589, 4059, 363, 9, 38, "MathCaption",ExpressionUUID->"0d54fba6-9857-4d1a-a928-e8c2fdd5a570",
 CellID->224255328],
Cell[CellGroupData[{
Cell[177977, 4072, 485, 8, 25, "Input",ExpressionUUID->"8c061923-9e32-44fd-8d60-a22d8d34a3b1",
 CellID->749135514],
Cell[178465, 4082, 2255, 54, 66, "Output",ExpressionUUID->"c6dc70a9-fcda-4ab1-8381-acaa02934e77",
 CellID->352947584]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[180769, 4142, 461, 10, 38, "MathCaption",ExpressionUUID->"c00001cf-cc00-4c76-a263-e6e2171bc14d",
 CellID->255082240],
Cell[CellGroupData[{
Cell[181255, 4156, 538, 9, 25, "Input",ExpressionUUID->"dd026df7-021c-422d-a7ca-b26c81943d16",
 CellID->105178510],
Cell[181796, 4167, 2257, 53, 66, "Output",ExpressionUUID->"6728fdbe-0a5a-4cad-bee6-7171f5e9a3c7",
 CellID->286747656]
}, Open  ]]
}, Open  ]],
Cell[184080, 4224, 267, 5, 21, "Text",ExpressionUUID->"ba321d99-d550-4049-9540-b3190d1ab793",
 CellID->4580821],
Cell[CellGroupData[{
Cell[184372, 4233, 251, 4, 38, "MathCaption",ExpressionUUID->"42a72ba3-582c-4587-ae00-30be80d2a9ec",
 CellID->63126096],
Cell[CellGroupData[{
Cell[184648, 4241, 578, 15, 25, "Input",ExpressionUUID->"c5cdaec4-7e17-4666-a823-c385c5d24806",
 CellID->173193684],
Cell[185229, 4258, 726, 17, 36, "Output",ExpressionUUID->"c9fbe97c-33a9-4e5e-b879-1fcdd264841c",
 CellID->125816210]
}, Open  ]],
Cell[CellGroupData[{
Cell[185992, 4280, 578, 15, 25, "Input",ExpressionUUID->"1a2ad0dd-28be-435d-b5da-ac0ed668ed9c",
 CellID->280996417],
Cell[186573, 4297, 723, 17, 36, "Output",ExpressionUUID->"acd10132-3696-4364-a8e3-e2368f0d9fff",
 CellID->308679660]
}, Open  ]]
}, Open  ]],
Cell[187323, 4318, 1000, 14, 66, "Text",ExpressionUUID->"76c86f7b-6093-4e84-a74a-5f3c0028d919",
 CellID->125930538]
}, Open  ]],
Cell[CellGroupData[{
Cell[188360, 4337, 325, 5, 50, "Section",ExpressionUUID->"aba96ead-cc21-4897-9762-900c5c6b0fbb",
 CellID->221654001],
Cell[188688, 4344, 489, 8, 51, "Text",ExpressionUUID->"70e9bacd-59bc-4ed3-876a-248d9f2f77d9",
 CellID->9091236],
Cell[189180, 4354, 454, 9, 36, "Text",ExpressionUUID->"2da180ba-8117-4229-8e08-1d0f60286c08",
 CellID->264899],
Cell[CellGroupData[{
Cell[189659, 4367, 718, 11, 80, "MathCaption",ExpressionUUID->"8dcbe7f9-ae1d-4692-8fc0-cedac97f68f9",
 CellID->357286776],
Cell[CellGroupData[{
Cell[190402, 4382, 535, 12, 25, "Input",ExpressionUUID->"6a4a36a1-edeb-43ce-8668-d50ca04cfe9d",
 CellID->157226984],
Cell[190940, 4396, 450, 8, 33, "Output",ExpressionUUID->"ef6bf8d1-a111-4765-94b4-59fec36e11f4",
 CellID->299094355]
}, Open  ]],
Cell[CellGroupData[{
Cell[191427, 4409, 433, 10, 25, "Input",ExpressionUUID->"ff544699-e376-42a2-95f2-cd9d06561fa9",
 CellID->67756654],
Cell[191863, 4421, 302, 6, 33, "Output",ExpressionUUID->"aa6fd4b1-456b-4c5e-8187-5f51f0c63b1e",
 CellID->66926118]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[192214, 4433, 190, 2, 38, "MathCaption",ExpressionUUID->"38a3047f-942e-4944-9238-826df2dee869",
 CellID->537344581],
Cell[192407, 4437, 3928, 88, 242, "Input",ExpressionUUID->"a8b1bca2-2770-481b-866e-f4b3da2670f5",
 CellID->56059221]
}, Open  ]],
Cell[CellGroupData[{
Cell[196372, 4530, 188, 2, 38, "MathCaption",ExpressionUUID->"af750d1f-ccd3-4abd-b6b9-de8dbeb7c242",
 CellID->451204585],
Cell[196563, 4534, 3840, 102, 260, "Input",ExpressionUUID->"84c5107a-83cd-4c32-83e9-2d60f0010f62",
 CellID->9284284]
}, Open  ]],
Cell[CellGroupData[{
Cell[200440, 4641, 177, 2, 38, "MathCaption",ExpressionUUID->"9b9ae76c-6f8f-4b5d-b59d-920d17ed718c",
 CellID->391770430],
Cell[CellGroupData[{
Cell[200642, 4647, 1132, 24, 80, "Input",ExpressionUUID->"d2e540ce-ff6e-4b5c-9ab3-d1deeb01dc3e",
 CellID->453853607],
Cell[201777, 4673, 44949, 928, 404, "Output",ExpressionUUID->"48169a0c-1cdb-4d6f-a9b8-f26e08157ce2",
 CellID->709171468]
}, Open  ]]
}, Open  ]],
Cell[246753, 5605, 479, 8, 51, "Text",ExpressionUUID->"e277c920-1b92-457d-a0c5-c09c162eaa98",
 CellID->464233227]
}, Open  ]],
Cell[CellGroupData[{
Cell[247269, 5618, 267, 4, 50, "Section",ExpressionUUID->"825d5a8b-5213-41c4-99e2-3ee29659c691",
 CellID->266225053],
Cell[247539, 5624, 411, 7, 36, "Text",ExpressionUUID->"cd3bbd60-9f89-4007-848f-1e2c823e4d55",
 CellID->258668859],
Cell[247953, 5633, 1162, 17, 96, "Text",ExpressionUUID->"7f103df4-fd73-4872-950c-1a7c92f48fec",
 CellID->133424027],
Cell[249118, 5652, 393, 7, 36, "Text",ExpressionUUID->"d32129ad-95d4-4b64-b149-3e8823ce78eb",
 CellID->395914649],
Cell[249514, 5661, 232, 4, 21, "Text",ExpressionUUID->"7df92665-2022-4c36-816e-f63eca781223",
 CellID->455957052],
Cell[249749, 5667, 1227, 25, 76, "BulletedText",ExpressionUUID->"a77dc4d7-76b3-4180-9c6b-e57a042b2d46",
 CellID->132058655],
Cell[250979, 5694, 1195, 24, 76, "BulletedText",ExpressionUUID->"b4c38d98-e3e4-4b96-a10f-4c0039b85480",
 CellID->983206561],
Cell[252177, 5720, 549, 9, 66, "Text",ExpressionUUID->"30b14f0b-755b-4e5a-8159-d14a349db461",
 CellID->67127027],
Cell[CellGroupData[{
Cell[252751, 5733, 308, 6, 38, "MathCaption",ExpressionUUID->"17e375da-b310-4bf7-bc29-8a994287b0d3",
 CellID->342875855],
Cell[CellGroupData[{
Cell[253084, 5743, 309, 8, 28, "Input",ExpressionUUID->"2b09a637-d5dc-49fc-81e0-cd2203da0c21",
 CellID->544419760],
Cell[253396, 5753, 403, 8, 33, "Output",ExpressionUUID->"adda5dfe-b3b7-48c6-ac29-d385fd650791",
 CellID->50126198]
}, Open  ]],
Cell[CellGroupData[{
Cell[253836, 5766, 336, 8, 28, "Input",ExpressionUUID->"25a6c3ab-b170-4d71-a43d-07ee060e558c",
 CellID->229205228],
Cell[254175, 5776, 386, 8, 33, "Output",ExpressionUUID->"e8597e8d-d05c-48e4-95a1-bdc1480c5fcb",
 CellID->428958342]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[254610, 5790, 259, 5, 52, "MathCaption",ExpressionUUID->"7c55050b-7409-4b12-8348-23ffc01dc342",
 CellID->112963140],
Cell[CellGroupData[{
Cell[254894, 5799, 534, 10, 28, "Input",ExpressionUUID->"4b1423bd-81c2-4a76-8c5b-33cac8bd77ae",
 CellID->176014021],
Cell[255431, 5811, 1313, 31, 36, "Output",ExpressionUUID->"ce0f99ff-90f2-42c1-a435-a304e383d799",
 CellID->114647480]
}, Open  ]],
Cell[CellGroupData[{
Cell[256781, 5847, 405, 8, 28, "Input",ExpressionUUID->"e514555a-c792-4b09-a40e-c824f47dae80",
 CellID->335975204],
Cell[257189, 5857, 1222, 29, 36, "Output",ExpressionUUID->"6f04bef4-fdf7-4d28-9696-551f279c3133",
 CellID->497125110]
}, Open  ]]
}, Open  ]],
Cell[258438, 5890, 364, 6, 36, "Text",ExpressionUUID->"690d4e1e-4c74-47f4-a5a6-e39672d4d393",
 CellID->76624845]
}, Open  ]],
Cell[CellGroupData[{
Cell[258839, 5901, 264, 4, 50, "Section",ExpressionUUID->"075a3a4b-38b4-4b73-a092-b6402ee32d1d",
 CellID->328677578],
Cell[259106, 5907, 1190, 19, 66, "Text",ExpressionUUID->"8bf9b751-cbc5-49b4-8df0-3948eeac6a33",
 CellID->284819056],
Cell[260299, 5928, 1750, 33, 41, "DefinitionBox",ExpressionUUID->"7f04dd4f-3415-46bd-93b9-fd34c1e6401c",
 CellID->60910840],
Cell[262052, 5963, 355, 4, 27, "Caption",ExpressionUUID->"9accd748-f876-4794-ad49-fd08e6a4f515",
 CellID->392021],
Cell[262410, 5969, 632, 10, 51, "Text",ExpressionUUID->"2ac527aa-5314-499a-be28-671d06bcd308",
 CellID->164191590],
Cell[263045, 5981, 1021, 22, 71, "Text",ExpressionUUID->"50004f92-99eb-430b-8145-7b2466241e2c",
 CellID->35419738],
Cell[264069, 6005, 1253, 24, 100, "Text",ExpressionUUID->"5361bbf9-04eb-4405-b7d0-f2ac41fc024c",
 CellID->283787862],
Cell[265325, 6031, 483, 8, 36, "Text",ExpressionUUID->"49e51d5e-07fb-4f8a-8d49-d1d4109f9fde",
 CellID->357614613],
Cell[CellGroupData[{
Cell[265833, 6043, 396, 7, 52, "MathCaption",ExpressionUUID->"7738541f-915d-487c-b2ec-08493119cf24",
 CellID->471966478],
Cell[CellGroupData[{
Cell[266254, 6054, 220, 4, 25, "Input",ExpressionUUID->"a5b473ab-dda1-47f7-b501-2a133df5b1c4",
 CellID->449258204],
Cell[266477, 6060, 291, 6, 24, "Output",ExpressionUUID->"42519a38-35b4-4353-98f4-f41d89ae1ed2",
 CellID->159193850]
}, Open  ]],
Cell[CellGroupData[{
Cell[266805, 6071, 740, 19, 46, "Input",ExpressionUUID->"31b2dbc6-69bd-4bd7-a416-5f5f307006e0",
 CellID->8156225],
Cell[267548, 6092, 1072, 26, 65, "Output",ExpressionUUID->"49a593bf-6d52-4d22-a44e-babf9c3566aa",
 CellID->405967293]
}, Open  ]]
}, Open  ]],
Cell[268647, 6122, 593, 9, 51, "Text",ExpressionUUID->"5beebafa-1d81-4597-a617-1607a43f10f6",
 CellID->249554189],
Cell[CellGroupData[{
Cell[269265, 6135, 396, 7, 52, "MathCaption",ExpressionUUID->"53e21de5-410e-4b3f-a2e2-f270f7188895",
 CellID->194654352],
Cell[CellGroupData[{
Cell[269686, 6146, 836, 21, 46, "Input",ExpressionUUID->"a0898525-5949-4242-bafe-7d59b9e8f7a7",
 CellID->139431381],
Cell[270525, 6169, 913, 23, 65, "Output",ExpressionUUID->"2a52860d-dddc-4e41-b79c-6f1c89dcddf5",
 CellID->65480128]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[271487, 6198, 440, 8, 52, "MathCaption",ExpressionUUID->"05e80b98-0110-4001-97e8-aa3fab9aba94",
 CellID->152907918],
Cell[CellGroupData[{
Cell[271952, 6210, 488, 9, 25, "Input",ExpressionUUID->"eaaa1fe6-3e88-44f6-81a3-ae10c6958a83",
 CellID->149833332],
Cell[272443, 6221, 978, 23, 65, "Output",ExpressionUUID->"793891a0-7310-4c03-9380-a5c4cbfcec6d",
 CellID->195243360]
}, Open  ]],
Cell[CellGroupData[{
Cell[273458, 6249, 427, 8, 25, "Input",ExpressionUUID->"579820e2-9250-4c4b-b80b-32e9942649a5",
 CellID->154902391],
Cell[273888, 6259, 981, 24, 65, "Output",ExpressionUUID->"80dbac6c-68e0-470a-a246-b0569db90490",
 CellID->142022961]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[274918, 6289, 413, 7, 66, "MathCaption",ExpressionUUID->"09fe5a82-f5d8-4f9e-b111-91d0dc135483",
 CellID->510416336],
Cell[CellGroupData[{
Cell[275356, 6300, 513, 10, 28, "Input",ExpressionUUID->"135e50a5-e43b-4f8e-b0b4-9b0ffd16ac6d",
 CellID->169297097],
Cell[275872, 6312, 1042, 26, 65, "Output",ExpressionUUID->"f848522f-2f67-485b-8b34-2355ffc08ead",
 CellID->117527292]
}, Open  ]],
Cell[CellGroupData[{
Cell[276951, 6343, 512, 10, 28, "Input",ExpressionUUID->"7024323c-cb25-446c-9dcf-37a879f7c6be",
 CellID->24586238],
Cell[277466, 6355, 1010, 25, 65, "Output",ExpressionUUID->"405ee030-8249-4fc2-9809-f15c4f13be46",
 CellID->121117230]
}, Open  ]]
}, Open  ]],
Cell[278503, 6384, 545, 9, 66, "Text",ExpressionUUID->"6291f3e0-4b7d-45af-9139-b00fab570281",
 CellID->267651511],
Cell[CellGroupData[{
Cell[279073, 6397, 208, 2, 38, "MathCaption",ExpressionUUID->"f5ae30e7-b8f7-43a9-a08c-ca66dc04ad47",
 CellID->775472793],
Cell[CellGroupData[{
Cell[279306, 6403, 440, 9, 27, "Input",ExpressionUUID->"b2682fb2-c39e-47c0-8724-6a993a1ff33b",
 CellID->225223365],
Cell[279749, 6414, 613, 16, 43, "Output",ExpressionUUID->"393f4bf9-575c-44e5-bade-5a9c45543f6b",
 CellID->212179532]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[280411, 6436, 259, 3, 38, "MathCaption",ExpressionUUID->"ca30d6b3-1e1a-467b-80a2-a61be2ca77a4",
 CellID->39931563],
Cell[CellGroupData[{
Cell[280695, 6443, 440, 9, 27, "Input",ExpressionUUID->"d0b6e93f-538b-4b1e-8eb3-49652f745301",
 CellID->3156862],
Cell[281138, 6454, 613, 16, 43, "Output",ExpressionUUID->"d655381e-584a-4e8e-8050-f83f0db0102b",
 CellID->445160699]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[281812, 6477, 199, 3, 50, "Section",ExpressionUUID->"270c355b-3449-4662-90f8-b31216668ccf",
 CellID->776680],
Cell[282014, 6482, 347, 6, 36, "Text",ExpressionUUID->"7e712525-102d-486d-ad3e-05d19c89a63e",
 CellID->442085681],
Cell[282364, 6490, 432, 7, 51, "Text",ExpressionUUID->"3ef57053-9954-43f3-9a56-d09cd347b90e",
 CellID->645428874]
}, Open  ]],
Cell[CellGroupData[{
Cell[282833, 6502, 120, 1, 70, "TutorialMoreAboutSection",ExpressionUUID->"25f77bf4-5f5b-40f4-b7db-db33d3a3502c",
 CellID->23220180],
Cell[282956, 6505, 282, 4, 20, "TutorialMoreAbout",ExpressionUUID->"c443d1d5-bc00-4a1f-825f-c4bfc2d47324",
 CellID->1567025153]
}, Open  ]],
Cell[CellGroupData[{
Cell[283275, 6514, 127, 1, 70, "RelatedTutorialsSection",ExpressionUUID->"89f78c7d-f7c0-4dba-b37d-9c13e8be31e4",
 CellID->415694126],
Cell[283405, 6517, 296, 5, 20, "RelatedTutorials",ExpressionUUID->"0d2e3c1e-2296-4a21-8bb5-147b2d8c94f6",
 CellID->90776795],
Cell[283704, 6524, 353, 6, 20, "RelatedTutorials",ExpressionUUID->"2a574757-fecd-4c94-83e3-5caa42c319a0",
 CellID->478075264],
Cell[284060, 6532, 434, 6, 20, "RelatedTutorials",ExpressionUUID->"9cc3c05b-4dfe-4b7e-9c04-1827b382e1c7",
 CellID->72633640],
Cell[284497, 6540, 376, 6, 20, "RelatedTutorials",ExpressionUUID->"3659f5cf-c26a-4ff3-88e7-c7cb8bee9a26",
 CellID->208940830],
Cell[284876, 6548, 399, 7, 20, "RelatedTutorials",ExpressionUUID->"075d9904-e964-4a99-b617-d263b99b5715",
 CellID->806871991],
Cell[285278, 6557, 347, 6, 20, "RelatedTutorials",ExpressionUUID->"ae633430-7687-4546-b8f1-cabe0a01b926",
 CellID->6214240]
}, Open  ]],
Cell[CellGroupData[{
Cell[285662, 6568, 153, 1, 70, "TutorialRelatedLinksSection",ExpressionUUID->"19a31833-8cbe-4a8b-92d4-bbb1531f3e4e",
 CellID->415694148],
Cell[285818, 6571, 111, 1, 20, "TutorialRelatedLinks",ExpressionUUID->"45a65e8e-e4f4-4f30-a7f9-d1e34fa4d639",
 CellID->415694149]
}, Open  ]]
}, Open  ]]
}
]
*)

